{"version":3,"sources":["AppTheme.js","components/commonStyles.js","features/actions.js","features/axiosSettings.js","features/users/apiCalls.js","features/users/usersSlice.js","features/project/apiCalls.js","features/project/projectSlice.js","features/auth/apiCalls.js","features/auth/authSlice.js","hooks/useNotAuth.js","components/sideBar/listItems.js","components/styles.js","features/theme/themeSlice.js","components/footer/Copyright.js","components/Auth/styles.js","features/auth/loginSlice.js","components/form/validators.js","components/form/fields.js","components/Auth/SubmitButton.js","components/Auth/login/Login.js","features/auth/signUpSlice.js","components/Auth/signUp/SignUp.js","components/content/projects/styles.js","hooks/useClickAway.js","components/content/projects/settings/CategoryMenu.js","utils/patternCreator.js","commonComponents/styles.js","commonComponents/Modal.js","hooks/useDebounce.js","pickers/ColorPicker.js","pickers/contrastColor.js","components/commonComponents/settings/styles.js","components/commonComponents/settings/BackGroundColorPicker.js","components/commonComponents/settings/SettingsWrapper.js","components/content/projects/settings/SettingsMenu.js","components/content/projects/NewProject.js","commonComponents/ConfirmWindow.js","components/content/projects/EditModeProject.js","components/content/projects/Project.js","components/content/projects/ProjectSkeleton.js","components/commonComponents/styles.js","features/search/apiCalls.js","features/search/searchSlice.js","components/commonComponents/SearchResult.js","components/commonComponents/TopControll.js","components/content/projects/Projects.js","components/content/users/Users.js","components/content/Root.js","components/content/users/ProfilePreloader.js","components/content/users/MyProfile.js","features/task/apiCalls.js","features/task/tasksSlice.js","components/content/tasks/settings/SettingsMenu.js","components/content/tasks/styles.js","components/content/tasks/NewTask.js","components/content/tasks/EditModeTask.js","components/commonComponents/StyledComponents.js","components/content/tasks/Task.js","components/commonComponents/DragAndDropList.js","components/content/tasks/Tasks.js","components/content/projects/ProjectPage.js","components/content/users/Profile.js","features/auth/forgotPasswordSlice.js","components/Auth/forgotPassword/ForgotPassword.js","components/Auth/forgotPassword/ResetPassword.js","components/content/ContentSwitch.js","components/Auth/AuthButton.js","components/Context.js","components/BaseStricture.js","App.js","app/store.js","serviceWorker.js","index.js"],"names":["dark","palette","type","text","primary","light","background","default","linkStyle","textDecoration","color","authLink","CREATE","MY_PROFILE_FETCH","USERS_FETCH","ACTIVE_USER_FETCH","DELETE","EDIT","COMPLETE_STATUS","PROJECTS_LOADING","TASKS_LOADING","ORDER_CHANGE","axiosInstance","axios","withCredentials","baseURL","process","usersApi","getMyProfile","get","then","response","data","getUsers","getUser","userId","initialState","pending","myProfileFetching","activeUserFetching","usersFetching","totalUsersCount","authUser","activeUser","users","err","usersSlice","createSlice","name","reducers","state","action","payload","stopPending","setAuthUser","setActiveUser","clearActiveUser","setUsers","incrementAuthUserProjectsCount","projectsCount","decrementAuthUserProjectsCount","setTotalUsersCount","reset","actions","user","isFetching","projectApi","newProject","project","post","getProjects","page","count","path","getProject","projectId","deleteProject","delete","editProject","put","_id","create","projectsLoading","activeProject","projectsPage","projects","editMode","error","isFetched","projectCreated","projectSlice","id","filter","firstLoadComplete","setProjects","setActiveProject","addProjectToBegining","updateProject","isFinded","map","projectCreatedStatusToDefault","turnEditModeOn","turnEditModeOff","failure","clearError","projectEditMode","authApi","authMe","logout","login","email","password","rememberMe","signUp","surname","alias","forgotPassword","resetPassword","resetCode","authSlice","isAuthorized","success","notAuthorized","auth","dispatch","res","console","log","catch","useNotAuth","isAuth","useSelector","progress","MainListItems","notAuth","authOnlyItems","style","to","ListItem","button","ListItemIcon","ListItemText","secondaryListItems","ListSubheader","inset","useStyles","makeStyles","theme","root","display","toolbar","paddingRight","toolbarIcon","alignItems","justifyContent","padding","mixins","loginButton","appBar","zIndex","drawer","transition","transitions","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","width","enteringScreen","breakpoints","down","menuButton","marginRight","menuButtonHidden","title","flexGrow","drawerPaper","position","whiteSpace","spacing","drawerPaperClose","overflowX","up","appBarSpacer","content","height","overflow","boxShadow","webkitBoxShadow","backgroundColor","container","paddingTop","paddingBottom","paper","flexDirection","fixedHeight","contentWraper","minHeight","marginBottom","footer","push","themeSlice","darkMode","localStorage","getItem","sideBarOpen","toggleDarkMode","setItem","toggleSideBar","Copyright","Typography","variant","align","Date","getFullYear","image","backgroundImage","backgroundRepeat","grey","backgroundSize","backgroundPosition","margin","avatar","secondary","main","form","marginTop","fontSize","paddingLeft","WebkitBoxShadow","WebkitTextFillColor","submit","SubmitButton","submitButtonWraper","submitButtonProgress","top","left","loginSlice","loginSuccess","requiredEmail","value","undefined","required","isValidEmail","match","requiredPassword","passwordLength","length","paswordContainNumbersAndLetters","numbersCount","lettersCount","i","isNaN","parseInt","passwordConfirmation","values","errors","composeValidators","validators","reduce","validator","Input","input","meta","restProps","isFieldError","errType","TextField","onClick","autoComplete","label","onChange","touched","multiline","autoFocus","fullWidth","helperText","message","CheckBox","Checkbox","props","classes","className","Button","disabled","buttonText","CircularProgress","size","LoginForm","useDispatch","serverError","clearErr","onSubmit","handleSubmit","validate","component","FormControlLabel","control","Login","Grid","CssBaseline","item","xs","sm","md","Paper","elevation","square","Avatar","projectsReset","usersReset","signUpSlice","signUpSuccess","SignUpForm","SignUp","isAccountCreated","useEffect","Box","getContrastColor","topControll","projectsContainer","transform","menuItem","projectLink","hide","visibility","newProjectHeader","textAlign","newProjectInput","projectMenu","createProjectWrapper","settingsMenu","blueGrey","settingsFields","flexWrap","settingsField","minWidth","categorySearchResult","editButtonGroup","useClickAway","ref","exception","callBack","handleClickOutside","event","current","contains","target","document","addEventListener","removeEventListener","categoryTest","CategoryMenu","useState","anchorEl","setAnchorEl","searchText","setSearchText","filteredCategories","setFilteredCategories","selectedIndex","setSelectedIndex","clickAwayRef","useRef","list","filtered","category","toLowerCase","includes","expression","str","pattern","split","char","join","patternCreator","regex","RegExp","checkString","chooseCategory","e","currentTarget","getAttribute","onKeyDown","listLength","childElementCount","key","prev","childNodes","Popper","open","Boolean","placement","List","selected","backDrop","modalContainer","sideBarClose","confirmDeleteModal","modalRoot","getElementById","Modal","children","onClose","sideBarCollapse","ReactDOM","createPortal","onMouseDown","clsx","useDebounce","delay","debouncedValue","setDebouncedValue","handler","setTimeout","clearTimeout","ColorPicker","setColor","pickedColor","handleChange","hex","indexOf","slice","colorPreview","BackGroundColorPicker","colorPickerOpen","setColorPickerOpen","IconButton","SettingsWrapper","Card","CardContent","Divider","child","SettingsMenu","Select","native","privacySettings","projectName","reducer","NewProject","settingsMenuOpen","setSettingsMenuOpen","useReducer","dispatchLocal","projectCreationStatus","setNewProjectMenuOpen","CardHeader","titleTypographyProps","onFocus","select","placeholder","ConfirmWindow","onConfirm","EditModeProject","cancelEdit","Project","deleteConfirmOpen","setDeleteConfirmOpen","projectToDelete","setProjectToDelete","history","useHistory","handleClose","closeConfirmWindow","some","location","pathname","projectHeader","subheader","editDate","toUTCString","keepMounted","getContentAnchorEl","anchorOrigin","vertical","horizontal","transformOrigin","MenuItem","replace","ProjectSkeleton","Skeleton","search","borderRadius","shape","fade","info","searchIcon","pointerEvents","searchMenu","right","inputInput","newProjectButton","green","itemsList","listStyle","searchApi","context","searchResult","searchSlice","setSearchResult","SearchResult","searchRes","redirect","setRedirect","handleRelocate","taskId","projectid","tasks","taskid","taskName","TopControll","toggleOpen","createNewText","listText","searchInputValue","setSearchInputValue","searchOpen","setSearchOpen","exceptionRef","InputBase","inputRoot","inputProps","Projects","newProjectMenuOpen","projectsSelector","isFirstLoadComplete","status","Users","profiles","totalCount","profile","Root","ProfilePreloader","MyProfile","myProfileFetch","projectsLimit","taskApi","newTask","task","getTasks","skip","updateTasksOrder","editTask","changeCompleteStatus","deleteTask","tasksLoading","edit","completeStatus","orderChange","taskPage","currentPage","totalPagesCount","taskSlice","setTasks","addTaskToBegining","updateTask","updateTaskCompleteStatus","finished","setPagesCount","incrementPage","taskEditMode","Math","ceil","tasksCount","wrapper","newTaskInput","newTaskMenu","opacity","standard","inputWrapper","buttonWrapper","settings","taskContainer","taskHeader","taskMenu","taskWrapper","taskAnchor","tasksList","draggable","spacer","NewTask","createTask","EditModeTask","GreenCheckbox","withStyles","lightGreen","checked","IndigoAvatar","indigo","Task","scrollToRef","taskToDelete","setTaskToDelete","bgColor","scrollIntoView","behavior","toggleTaskComplete","startFetchTime","endFetch","test","checkedIcon","removeTask","DragAndDropList","listItems","ItemComponent","itemComponent","animationDuration","animationEasing","rest","items","setItems","dragging","setDragging","willEndDragging","setWillEndDragging","touchId","itemsOrder","prevItems","draggedItemPosition","dragMoveHandler","itemShiftsY","onTouchMove","window","onDragStart","useCallback","node","y","touch","itemNode","initialPosition","itemHeights","Array","prototype","call","getBoundingClientRect","itemSpacing","bottom","itemTopOffset","dragStartY","previous","new","shiftY","_","onTouchStart","touches","changedTouches","closest","pageY","identifier","onDragMove","preventDefault","movedY","draggedItemOffsetTop","getDraggedItemPosition","draggedItemHeight","j","getDraggedItemPositionY","onDragEnd","newItemsOrder","getNewItemsOrder","finalItemsOrder","onTouchEnd","onMouseUp","which","passive","fromPosition","toPosition","concat","scanLineY","handle","childNode","dataset","parentElement","TRANSFORM_NONE","getItemStyle","isDragged","ListItems","Tasks","editable","newTaskMenuOpen","setNewTaskMenuOpen","lookingForTask","setLookingForTask","tasksSelector","t","find","tasksPreload","result","dataLength","hasMore","next","loader","scrollableTarget","order","newOrder","changeTasksOrder","ProjectPage","params","useParams","createSelector","projectError","selectedProject","Profile","profie","forgotPasswordSlice","emailSended","passwordChanged","setEmailSendedTrue","setEmailSendedFalse","setPasswordChanged","ForgotPasswordForm","ForgotPassword","emailReady","ResetPasswordForm","ResetPassword","useLocation","isPasswordChanged","ContentSwitch","exact","render","AuthButton","logoutJsx","loginJsx","Context","React","createContext","BaseStricture","mainContentRef","darkTheme","AppBar","Toolbar","edge","aria-label","noWrap","Drawer","Container","maxWidth","Provider","App","createMuiTheme","lightTheme","ThemeProvider","basename","store","configureStore","themeReducer","loginReducer","signUpReducer","forgotPasswordReducer","authReducer","userReducer","projectReducer","taskReducer","searchReducer","hostname","navigator","serviceWorker","ready","registration","unregister"],"mappings":"8MAEaA,EAAO,CAChBC,QAAS,CACLC,KAAM,OACNC,KAAM,CACFC,QAAS,aAORC,EAAQ,CACjBJ,QAAS,CACLC,KAAM,QACNC,KAAM,CACFC,QAAS,WAEbE,WAAY,CACRC,QAAS,a,oRCpBRC,EAAY,CAAEC,eAAgB,OAAQC,MAAO,WAC7CC,EAAW,CAAEF,eAAgB,OAAQC,MAAO,W,wBCD5CE,EAAS,SACTC,EAAmB,iBACnBC,EAAc,aACdC,EAAoB,kBACpBC,EAAS,SACTC,GAAO,OACPC,GAAkB,iBAClBC,GAAmB,kBACnBC,GAAgB,eAChBC,GAAe,c,UCPtBC,GACAC,UAAa,CACXC,iBAAiB,EACjBC,QAAQ,GAAD,OAAKC,wCAAL,WAOAJ,MCTTK,GAAW,CAEbC,aAFa,WAGT,OAAON,GAAcO,IAAd,aAA+BC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAEpEC,SALa,WAMT,OAAOX,GAAcO,IAAd,SAA2BC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAEhEE,QARa,SAQLC,GACJ,OAAOb,GAAcO,IAAd,eAA0BM,IAAUL,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAK9DL,MCbTS,GAAe,CACjBC,QAAS,CACLC,mBAAmB,EACnBC,oBAAoB,EACpBC,eAAe,GAEnBC,gBAAiB,EACjBC,SAAU,KACVC,WAAY,KACZC,MAAO,GACPC,IAAK,MAGIC,GAAaC,YAAY,CAClCC,KAAM,OACNZ,gBACAa,SAAU,CACNZ,QAAS,SAACa,EAAOC,GACbD,EAAMb,QAAQc,EAAOC,QAAQD,SAAU,GAE3CE,YAAa,SAACH,EAAOC,GACjBD,EAAMb,QAAQc,EAAOC,QAAQD,SAAU,GAE3CG,YAAa,SAACJ,EAAOC,GACjBD,EAAMR,SAAWS,EAAOC,SAE5BG,cAAe,SAACL,EAAOC,GACnBD,EAAMP,WAAaQ,EAAOC,SAE9BI,gBAAiB,SAAAN,GAAWA,EAAMP,WAAa,MAC/Cc,SAAU,SAACP,EAAOC,GACdD,EAAMN,MAAN,sBAAkBM,EAAMN,OAAxB,YAAkCO,EAAOC,WAE7CM,+BAAgC,SAAAR,GACvBA,EAAMR,UACXQ,EAAMR,SAASiB,iBAEnBC,+BAAgC,SAAAV,GACvBA,EAAMR,UACXQ,EAAMR,SAASiB,iBAEnBE,mBAAoB,SAACX,EAAOC,GACxBD,EAAMT,gBAAkBU,EAAOC,SAEnCU,MAAO,kBAAM1B,O,GAMuFU,GAAWiB,QADxG1B,G,GAAAA,QAASgB,G,GAAAA,YAAaC,G,GAAAA,YAAaC,G,GAAAA,cAAeC,G,GAAAA,gBAC7DC,G,GAAAA,SAAUI,G,GAAAA,mBAAoBH,G,GAAAA,+BAAgCE,G,GAAAA,+BAAgCE,G,GAAAA,MAGrFpB,GAAW,SAAAQ,GAAK,OAAIA,EAAMc,KAAKtB,UAC/BuB,GAAa,SAAAf,GAAK,OAAIA,EAAMc,KAAK3B,SACjCO,GAAQ,SAAAM,GAAK,OAAIA,EAAMc,KAAKpB,OAC5BD,GAAa,SAAAO,GAAK,OAAIA,EAAMc,KAAKrB,YAkC/BG,MAAf,QC3FMoB,GAAa,CACfC,WADe,SACJC,GACP,OAAO9C,GAAc+C,KAAK,WAAYD,GAAStC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAE7EsC,YAJe,SAIHnC,EAAQoC,EAAMC,GACtB,IAAMC,EAAI,yBAAqBF,GAAQ,EAA7B,kBAAwCC,GAAS,IAC3D,OAAKrC,EAGEb,GAAcO,IAAd,UAAqBM,EAArB,YAA+BsC,IAF3BnD,GAAcO,IAAI4C,IAIjCC,WAXe,SAWJC,GACP,OAAOrD,GAAcO,IAAd,mBAA8B8C,KAEzCC,cAde,SAcDD,GACV,OAAOrD,GAAcuD,OAAd,mBAAiCF,KAE5CG,YAjBe,SAiBHV,GACR,OAAO9C,GAAcyD,IAAd,mBAA8BX,EAAQY,KAAOZ,KAI7CF,MCpBT9B,GAAe,CACjBC,QAAS,CACL4C,QAAQ,EACRC,iBAAiB,EACjBL,OAAQ,IAEZM,cAAe,KACfC,aAAc,EACdC,SAAU,GACVC,SAAU,GACVC,MAAO,KACPC,WAAW,EACXC,gBAAgB,GAIPC,GAAe3C,YAAY,CACpCC,KAAM,UACNZ,gBACAa,SAAU,CACNZ,QAAS,SAACa,EAAOC,GACTA,EAAOC,QAAQD,SAAWnC,EAI9BkC,EAAMb,QAAQc,EAAOC,QAAQD,SAAU,EAHnCD,EAAMb,QAAQc,EAAOC,QAAQD,QAA7B,sBAA2CD,EAAMb,QAAQc,EAAOC,QAAQD,SAAxE,CAAiFA,EAAOC,QAAQuC,MAKxGtC,YAAa,SAACH,EAAOC,GACbA,EAAOC,QAAQD,SAAWnC,EAI9BkC,EAAMb,QAAQc,EAAOC,QAAQD,SAAU,EAHnCD,EAAMb,QAAQc,EAAOC,QAAQD,QAA7B,YAA2CD,EAAMb,QAAQc,EAAOC,QAAQD,QAAQyC,QAAO,SAAAD,GAAE,OAAIA,IAAOxC,EAAOC,QAAQuC,QAK3HE,kBAAmB,SAAA3C,GACfA,EAAMsC,WAAY,GAEtBM,YAAa,SAAC5C,EAAOC,GACjBD,EAAMmC,SAAN,sBAAqBnC,EAAMmC,UAA3B,YAAwClC,EAAOC,WAEnD2C,iBAAkB,SAAC7C,EAAOC,GACtBD,EAAMiC,cAAgBhC,EAAOC,SAEjC4C,qBAAsB,SAAC9C,EAAOC,GAC1BD,EAAMmC,SAAN,CAAkBlC,EAAOC,SAAzB,mBAAqCF,EAAMmC,WAC3CnC,EAAMuC,gBAAiB,GAE3BQ,cAAe,SAAC/C,EAAOC,GACnB,IAAI+C,GAAW,EACfhD,EAAMmC,SAAWnC,EAAMmC,SAASc,KAAI,SAAA/B,GAChC,OAAK8B,GAAY9B,EAAQY,MAAQ7B,EAAOC,QAAQ4B,IAIzCZ,GAHH8B,GAAW,EACJ/C,EAAOC,aAM1BgD,8BAA+B,SAAAlD,GAC3BA,EAAMuC,gBAAiB,GAE3Bb,cAAe,SAAC1B,EAAOC,GACnBD,EAAMmC,SAAWnC,EAAMmC,SAASO,QAAO,SAAAxB,GAAO,OAAIA,EAAQY,MAAQ7B,EAAOC,YAE7EiD,eAAgB,SAACnD,EAAOC,GACpBD,EAAMoC,SAAN,sBAAqBpC,EAAMoC,UAA3B,CAAqCnC,EAAOC,WAEhDkD,gBAAiB,SAACpD,EAAOC,GACrBD,EAAMoC,SAAN,YAAqBpC,EAAMoC,SAASM,QAAO,SAAAD,GAAE,OAAIA,IAAOxC,EAAOC,aAEnEmD,QAAS,SAACrD,EAAOC,GACbD,EAAMqC,MAAQpC,EAAOC,SAEzBoD,WAAY,SAAAtD,GACRA,EAAMqC,MAAQ,MAElBzB,MAAO,kBAAM1B,O,GAMyCsD,GAAa3B,QAF5D+B,G,GAAAA,YAAaE,G,GAAAA,qBAAsBC,G,GAAAA,cAAeM,G,GAAAA,QAASC,G,GAAAA,WACtEnE,G,GAAAA,QAAS0D,G,GAAAA,iBAAkB1C,G,GAAAA,YAAawC,G,GAAAA,kBAAmBO,G,GAAAA,8BAC3DxB,G,GAAAA,cAAeyB,G,GAAAA,eAAgBC,G,GAAAA,gBAAiBxC,G,GAAAA,MAGvCuB,GAAW,SAAAnC,GAAK,OAAIA,EAAMkB,QAAQiB,UAClCE,GAAQ,SAAArC,GAAK,OAAIA,EAAMkB,QAAQmB,OAM/BJ,GAAgB,SAAAjC,GAAK,OAAIA,EAAMkB,QAAQe,eACvClB,GAAa,SAAAf,GAAK,OAAIA,EAAMkB,QAAQ/B,SACpCmD,GAAY,SAAAtC,GAAK,OAAIA,EAAMkB,QAAQoB,WACnCC,GAAiB,SAAAvC,GAAK,OAAIA,EAAMkB,QAAQqB,gBACxCgB,GAAkB,SAAAvD,GAAK,OAAIA,EAAMkB,QAAQkB,UA6DvCI,MAAf,QC1IegB,GAtBC,CAEZC,OAFY,WAGR,OAAOrF,GAAcO,IAAI,UAAUC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAEjE4E,OALY,WAMR,OAAOtF,GAAcuD,OAAO,UAEhCgC,MARY,SAQNC,EAAOC,EAAUC,GACnB,OAAO1F,GAAc+C,KAAK,QAAS,CAAEyC,QAAOC,WAAUC,eAAclF,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAElGiF,OAXY,SAWLjE,EAAMkE,EAASC,EAAOL,EAAOC,GAChC,OAAOzF,GAAc+C,KAAK,SAAU,CAAErB,OAAMkE,UAASC,QAAOL,QAAOC,YAAY,CAAEvF,iBAAiB,KAEtG4F,eAdY,SAcGN,GACX,OAAOxF,GAAc+C,KAAK,uBAAwB,CAAEyC,WAExDO,cAjBY,SAiBEN,EAAUO,GACpB,OAAOhG,GAAcyD,IAAd,sBAAyC,CAAEgC,WAAUO,gBCfvDC,GAAYxE,YAAY,CACjCC,KAAM,OACNZ,aAAc,CACV6B,YAAY,EACZuD,cAAc,EACdrF,OAAQ,KACRoD,MAAO,MAEXtC,SAAU,CACNZ,QAAS,SAAAa,GACLA,EAAMe,YAAa,GAEvBwD,QAAS,SAACvE,EAAOC,GACbD,EAAMe,YAAa,EACnBf,EAAMf,OAASgB,EAAOC,QACtBF,EAAMsE,cAAe,GAEzBjB,QAAS,SAACrD,EAAOC,GACbD,EAAMe,YAAa,EACnBf,EAAMsE,cAAe,EACrBtE,EAAMqC,MAAQpC,EAAOC,SAEzBsE,cAAe,SAAAxE,GACXA,EAAMsE,cAAe,EACrBtE,EAAMe,YAAa,GAEvBuC,WAAY,SAAAtD,GACRA,EAAMqC,MAAQ,S,GAK8CgC,GAAUxD,QAAnE0D,G,GAAAA,QAA8BpF,I,GAArBkE,Q,GAASC,W,GAAYnE,SAASqF,G,GAAAA,cAGzCzD,GAAa,SAAAf,GAAK,OAAIA,EAAMyE,KAAK1D,YACjCuD,GAAe,SAAAtE,GAAK,OAAIA,EAAMyE,KAAKH,cAInCb,GAAS,kBAAM,SAAAiB,GACxBA,EAASvF,MACTqE,GAAQC,SAAS7E,MAAK,SAAA+F,GAElB,OADAC,QAAQC,IAAIF,GACRA,EAAI7D,KACG4D,EAASH,GAAQI,EAAI7D,OAEzB4D,EAASF,SACjBM,OAAM,SAAAnF,GACDA,IACA+E,EAAS/E,EAAId,SAASC,MACtB8F,QAAQC,IAAIlF,SAaT0E,MAAf,QCxDeU,GAVI,WACf,IAAMC,EAASC,YAAYX,IACrBY,EAAWD,YAAYlE,IAE7B,OAAKiE,IAAWE,G,QCSPC,GAAgB,WAC3B,IAAMC,EAAUL,KACVM,EAAgB,uCAAE,eAAC,IAAD,CAASC,MAAOhI,EAAWiI,GAAG,QAA9B,SACtB,gBAACC,EAAA,EAAD,CAAUC,QAAM,EAAhB,UACE,eAACC,EAAA,EAAD,UACE,eAAC,IAAD,MAEF,eAACC,EAAA,EAAD,CAAczI,QAAQ,cAGxB,eAAC,IAAD,CAASoI,MAAOhI,EAAWiI,GAAG,YAA9B,SACE,gBAACC,EAAA,EAAD,CAAUC,QAAM,EAAhB,UACE,eAACC,EAAA,EAAD,UACE,eAAC,IAAD,MAEF,eAACC,EAAA,EAAD,CAAczI,QAAQ,qBAG5B,OACE,iCACIkI,EAA0B,GAAhBC,EACZ,eAAC,IAAD,CAASC,MAAOhI,EAAWiI,GAAG,SAA9B,SACE,gBAACC,EAAA,EAAD,CAAUC,QAAM,EAAhB,UACE,eAACC,EAAA,EAAD,UACE,eAAC,IAAD,MAEF,eAACC,EAAA,EAAD,CAAczI,QAAQ,mBASnB0I,GACX,iCACE,eAACC,EAAA,EAAD,CAAeC,OAAK,EAApB,2BACA,gBAACN,EAAA,EAAD,CAAUC,QAAM,EAAhB,UACE,eAACC,EAAA,EAAD,UACE,eAAC,IAAD,MAEF,eAACC,EAAA,EAAD,CAAczI,QAAQ,wB,2BCtDf6I,GAAYC,cAAW,SAACC,GAAD,MAAY,CAC5CC,KAAM,CACFC,QAAS,QAEbC,QAAS,CACLC,aAAc,IAElBC,YAAY,cACRH,QAAS,OACTI,WAAY,SACZC,eAAgB,WAChBC,QAAS,SACNR,EAAMS,OAAON,SAEpBO,YAAa,CACTpJ,eAAgB,OAChBC,MAAO,QAEXoJ,OAAQ,CACJC,OAAQZ,EAAMY,OAAOC,OAAS,EAC9BC,WAAYd,EAAMe,YAAYjF,OAAO,CAAC,QAAS,UAAW,CACtDkF,OAAQhB,EAAMe,YAAYC,OAAOC,MACjCC,SAAUlB,EAAMe,YAAYG,SAASC,iBAG7CC,YAAY,cACRC,WA5BY,IA6BZC,MAAM,eAAD,OA7BO,IA6BP,OACLR,WAAYd,EAAMe,YAAYjF,OAAO,CAAC,QAAS,UAAW,CACtDkF,OAAQhB,EAAMe,YAAYC,OAAOC,MACjCC,SAAUlB,EAAMe,YAAYG,SAASK,kBAExCvB,EAAMwB,YAAYC,KAAK,MAAQ,CAC5BH,MAAO,SAGfI,WAAW,cACPC,YAAa,IACZ3B,EAAMwB,YAAYC,KAAK,MAAQ,CAC5BvB,QAAS,SAGjB0B,iBAAkB,CACd1B,QAAS,QAEb2B,MAAO,CACHC,SAAU,GAEdC,YAAY,cACRC,SAAU,WACVC,WAAY,SACZX,MArDY,IAsDZR,WAAYd,EAAMe,YAAYjF,OAAO,QAAS,CAC1CkF,OAAQhB,EAAMe,YAAYC,OAAOC,MACjCC,SAAUlB,EAAMe,YAAYG,SAASK,kBAExCvB,EAAMwB,YAAYC,KAAK,MAAQ,CAC5BH,MAAOtB,EAAMkC,QAAQ,KAG7BC,iBAAiB,cACbC,UAAW,SACXtB,WAAYd,EAAMe,YAAYjF,OAAO,QAAS,CAC1CkF,OAAQhB,EAAMe,YAAYC,OAAOC,MACjCC,SAAUlB,EAAMe,YAAYG,SAASC,gBAEzCG,MAAOtB,EAAMkC,QAAQ,IACpBlC,EAAMwB,YAAYa,GAAG,MAAQ,CAC1Bf,MAAOtB,EAAMkC,QAAQ,KAI7BI,aAActC,EAAMS,OAAON,QAC3BoC,QAAS,CACLT,SAAU,EACVU,OAAQ,QACRC,SAAU,OACV,uBAAwB,CACpBnB,MAAO,SAEX,6BAA8B,CAC1BoB,UAAW,iCACXC,gBAAiB,kCAErB,6BAA8B,CAC1BC,gBAAiB,mBAGzBC,UAAW,CACPC,WAAY9C,EAAMkC,QAAQ,GAC1Ba,cAAe/C,EAAMkC,QAAQ,IAEjCc,MAAO,CACHxC,QAASR,EAAMkC,QAAQ,GACvBhC,QAAS,OACTuC,SAAU,OACVQ,cAAe,UAEnBC,YAAa,CACTV,OAAQ,KAEZW,cAAe,CACXC,UAAW,OACXC,cAAe,IAEnBC,OAAQ,CACJd,OAAQ,IAEZe,KAAM,CACFf,OAAQ,QC/GHgB,GAAa5J,YAAY,CAClCC,KAAM,QACNZ,aAAc,CACVwK,SAA+C,UAArCC,aAAaC,QAAQ,YAC/BC,YAAqD,UAAxCF,aAAaC,QAAQ,gBAEtC7J,SAAU,CACN+J,eAAgB,SAAC9J,GACb2J,aAAaI,QAAQ,YAAa/J,EAAM0J,UACxC1J,EAAM0J,UAAY1J,EAAM0J,UAE5BM,cAAe,SAAChK,GACZ2J,aAAaI,QAAQ,eAAgB/J,EAAM6J,aAC3C7J,EAAM6J,aAAe7J,EAAM6J,gB,GAMUJ,GAAW5I,QAA7CiJ,G,GAAAA,eAAgBE,G,GAAAA,cAGlBN,GAAW,SAAA1J,GAAK,OAAIA,EAAMiG,MAAMyD,UAChCG,GAAc,SAAA7J,GAAK,OAAIA,EAAMiG,MAAM4D,aAEjCJ,MAAf,QCTeQ,GAbG,WACd,OACI,gBAACC,EAAA,EAAD,CAAYC,QAAQ,QAAQ3M,MAAM,gBAAgB4M,MAAM,SAAxD,UACK,kBACD,eAAC,IAAD,CAAS9E,MAAOhI,EAAWE,MAAM,UAAU+H,GAAG,IAA9C,6BAEK,KACJ,IAAI8E,MAAOC,cACX,Q,8ECXAvE,GAAYC,cAAW,SAACC,GAAD,MAAY,CAE5CsE,MAAO,CACHC,gBAAiB,0CACjBC,iBAAkB,YAClB5B,gBAC2B,UAAvB5C,EAAMlJ,QAAQC,KAAmBiJ,EAAMlJ,QAAQ2N,KAAK,IAAMzE,EAAMlJ,QAAQ2N,KAAK,KACjFC,eAAgB,QAChBC,mBAAoB,UAExB3B,MAAO,CACH4B,OAAQ5E,EAAMkC,QAAQ,EAAG,GACzBhC,QAAS,OACT+C,cAAe,SACf3C,WAAY,UAEhBuE,OAAQ,CACJD,OAAQ5E,EAAMkC,QAAQ,GACtBU,gBAAiB5C,EAAMlJ,QAAQgO,UAAUC,MAE7CC,KAAM,CACF1D,MAAO,OACP2D,UAAWjF,EAAMkC,QAAQ,GACzB,MAAO,CACHhC,QAAS,QACT0E,OAAQ5E,EAAMkC,QAAQ,GACtB,sBAAuB,CACnBgD,SAAU,GACVC,YAAa,GACb/E,aAAc,GACd7I,MAAO,QACPqL,gBAAiB,QAErB,UAAW,CACP,qBAAsB,CAClBwC,gBAAiB,4BACjBC,oBAAqB,YAKrCC,OAAQ,CACJV,OAAQ5E,EAAMkC,QAAQ,EAAG,EAAG,IAEhCqD,aAAc,CACVrF,QAAS,QACT0E,OAAQ,UAEZY,mBAAoB,CAChBxD,SAAU,YAEdyD,qBAAsB,CAClBzD,SAAU,WACV0D,IAAK,MACLC,KAAM,MACNV,WAAY,GACZ5D,YAAa,QCpDRuE,GAAahM,YAAY,CAClCC,KAAM,QACNZ,aAAc,CACVC,SAAS,EACT2M,cAAc,EACdzJ,MAAO,MAEXtC,SAAU,CACNZ,QAAS,SAAAa,GACLA,EAAMb,SAAU,GAEpBoF,QAAS,SAAAvE,GACLA,EAAMb,SAAU,EAChBa,EAAM8L,cAAe,GAEzBzI,QAAS,SAACrD,EAAOC,GACbD,EAAMb,SAAU,EAChBa,EAAM8L,cAAe,EACrB9L,EAAMqC,MAAQpC,EAAOC,SAEzBoD,WAAY,SAAAtD,GACRA,EAAMqC,MAAQ,S,GAK+BwJ,GAAWhL,QAArD0D,G,GAAAA,QAASlB,G,GAAAA,QAASC,G,GAAAA,WAAYnE,G,GAAAA,QAIhC+F,GAAW,SAAAlF,GAAK,OAAIA,EAAM2D,MAAMxE,SAChCkD,GAAQ,SAAArC,GAAK,OAAIA,EAAM2D,MAAMtB,OAiB3BwJ,MAAf,QCtDaE,GAAgB,SAACC,GAC1B,OAAOA,OAAQC,EAAY,qBAGlBC,GAAW,SAACF,GACrB,OAAOA,OAAQC,EAAY,qBAGlBE,GAAe,SAACH,GAEzB,OAAOA,EAAMI,MADD,gDACcH,EAAY,iBAG7BI,GAAmB,SAACL,GAC7B,OAAOA,OAAQC,EAAY,wBAGlBK,GAAiB,SAACN,GAC3B,OAAOA,EAAMO,OAAS,OAAIN,EAAY,iDAG7BO,GAAkC,SAACR,GAG5C,IAFA,IAAIS,EAAe,EACfC,EAAe,EACVC,EAAI,EAAGA,EAAIX,EAAMO,OAAQI,IAC1BC,MAAMC,SAASb,EAAMW,KACrBD,IAEAD,IAIR,OAAqB,IAAjBA,EACO,0CAEU,IAAjBC,EACO,+CADX,GAQSI,GAAuB,SAACC,GACjC,IAAIC,EAAS,GAIb,OAHID,EAAOlJ,WAAakJ,EAAOD,uBAC3BE,EAAOF,qBAAuB,uBAE3BE,GAGEC,GAAoB,sCAAIC,EAAJ,yBAAIA,EAAJ,uBAAmB,SAAAlB,GAAK,OACrDkB,EAAWC,QAAO,SAAC9K,EAAO+K,GAAR,OAAsB/K,GAAS+K,EAAUpB,UAAQC,K,6BC9C1DoB,GAAQ,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,KAASC,EAAgB,iCAE9CC,IAAeD,EAAU7N,KAAO6N,EAAU7N,IAAI+N,UAAYJ,EAAMxN,KAGtE,OACI,qCACI,eAAC6N,GAAA,EAAD,CACIC,QAASJ,EAAUlK,WACnBuK,aAAcL,EAAUK,aACxBC,MAAON,EAAUM,MACjB3D,QAASqD,EAAUrD,SAAW,WAC9BrK,KAAMwN,EAAMxN,KACZkM,MAAOsB,EAAMtB,MACbhP,KAAMsQ,EAAMtQ,KACZ+Q,SAAUT,EAAMS,SAChB1L,MAAQkL,EAAKlL,OAASkL,EAAKS,SAAYP,EACvCQ,UAAWT,EAAUS,UACrBC,UAAWV,EAAUU,UACrBC,UAAWX,EAAUW,UACrBC,WAAab,EAAKlL,OAASkL,EAAKS,SAAW,gCAAOT,EAAKlL,UAC/CoL,EAAe,gCAAOD,EAAU7N,IAAI0O,eAAkBpC,QAMjEqC,GAAW,SAAC,GAAe,IAAbhB,EAAY,EAAZA,MACvB,OACI,eAACiB,GAAA,EAAD,CACIzO,KAAMwN,EAAMxN,KACZiO,SAAUT,EAAMS,Y,oBCrBbvC,GAZM,SAACgD,GAClB,IAAMC,EAAU1I,KAChB,OACI,sBAAK2I,UAAWD,EAAQhD,mBAAxB,SACI,gBAACkD,GAAA,EAAD,CAAQD,UAAWD,EAAQjD,aAAcoD,SAAUJ,EAAMtJ,SAAUlI,KAAK,SAASmN,QAAQ,YAAY3M,MAAM,UAA3G,UACKgR,EAAMK,WACNL,EAAMtJ,UAAY,eAAC4J,GAAA,EAAD,CAAkBC,KAAM,GAAIL,UAAWD,EAAQ/C,6BCW5EsD,GAAY,SAACR,GACf,IAAMC,EAAU1I,KACVrB,EAAWuK,cACX9P,EAAU8F,YAAYC,IACtBgK,EAAcjK,YAAY5C,IAE1B8M,EAAW,WACbzK,EAASpB,OAEb,OACI,wBAAM8L,SAAUZ,EAAMa,aAAcX,UAAWD,EAAQxD,KAAvD,UACI,+BACI,eAAC,KAAD,CACIqE,SAAUrC,GAAkBlB,GAAeI,IAC3C2B,MAAM,QACND,aAAa,QACb/N,KAAK,QACLyP,UAAWlC,GACXa,WAAW,EACXC,WAAW,EACXxO,IAAKuP,EACL5L,WAAY6L,MAKpB,+BACI,eAAC,KAAD,CACIG,SAAUjD,GACVyB,MAAM,WACN9Q,KAAK,WACL6Q,aAAa,mBACb/N,KAAK,WACLyP,UAAWlC,GACXc,WAAW,EACXxO,IAAKuP,EACL5L,WAAY6L,MAKpB,+BACI,eAACK,GAAA,EAAD,CAAkB1B,MAAM,cAAc2B,QAClC,eAAC,KAAD,CACIzS,KAAK,WACL8C,KAAK,aACLyP,UAAWjB,SAKvB,eAAC,GAAD,CAAcO,WAAW,QAAQ3J,SAAU/F,QAmDxCuQ,GA3CD,WACV,IAAMjB,EAAU1I,KACVrB,EAAWuK,cAGjB,GAFehK,YAAYX,IAGvB,OAAO,eAAC,KAAD,CAAUiB,GAAG,MAQxB,OACI,gBAACoK,GAAA,EAAD,CAAM7G,WAAS,EAACyG,UAAU,OAAOb,UAAWD,EAAQvI,KAApD,UACI,eAAC0J,EAAA,EAAD,IACA,eAACD,GAAA,EAAD,CAAME,MAAI,EAACC,IAAI,EAAOC,GAAI,EAAGC,GAAI,EAAGtB,UAAWD,EAAQlE,QACvD,eAACoF,GAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAAGT,UAAWU,KAAOC,UAAW,EAAGC,QAAM,EAAvE,SACI,uBAAKzB,UAAWD,EAAQxF,MAAxB,UACI,eAACmH,GAAA,EAAD,CAAQrB,KAAK,QAAQL,UAAWD,EAAQ3D,OAAxC,SACI,eAAC,KAAD,MAEJ,eAACZ,EAAA,EAAD,CAAYqF,UAAU,KAAKpF,QAAQ,KAAnC,qBAGA,eAAC,KAAD,CAAMiF,SAjBL,SAACrC,GJjDD,IAACnJ,EAAOC,EAAUC,EIkD/BY,GJlDcd,EIkDCmJ,EAAOnJ,MJlDDC,EIkDQkJ,EAAOlJ,SJlDLC,EIkDeiJ,EAAOjJ,aAAc,EJlDrB,SAACY,GACnDA,EAASvF,MACTqE,GAAQG,MAAMC,EAAOC,EAAUC,GAAYlF,MAAK,SAAA+F,GAC5CD,EAASH,MACTG,EAASjB,MACTiB,EAAS2L,MACT3L,EAAS4L,SACVxL,OAAM,SAAAnF,GACLiF,QAAQC,IAAIlF,EAAId,SAASC,MACzB4F,EAASrB,GAAQ1D,EAAId,SAASC,cIyDQyQ,UAAWP,KACrC,gBAACW,GAAA,EAAD,CAAM7G,WAAS,EAAf,UACI,eAAC6G,GAAA,EAAD,CAAME,MAAI,EAACC,IAAE,EAAb,SACI,eAAC,IAAD,CAASxK,MAAO7H,EAAU8H,GAAG,kBAAkB4E,QAAQ,QAAvD,gCAIJ,gBAACwF,GAAA,EAAD,CAAME,MAAI,EAAV,oCAC2B,eAAC,IAAD,CAASvK,MAAO7H,EAAU8H,GAAG,UAA7B,oC,qBC9GtCgL,GAAc1Q,YAAY,CACnCC,KAAM,SACNZ,aAAc,CACVC,SAAS,EACTqR,eAAe,EACfnO,MAAO,MAEXtC,SAAU,CACNZ,QAAS,SAAAa,GACLA,EAAMb,SAAU,GAEpBoF,QAAS,SAAAvE,GACLA,EAAMb,SAAU,EAChBa,EAAMwQ,eAAgB,GAE1BnN,QAAS,SAACrD,EAAOC,GACbD,EAAMb,SAAU,EAChBa,EAAMwQ,eAAgB,EACtBxQ,EAAMqC,MAAQpC,EAAOC,SAEzBoD,WAAY,SAAAtD,GACRA,EAAMqC,MAAQ,S,GAK+BkO,GAAY1P,QAAtD0D,G,GAAAA,QAASlB,G,GAAAA,QAASC,G,GAAAA,WAAYnE,G,GAAAA,QAGhCqR,GAAgB,SAAAxQ,GAAK,OAAIA,EAAM+D,OAAOyM,eACtCtL,GAAW,SAAAlF,GAAK,OAAIA,EAAM+D,OAAO5E,SACjCkD,GAAQ,SAAArC,GAAK,OAAIA,EAAM+D,OAAO1B,OAY5BkO,MAAf,QCxBME,GAAa,SAACjC,GAChB,IAAMC,EAAU1I,KACV5G,EAAU8F,YAAYC,IACtBgK,EAAcjK,YAAY5C,IAC1BqC,EAAWuK,cAGXE,EAAW,WACbzK,EAASpB,OAEb,OACI,wBAAM8L,SAAUZ,EAAMa,aAAcX,UAAWD,EAAQxD,KAAvD,UACI,+BACI,eAAC,KAAD,CACIiD,WAAW,EACXoB,SAAUpD,GACV4B,MAAM,OACN9Q,KAAK,OACL6Q,aAAa,aACb/N,KAAK,OACLyP,UAAWlC,GACXc,WAAW,MAInB,+BACI,eAAC,KAAD,CACImB,SAAUpD,GACV4B,MAAM,UACND,aAAa,cACb/N,KAAK,UACLyP,UAAWlC,GACXc,WAAW,MAInB,+BACI,eAAC,KAAD,CACImB,SAAUpD,GACV4B,MAAM,QACND,aAAa,QACb/N,KAAK,QACLyP,UAAWlC,GACXc,WAAW,EACXxO,IAAKuP,EACL5L,WAAY6L,MAIpB,+BACI,eAAC,KAAD,CACIG,SAAUrC,GAAkBlB,GAAeI,IAC3C2B,MAAM,QACND,aAAa,QACb/N,KAAK,QACLyP,UAAWlC,GACXc,WAAW,EACXxO,IAAKuP,EACL5L,WAAY6L,MAIpB,+BACI,eAAC,KAAD,CACIG,SAAUrC,GAAkBZ,GAAkBC,GAAgBE,IAC9DsB,MAAM,WACN9Q,KAAK,WACL6Q,aAAa,eACb/N,KAAK,WACLyP,UAAWlC,GACXc,WAAW,MAInB,+BACI,eAAC,KAAD,CACImB,SAAUjD,GACVwB,aAAa,eACbC,MAAM,mBACN9Q,KAAK,WACL8C,KAAK,uBACLyP,UAAWlC,GACXc,WAAW,MAInB,eAAC,GAAD,CAAcU,WAAW,UAAU3J,SAAU/F,QAwD1CuR,GAhDA,WACX,IAAM1L,EAASC,YAAYX,IACrBmK,EAAU1I,KACVrB,EAAWuK,cACX0B,EAAmB1L,YAAYuL,IAUrC,OAJAI,qBAAU,WACN,OAAOlM,EAASpB,SAGhBqN,EACO,eAAC,KAAD,CAAUpL,GAAG,WAGpBP,EACO,eAAC,KAAD,CAAUO,GAAG,MAMpB,gBAACoK,GAAA,EAAD,CAAM7G,WAAS,EAACyG,UAAU,OAAOb,UAAWD,EAAQvI,KAApD,UACI,eAAC0J,EAAA,EAAD,IACA,eAACD,GAAA,EAAD,CAAME,MAAI,EAACC,IAAI,EAAOC,GAAI,EAAGC,GAAI,EAAGtB,UAAWD,EAAQlE,QACvD,eAACoF,GAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAAGT,UAAWU,KAAOC,UAAW,EAAGC,QAAM,EAAvE,SACI,uBAAKzB,UAAWD,EAAQxF,MAAxB,UACI,eAACmH,GAAA,EAAD,CAAQrB,KAAK,QAAQL,UAAWD,EAAQ3D,OAAxC,SACI,eAAC,KAAD,MAEJ,eAACZ,EAAA,EAAD,CAAYqF,UAAU,KAAKpF,QAAQ,KAAnC,qBAIA,eAAC,KAAD,CAAMmF,SAAUxC,GAAsBsC,SA/BrC,SAACrC,GDrFA,IAACjN,EAAMkE,EAASC,EAAOL,EAAOC,ECsF5Ca,GDtFe5E,ECsFCiN,EAAOjN,KDtFFkE,ECsFQ+I,EAAO/I,QDtFNC,ECsFe8I,EAAO9I,MDtFfL,ECsFsBmJ,EAAOnJ,MDtFtBC,ECsF6BkJ,EAAOlJ,SDtFvB,SAACa,GAC9DA,EAASvF,MACTqE,GAAQO,OAAOjE,EAAMkE,EAASC,EAAOL,EAAOC,GAAUjF,MAAK,SAAA+F,GACvDD,EAASH,SACVO,OAAM,SAAAnF,GACL+E,EAASrB,GAAQ1D,EAAId,SAASC,cC+GwCyQ,UAAWkB,KAErE,gBAACI,EAAA,EAAD,+BACqB,eAAC,IAAD,CAASvL,MAAO7H,EAAU8H,GAAG,SAA7B,oC,iDC1J5BuL,GAAmB,SAAC7K,GAC7B,MAA2B,SAAvBA,EAAMlJ,QAAQC,KACP,UAEJ,WAGE+I,GAAYC,cAAW,SAACC,GAAD,MAAY,CAC5C8K,YAAa,CACT5K,QAAS,OACTK,eAAgB,gBAChBC,QAASR,EAAMkC,QAAQ,GACvB+C,UAAWjF,EAAMkC,QAAQ,IAI7B6I,kBAAmB,CAEf9F,UAAWjF,EAAMkC,QAAQ,IAE7BhG,SAAU,CACN8O,UAAW,WACXlK,WAAY,WAEhBmK,SAAU,CACNhG,UAAWjF,EAAMkC,QAAQ,IAE7BgJ,YAAa,CACThL,QAAS,QACT5I,eAAgB,OAChBC,MAAO,UACP,UAAW,CACPkF,OAAQ,oBAGhBzB,WAAY,CACRgQ,UAAW,WACXlK,WAAY,WAEhBqK,KAAM,CACF7J,MAAO,EACPkB,OAAQ,EACR4I,WAAY,SACZJ,UAAW,YAEfK,iBAAkB,CACd,OAAO,cACHC,UAAW,SACXhK,MAAO,OACNtB,EAAMwB,YAAYC,KAAK,MAAQ,CAC5BH,MAAO,SAGfyB,cAAe,GAGnBwI,gBAAiB,CACbtG,UAAWjF,EAAMkC,QAAQ,GACzBZ,MAAO,MACP,sBAAuB,CACnB4D,SAAU,GACVC,YAAa,GACb/E,aAAc,GACd7I,MAAO,UACPqL,gBAAiBiI,GAAiB7K,IAEtC,UAAW,CACP,qBAAsB,CAClBoF,gBAAiB,4BACjBC,oBAAqB,aAIjCmG,YAAa,CACT,OAAQ,CACJtL,QAAS,OACTK,eAAgB,gBAChB,QAAS,CACLc,WAAYrB,EAAMkC,QAAQ,MAItCuJ,qBAAsB,CAClB,WAAY,CACRxG,UAAW,GACX5B,aAAc,GACdhC,WAAYrB,EAAMkC,QAAQ,KAGlCwJ,aAAc,CACV9I,gBAC2B,UAAvB5C,EAAMlJ,QAAQC,KAAmB4U,KAAS,IAAMA,KAAS,MAEjEC,eAAe,cACX1L,QAAS,OACT2L,SAAU,QACT7L,EAAMwB,YAAYC,KAAK,MAAQ,CAC5BlB,eAAgB,WAGxBuL,cAAe,CACXC,SAAU,IACV3I,UAAW,IACXwB,OAAQ5E,EAAMkC,QAAQ,GACtB1B,QAASR,EAAMkC,QAAQ,GACvB,OAAQ,CACJoJ,UAAW,UAEf,WAAY,CACRrG,UAAWjF,EAAMkC,QAAQ,KAGjC8J,qBAAsB,CAClBD,SAAU,KAEdE,gBAAiB,CACbhH,UAAWjF,EAAMkC,QAAQ,GACzB,iBAAkB,CACdP,YAAa3B,EAAMkC,QAAQ,S,iFCjGxBgK,GAtBM,SAACC,EAAKC,EAAWC,GAClC1B,qBAAU,WACN,IAAM2B,EAAqB,SAACC,GACxB,GAAIJ,EAAIK,UAAYL,EAAIK,QAAQC,SAASF,EAAMG,QAAS,CACpD,GAAyB,oBAAdN,EACP,OAAOA,IAENA,EAAUI,QAAQC,SAASF,EAAMG,SAClCL,MAOZ,OADAM,SAASC,iBAAiB,YAAaN,GAChC,WAEHK,SAASE,oBAAoB,YAAaP,MAE/C,CAACH,EAAKC,EAAWC,KCflBS,GAAe,CAAC,KAAM,QAAS,YAAa,kBAAmB,iBAAkB,OAAQ,MAAO,WAAY,OAAQ,QAAS,QAAS,QAAS,QAAS,OAyG/IC,GA9FM,SAAC,GAAyB,IAAvBhT,EAAsB,EAAtBA,MAAO0E,EAAe,EAAfA,SAAe,EACVuO,mBAAS,MADC,oBACnCC,EADmC,KACzBC,EADyB,OAENF,mBAAS,IAFH,oBAEnCG,EAFmC,KAEvBC,EAFuB,OAGUJ,mBAAS,IAHnB,oBAGnCK,EAHmC,KAGfC,EAHe,OAIAN,mBAAS,MAJT,oBAInCO,EAJmC,KAIpBC,EAJoB,KAKpChF,EAAU1I,KACV2N,EAAeC,iBAAO,MACtBC,EAAOD,iBAAO,MACpBxB,GAAauB,GAAc,WACvBP,EAAY,SAIhBvC,qBACI,WACI,IAAMiD,EAAWd,GAAarQ,QAAO,SAAAoR,GACjC,OAAOA,EAASC,cAAcC,SAASZ,IAvBnC,SAACa,EAAYC,GAC7B,IAAMC,ECXoB,SAAAD,GAK1B,OAJgBA,EAAIE,MAAM,IAAInR,KAAI,SAACoR,GAC/B,MAAa,OAATA,EAAsB,GACpB,QAAN,OAAeA,EAAf,QACDC,KAAK,IDOQC,CAAeL,GACzBM,EAAQ,IAAIC,OAAON,EAAS,MAClC,OAAOF,EAAW7H,MAAMoI,GAoB0CE,CAAYZ,EAAUV,MAEhFG,EAAsBM,KACvB,CAACT,IAGRxC,qBACI,WACIlM,EAAS,CAAE1H,KAAM,eAAgB8W,SAAUV,MAC5C,CAACA,EAAY1O,IAGpB,IAiCMiQ,EAAiB,SAACC,GACpB,IAAMd,EAAWc,EAAEC,cAAcC,aAAa,YAC9CzB,EAAcS,GACdX,EAAY,OAOhB,OACI,uCACI,eAACxF,GAAA,EAAD,CAAWoH,UAxCS,SAACH,GACzB,GAAKhB,EAAKnB,QAAV,CACA,IAAMuC,EAAapB,EAAKnB,QAAQwC,kBAChC,GAAKD,EAAL,CACA,GAAsB,OAAlBxB,EACA,OAAOC,EAAiB,GAE5B,OAAQmB,EAAEM,KACN,IAAK,YACD,OAAOzB,GAAiB,SAAC0B,GACrB,OAAKA,EAAO,GAAMH,EAAmB,EAC9BG,EAAO,KAGtB,IAAK,UACD,OAAO1B,GAAiB,SAAC0B,GACrB,OAAKA,GAAS,EAAUH,EAAa,EAC9BG,EAAO,KAEtB,IAAK,QAGD,OAFA9B,EAAcO,EAAKnB,QAAQ2C,WAAW5B,GAAesB,aAAa,kBAClE3B,EAAY,MAEhB,QACI,WAgBuCnH,MAAOhM,EAAM8T,UAAYV,EAChErF,SAPW,SAAC6G,GACpBzB,EAAYyB,EAAEC,eACdxB,EAAcuB,EAAEjC,OAAO3G,QAKW4B,QA9ClB,SAACgH,GACjBzB,EAAYD,EAAW,KAAO0B,EAAEC,eAChCpB,EAAiB,SA6Cb,eAAC4B,GAAA,EAAD,CAAQnC,SAAUA,EAAUoC,KAAMC,QAAQrC,GAAWsC,UAAW,eAAhE,SACI,eAACvF,GAAA,EAAD,CAAOmC,IAAKsB,EAAchF,UAAWD,EAAQwD,qBAA7C,SACI,eAACwD,EAAA,EAAD,CAAMrD,IAAKwB,EAAX,SACKN,EAAmBrQ,KAAI,SAAC6Q,EAAUnH,GAC/B,OAAIA,EAAI,EAAU,KAEd,eAACnH,EAAA,EAAD,CAAUkQ,SAAUlC,IAAkB7G,EAAGmH,SAAUA,EAAUlG,QAAS+G,EAAwBlP,QAAM,EAApG,SACI,eAACE,EAAA,EAAD,CAAsBzI,QAAS4W,GAAZnH,IADoEA,gB,qBEhG9G5G,GAAYC,cAAW,SAACC,GAAD,MAAY,CAC5C0P,SAAU,CACNhK,IAAK,EACLC,KAAM,EACN/C,gBAAiB,iBACjBZ,SAAU,WACVV,MAAO,QACPkB,OAAQ,QACR5B,OAAQ,MAEZ+O,eAAgB,CACZnP,QAASR,EAAMkC,QAAQ,GACvBwD,IAAK,MACLC,KAAM,mBACN3D,SAAU,QACVgJ,UAAW,wBAEfpH,YAAa,CACT+B,KAAM,qBAEViK,aAAc,CACVjK,KAAM,oBAEVkK,mBAAoB,CAChB9D,SAAU,IACV,MAAO,CACHvL,QAASR,EAAMkC,QAAQ,IAE3B,WAAY,CACR0C,OAAQ5E,EAAMkC,QAAQ,SCvB5B4N,GAAYnD,SAASoD,eAAe,SAsB3BC,GApBD,SAAC,GAAiC,IAA/BC,EAA8B,EAA9BA,SAAUZ,EAAoB,EAApBA,KAAMa,EAAc,EAAdA,QACvBC,EAAkBnR,YAAY4E,IAM9B4E,EAAU1I,KAChB,OAAKuP,EACEe,IAASC,aACZ,sBAAKC,YARiB,SAAC3B,GACnBA,EAAEjC,OAAOjE,UAAUsF,SAASvF,EAAQkH,WACpCQ,KAMiCzH,UAAWD,EAAQkH,SAAxD,SACI,eAAC1F,GAAA,EAAD,CAAOvB,UAAW8H,YAAK/H,EAAQmH,eAAgBQ,EAAkB3H,EAAQ5E,YAAc4E,EAAQoH,cAA/F,SACKK,MAITH,IARc,M,SCCPU,GAjBK,SAACzK,EAAO0K,GAAW,IAAD,EACUzD,mBAASjH,GADnB,oBAC3B2K,EAD2B,KACXC,EADW,KAclC,OAXAhG,qBACI,WACI,IAAMiG,EAAUC,YAAW,WACvBF,EAAkB5K,KACnB0K,GACH,OAAO,WACHK,aAAaF,MAElB,CAAC7K,EAAM0K,IAGPC,GCaIK,GAvBK,SAAC,GAAyB,IAAvBhX,EAAsB,EAAtBA,MAAO0E,EAAe,EAAfA,SAAe,EACfuO,mBAASjT,EAAMxC,OADA,oBAClCA,EADkC,KAC3ByZ,EAD2B,KAEnCC,EAAcT,GAAYjZ,EAAO,KAEvCoT,qBACI,WACIlM,EAAS,CAAE1H,KAAM,YAAaQ,MAAO0Z,MACtC,CAACA,EAAaxS,IAGrB,IAAMyS,EAAe,SAAC3Z,GAClByZ,EAASzZ,IAEb,OACI,uCACI,sBAAK8H,MAAO,CAAEiC,MAAO,IAAKkB,OAAQ,IAAKI,gBAAiBrL,KACxD,eAAC,KAAD,CAAe8H,MAAO,CAAEiC,MAAO,KAAO/J,MAAOA,EAAOuQ,SAAUoJ,IAC9D,eAAC,KAAD,CAAgB3Z,MAAOA,EAAOuQ,SAAUoJ,IACxC,eAACxI,GAAA,EAAD,CAAQrJ,MAAO,CAAE4F,UAAW,QAAUf,QAAQ,WAAWyD,QAAS,kBAAMqJ,EAAS,KAAjF,gCCxBCnG,GAAmB,SAAAsG,GAO5B,OANyB,IAArBA,EAAIC,QAAQ,OACZD,EAAMA,EAAIE,MAAM,IAED,IAAfF,EAAI7K,SACJ6K,EAAMA,EAAI,GAAKA,EAAI,GAAKA,EAAI,GAAKA,EAAI,GAAKA,EAAI,GAAKA,EAAI,IAExC,IAAfA,EAAI7K,OACE,GAME,KAJJM,SAASuK,EAAIE,MAAM,EAAG,GAAI,IAIV,KAHhBzK,SAASuK,EAAIE,MAAM,EAAG,GAAI,IAGE,KAF5BzK,SAASuK,EAAIE,MAAM,EAAG,GAAI,IAEW,IACvC,UACA,WCbGvR,GAAYC,cAAW,SAACC,GAAD,MAAY,CAC5CsR,aAAc,CACVlO,UAAW,GACX,WAAY,CACRlD,QAAS,QACT0E,OAAQ,WAGhB8G,aAAc,CACV9I,gBAC2B,UAAvB5C,EAAMlJ,QAAQC,KAAmB4U,KAAS,IAAMA,KAAS,MAEjEC,eAAe,cACX1L,QAAS,OACT2L,SAAU,QACT7L,EAAMwB,YAAYC,KAAK,MAAQ,CAC5BlB,eAAgB,WAGxBuL,cAAe,CACXC,SAAU,IACV3I,UAAW,IACXwB,OAAQ5E,EAAMkC,QAAQ,GACtB1B,QAASR,EAAMkC,QAAQ,GACvB,OAAQ,CACJoJ,UAAW,UAEf,WAAY,CACRrG,UAAWjF,EAAMkC,QAAQ,SCHtBqP,GApBe,SAAC,GAAyB,IAAvBxX,EAAsB,EAAtBA,MAAO0E,EAAe,EAAfA,SAAe,EACLuO,oBAAS,GADJ,oBAC5CwE,EAD4C,KAC3BC,EAD2B,KAE7CjJ,EAAU1I,KAGhB,OACI,uCACI,eAACmE,EAAA,EAAD,CAAYC,QAAQ,YAAYoF,UAAU,KAA1C,+BACA,uBAAKb,UAAWD,EAAQ8I,aAAcjS,MAAO,CAAEuD,gBAAiB7I,EAAMxC,OAAtE,UACI,eAACma,EAAA,EAAD,CAAYrS,MAAO,CAAE9H,MAAOsT,GAAiB9Q,EAAMxC,QAAUoQ,QANtD,kBAAM8J,GAAmB,IAMhC,SACI,eAAC,KAAD,MAEJ,eAAC,GAAD,CAAOpS,MAAO,CAAEgC,WAAY,QAAUgO,KAAMmC,EAAiBtB,QARrD,kBAAMuB,GAAmB,IAQjC,SACI,eAAC,GAAD,CAAa1X,MAAOA,EAAO0E,SAAUA,aCE1CkT,GAnBS,SAAC,GAAkB,IAAhB1B,EAAe,EAAfA,SACjBzH,EAAU1I,KAChB,OACI,eAAC8R,GAAA,EAAD,UACI,gBAACC,GAAA,EAAD,CAAapJ,UAAWD,EAAQkD,aAAhC,UACI,eAACzH,EAAA,EAAD,CAAYE,MAAM,QAAQD,QAAQ,KAAKoF,UAAU,KAAjD,sBACA,eAACwI,EAAA,EAAD,IACA,sBAAKrJ,UAAWD,EAAQoD,eAAxB,SACKqE,EAAS3J,OAAS2J,EAASjT,KAAI,SAAC+U,EAAOrL,GACpC,OACI,eAAEsD,GAAA,EAAF,CAAgBvB,UAAWD,EAAQsD,cAAnC,SAAoDiG,GAAvCrL,MAEhB,eAACsD,GAAA,EAAD,CAAOvB,UAAWD,EAAQsD,cAA1B,SAA0CmE,YCmBpD+B,GA1BM,SAAC,GAAyB,IAAvBjY,EAAsB,EAAtBA,MAAO0E,EAAe,EAAfA,SAM3B,OACI,gBAAC,GAAD,WACI,uCACI,eAACwF,EAAA,EAAD,CAAYC,QAAQ,YAAYoF,UAAU,KAA1C,qCACA,gBAAC2I,GAAA,EAAD,CAAQC,QAAM,EAACnM,MAAOhM,EAAMoY,gBAAiBrK,SAT9B,SAAC6G,GACxBlQ,EAAS,CAAE1H,KAAM,uBAAwBob,gBAAiBxD,EAAEjC,OAAO3G,SAQ3D,UACI,yBAAQA,MAAM,SAAd,oBACA,yBAAQA,MAAM,YAAd,+BACA,yBAAQA,MAAM,UAAd,qBACA,yBAAQ4C,UAAQ,EAAhB,kCAGR,eAAC,GAAD,CAAuB5O,MAAOA,EAAO0E,SAAUA,IAC/C,uCACI,eAACwF,EAAA,EAAD,CAAYC,QAAQ,YAAYoF,UAAU,KAA1C,uBACA,eAAC,GAAD,CAAcvP,MAAOA,EAAO0E,SAAUA,WCnBhDxF,GAAe,CACjB1B,MAAO,GACP6a,YAAa,GACbD,gBAAiB,SACjBtE,SAAU,KACVzR,MAAO,MAGLiW,GAAU,SAACtY,EAAOC,GACpB,OAAQA,EAAOjD,MACX,IAAK,YACD,OAAO,6BAAKgD,GAAZ,IAAmBxC,MAAOyC,EAAOzC,QACrC,IAAK,mBACD,OAAO,6BAAKwC,GAAZ,IAAmBqY,YAAapY,EAAOoY,cAC3C,IAAK,qBACD,OAAO,6BAAKrY,GAAZ,IAAmBqY,YAAa,KACpC,IAAK,uBACD,OAAO,6BAAKrY,GAAZ,IAAmBoY,gBAAiBnY,EAAOmY,kBAC/C,IAAK,eACD,OAAO,6BAAKpY,GAAZ,IAAmB8T,SAAU7T,EAAO6T,WACxC,IAAK,YACD,OAAO,6BAAK9T,GAAZ,IAAmBqC,MAAOpC,EAAOoC,QACrC,IAAK,cACD,OAAO,6BAAKrC,GAAZ,IAAmBqC,MAAO,OAC9B,IAAK,iBACD,OAAOnD,GACX,QACI,OAAOc,IAgFJuY,GA5EI,SAAC/J,GAChB,IAAMC,EAAU1I,KACVrB,EAAWuK,cACX9P,EAAU8F,YAAYlE,IAHF,EAIsBkS,oBAAS,GAJ/B,oBAInBuF,EAJmB,KAIDC,EAJC,OAKKC,qBAAWJ,GAASpZ,IALzB,oBAKnBc,EALmB,KAKZ2Y,EALY,KAMpBpW,EAAiB0C,YAAY2T,IAEnChI,qBACI,WACQrO,IACAiM,EAAMqK,uBAAsB,GAC5BnU,EAASxB,MACTyV,EAAc,CAAE3b,KAAM,2BAyBlC,OACI,gBAAC6a,GAAA,EAAD,WACI,eAACiB,GAAA,EAAD,CACIpK,UAAWD,EAAQ6C,iBACnBrR,OACI,uCACI,eAAC0X,EAAA,EAAD,CAAY/J,QA1BL,WACvB6K,GAAoB,SAAAtD,GAChB,OAAQA,MAwBI,SACKqD,EAAmB,eAAC,KAAD,IAAgB,eAAC,KAAD,MAExC,eAACb,EAAA,EAAD,UACI,eAAC,KAAD,SAIZ7P,MAAM,2CACNiR,qBAAsB,CAAE5O,QAAS,KAAMoF,UAAW,QAGtD,gBAACuI,GAAA,EAAD,WACKU,EAAmB,eAAC,GAAD,CAAcxY,MAAOA,EAAO0E,SAAUiU,IAAoB,KAC9E,uBAAKjK,UAAWD,EAAQiD,qBAAxB,UACI,eAAC/D,GAAA,EAAD,CACIqL,QAAS,SAAApE,GAAC,OAAIA,EAAEjC,OAAOsG,UACvBlL,SArCG,SAAC6G,GACpB+D,EAAc,CAAE3b,KAAM,gBACtB2b,EAAc,CAAE3b,KAAM,mBAAoBqb,YAAazD,EAAEjC,OAAO3G,SAoChDA,MAAOhM,EAAMqY,YACbhW,MAAOkT,QAAQvV,EAAMqC,OACrB+L,WAAYpO,EAAMqC,MAClB0M,KAAK,QACLL,UAAWD,EAAQ+C,gBACnB1D,MAAM,cAAc3D,QAAQ,WAC5B+O,YAAY,0BAChB,eAACvK,GAAA,EAAD,CAAQC,SAAUzP,EAAQ4C,OAAQoI,QAAQ,YAAY3M,MAAM,UAAUoQ,QAxC/D,WACnB,IAAK5N,EAAMqY,YACP,OAAOM,EAAc,CAAE3b,KAAM,YAAaqF,MAAO,sB7BiChC,IAAAnB,E6B/BrBwD,G7B+BqBxD,E6B/BElB,E7B+BS,SAAA0E,GACpCA,EAASvF,GAAQ,CAAEc,OAAQvC,KAC3BsD,GAAWC,WAAWC,GAAStC,MAAK,SAAC+F,GACjCD,EAAS5B,GAAqB6B,EAAIzD,UAClCwD,EAASlE,MACTkE,EAASvE,GAAY,CAAEF,OAAQvC,QAChCoH,OAAM,SAAAzC,GACLuC,QAAQC,IAAIxC,GACZqC,EAASrB,GAAQhB,EAAMxD,SAASC,a6BtChC6Z,EAAc,CAAE3b,KAAM,oBAmCV,8B,gFC7FLmc,GAbO,SAAC,GAA4B,IAA1BC,EAAyB,EAAzBA,UAAWjD,EAAc,EAAdA,QAC1B1H,EAAU1I,KAChB,OACI,uBAAK2I,UAAWD,EAAQqH,mBAAxB,UACI,+BAAK,eAAC5L,EAAA,EAAD,CAAYE,MAAM,SAAlB,6BACL,iCACI,eAACuE,GAAA,EAAD,CAAQxE,QAAQ,YAAY3M,MAAM,UAAUoQ,QAASwL,EAArD,iBACA,eAACzK,GAAA,EAAD,CAAQxE,QAAQ,YAAY3M,MAAM,YAAYoQ,QAASuI,EAAvD,uBCHZjX,GAAe,GAEboZ,GAAU,SAACtY,EAAOC,GACpB,OAAQA,EAAOjD,MACX,IAAK,YACD,OAAO,6BAAKgD,GAAZ,IAAmBxC,MAAOyC,EAAOzC,QACrC,IAAK,mBACD,OAAO,6BAAKwC,GAAZ,IAAmBqY,YAAapY,EAAOoY,cAC3C,IAAK,qBACD,OAAO,6BAAKrY,GAAZ,IAAmBqY,YAAa,KACpC,IAAK,uBACD,OAAO,6BAAKrY,GAAZ,IAAmBoY,gBAAiBnY,EAAOmY,kBAC/C,IAAK,eACD,OAAO,6BAAKpY,GAAZ,IAAmB8T,SAAU7T,EAAO6T,WACxC,IAAK,YACD,OAAO,6BAAK9T,GAAZ,IAAmBqC,MAAOpC,EAAOoC,QACrC,IAAK,cACD,OAAO,6BAAKrC,GAAZ,IAAmBqC,MAAO,OAC9B,IAAK,iBACD,OAAOnD,GACX,QACI,OAAOc,IAgEJqZ,GA5DS,SAAC,GAAiB,IAAfnY,EAAc,EAAdA,QACvBhC,GAAY,gBAAQgC,GACpB,IAAMwD,EAAWuK,cAFoB,EAGNyJ,qBAAWJ,GAASpZ,IAHd,oBAG9Bc,EAH8B,KAGvB2Y,EAHuB,KAI/BlK,EAAU1I,KASVuT,EAAa,SAAC1E,GAChBlQ,EAAStB,GAAgBwR,EAAEC,cAAcpS,MAS7C,OACI,qCACI,gBAACoV,GAAA,EAAD,WACI,eAACiB,GAAA,EAAD,CACIhR,MACI,eAAC6F,GAAA,EAAD,CACIqL,QAAS,SAAApE,GAAC,OAAIA,EAAEjC,OAAOsG,UACvBvK,UAAWD,EAAQ+C,gBACnBnP,MAAOkT,QAAQvV,EAAMqC,OACrB+L,WAAYpO,EAAMqC,MAClByL,MAAM,UACNG,WAAS,EACTF,SA7BD,SAAC6G,GACpB+D,EAAc,CAAE3b,KAAM,gBACtB2b,EAAc,CAAE3b,KAAM,mBAAoBqb,YAAazD,EAAEjC,OAAO3G,SA4B5CA,MAAOhM,EAAMqY,cAErBpY,OACI,qCACI,eAAC0X,EAAA,EAAD,CAAYlV,GAAIvB,EAAQY,IAAK8L,QAAS0L,EAAtC,SACI,eAAC,KAAD,UAKhB,eAACxB,GAAA,EAAD,UACI,uCACI,eAAC,GAAD,CAAc9X,MAAOA,EAAO0E,SAAUiU,IACtC,gBAAC9H,EAAA,EAAD,CAAKnC,UAAWD,EAAQyD,gBAAxB,UACI,eAACvD,GAAA,EAAD,CAAQxE,QAAQ,YAAY3M,MAAM,UAAUiF,GAAIvB,EAAQY,IAAK8L,QAjCjE,SAACgH,GACjB,IAAK5U,EAAMqY,YAAa,OAAOM,EAAc,CAAE3b,KAAM,YAAaqF,MAAO,sBACzEqC,E/B0EmB,SAAAxD,GAAO,OAAI,SAAAwD,GAClCA,EAASvF,GAAQ,CAAEc,OAAQlC,GAAM0E,GAAIvB,EAAQY,OAC7Cd,GAAWY,YAAYV,GAAStC,MAAK,SAAA+F,GAC7BA,EAAI7F,KAAKoC,UACTwD,EAAS3B,GAAc4B,EAAI7F,KAAKoC,UAChCwD,EAASvE,GAAY,CAAEF,OAAQlC,GAAM0E,GAAIvB,EAAQY,OACjD4C,EAAStB,GAAgBlC,EAAQY,W+BhF5BF,CAAY5B,KA+BD,kBACA,eAAC2O,GAAA,EAAD,CAAQxE,QAAQ,YAAY3M,MAAM,YAAYiF,GAAIvB,EAAQY,IAAK8L,QAAS0L,EAAxE,kCCebC,GArFC,SAAC,GAAiB,IAAfrY,EAAc,EAAdA,QACTuN,EAAU1I,KACVrB,EAAWuK,cAFY,EAGqBgE,oBAAS,GAH9B,oBAGtBuG,EAHsB,KAGHC,EAHG,OAIGxG,mBAAS,MAJZ,oBAItBC,EAJsB,KAIZC,EAJY,OAKiBF,mBAAS,MAL1B,oBAKtByG,EALsB,KAKLC,EALK,KAMvBvX,EAAW6C,YAAY1B,IACvBpE,EAAU8F,YAAYlE,IACtB6Y,EAAUC,eAmBVC,EAAc,WAChB3G,EAAY,OAQV4G,EAAqB,kBAAMN,GAAqB,IAGtD,OACI,uCACMrX,EAAS4X,MAAK,SAAAvX,GAAE,OAAIA,IAAOvB,EAAQY,OAmC3B,eAAC,GAAD,CAAiBZ,QAASA,IAnCQ,eAAC2W,GAAA,EAAD,CAAMnJ,UAAWD,EAAQyC,SAAzB,SACxC,eAAC4H,GAAA,EAAD,CACIhR,MAAO8R,EAAQK,SAASC,WAAjB,oBAA2ChZ,EAAQY,KACtD,eAAC,IAAD,CAASwD,MAAO,CAAEuD,gBAAiB3H,EAAQ1D,MAAOA,MAAO0D,EAAQ1D,MAAQsT,GAAiB5P,EAAQ1D,OAAS,IACvGkR,UAAWD,EAAQ0C,YAAa5L,GAAE,oBAAerE,EAAQY,KAD7D,SAEKZ,EAAQmX,cAEb,sBAAK3J,UAAWD,EAAQ0L,cAAe7U,MAAO,CAC1CuD,gBAAiB3H,EAAQ1D,MACzBA,MAAO0D,EAAQ1D,MAAQsT,GAAiB5P,EAAQ1D,OAAS,IAF7D,SAGI0D,EAAQmX,cAEhB+B,UAAW,IAAI/P,KAAKnJ,EAAQmZ,UAAUC,cACtCra,OACI,uCACI,eAAC0X,EAAA,EAAD,CAAY/J,QAjCjB,SAAC4E,GAChBW,EAAYX,EAAMqC,gBAgCE,SACI,eAAC,KAAD,MAEJ,gBAAC,KAAD,CACInG,UAAWD,EAAQgD,YACnByB,SAAUA,EACVqH,aAAW,EACXjF,KAAMC,QAAQrC,GACdiD,QAAS2D,EACTU,mBAAoB,KACpBC,aAAc,CAAEC,SAAU,MAAOC,WAAY,QAC7CC,gBAAiB,CAAEF,SAAU,MAAOC,WAAY,UARpD,UAUI,gBAACE,GAAA,EAAD,CAAUjN,QAtCnB,SAACgH,GAChBlQ,EAASvB,GAAeyR,EAAEC,cAAcpS,KACxCqX,KAoCuDrX,GAAIvB,EAAQY,IAA3C,kBAAqD,eAAC,KAAD,OACrD,gBAAC+Y,GAAA,EAAD,CAAUjM,SAAUzP,EAAQwC,OAAOqY,MAAK,SAAAvX,GAAE,OAAIA,IAAOvB,EAAQY,OAAMW,GAAIvB,EAAQY,IAC3E8L,QA5DJ,SAACgH,GACzB+E,EAAmB/E,EAAEC,cAAcpS,IACnCgX,GAAqB,GACrBK,KAwDwB,oBACyC,eAAC,KAAD,iBAM7D,eAAC,GAAD,CAAOxE,KAAMkE,EAAmBrD,QAAS4D,EAAzC,SACI,eAAC,GAAD,CAAeX,UA7DL,WhCsFG,IAAA3X,EgCrFrBiD,GhCqFqBjD,EgCrFEiY,EhCqFW,SAAAhV,GACtCA,EAASvF,GAAQ,CAAEc,OAAQnC,EAAQ2E,GAAIhB,KACvCT,GAAWU,cAAcD,GAAW7C,MAAK,SAAA+F,GACrCD,EAAShD,GAAcD,IACvBiD,EAAShE,MACTgE,EAASvE,GAAY,CAAEF,OAAQnC,EAAQ2E,GAAIhB,WgCzF3CsY,IACAH,EAAQkB,QAAQ,cA0DiC3E,QAAS4D,U,UClEnDgB,GArBS,WACpB,IAAMtM,EAAU1I,KAChB,OACI,eAAC8R,GAAA,EAAD,CAAMnJ,UAAWD,EAAQyC,SAAzB,SACI,eAAC4H,GAAA,EAAD,CACIhR,MACI,gBAACoC,EAAA,EAAD,wBAEI,eAAC8Q,GAAA,EAAD,OAGRZ,UACI,eAAClQ,EAAA,EAAD,UACI,eAAC8Q,GAAA,EAAD,W,4BCPXjV,GAAYC,cAAW,SAACC,GAAD,MAAY,CAC5C8K,YAAa,CACT5K,QAAS,OACTK,eAAgB,gBAChBC,QAASR,EAAMkC,QAAQ,GACvB+C,UAAWjF,EAAMkC,QAAQ,IAE7B8S,OAAO,cACHhT,SAAU,WACViT,aAAcjV,EAAMkV,MAAMD,aAC1BrS,gBAAiBuS,aAAKnV,EAAMlJ,QAAQse,KAAKrQ,KAAM,KAC/C,UAAW,CACPnC,gBAAiBuS,aAAKnV,EAAMlJ,QAAQse,KAAKrQ,KAAM,MAEnD1D,WAAY,EACZC,MAAO,QACNtB,EAAMwB,YAAYa,GAAG,MAAQ,CAC1BhB,WAAYrB,EAAMkC,QAAQ,GAC1BZ,MAAO,SAGf+T,WAAY,CACR7U,QAASR,EAAMkC,QAAQ,EAAG,GAC1BM,OAAQ,OACRR,SAAU,WACVsT,cAAe,OACfpV,QAAS,OACTI,WAAY,SACZC,eAAgB,UAEpBgV,WAAY,CACRC,MAAO,EACPxT,SAAU,WACVpB,OAAQ,GAGZ6U,WAAW,cACPjV,QAASR,EAAMkC,QAAQ,EAAG,EAAG,EAAG,GAEhCiD,YAAY,cAAD,OAAgBnF,EAAMkC,QAAQ,GAA9B,OACXpB,WAAYd,EAAMe,YAAYjF,OAAO,SACrCwF,MAAO,QACNtB,EAAMwB,YAAYa,GAAG,MAAQ,CAC1Bf,MAAO,OACP,UAAW,CACPA,MAAO,UAInBoU,iBAAiB,cACb3J,SAAU,IACT/L,EAAMwB,YAAYC,KAAK,MAAQ,CAC5ByD,SAAU,GACV1E,QAAS,aAGjBlC,QAAS,CACLsE,gBAAiB+S,KAAM,KACvB,UAAW,CACP/S,gBAAiB+S,KAAM,OAG/BC,UAAW,CACPpV,QAAS,EACToE,OAAQ,EACRiR,UAAW,Y,qBCpEJC,GANG,CACdd,OADc,SACPe,EAAS/e,GACZ,OAAOmB,GAAcO,IAAd,wBAAmCqd,EAAnC,iBAAmD/e,MCC5DiC,GAAe,CACjB+c,aAAc,MAGLC,GAAcrc,YAAY,CACnCC,KAAM,SACNZ,gBACAa,SAAU,CACNoc,gBAAiB,SAACnc,EAAOC,GACrBD,EAAMic,aAAehc,EAAOC,SAEhCU,MAAO,kBAAM1B,O,GAKqBgd,GAAYrb,QAAvCsb,G,GAAAA,gBAAiBvb,G,GAAAA,MAGnBqb,GAAe,SAAAjc,GAAK,OAAIA,EAAMib,OAAOgB,cAQnCC,MAAf,QCQeE,OApCf,YAAsC,IAAdC,EAAa,EAAbA,UAAa,EACDpJ,mBAAS,MADR,oBAC1BqJ,EAD0B,KAChBC,EADgB,KAE3BC,EAAiB,SAAC5H,GACpB,IAAMnT,EAAYmT,EAAEC,cAAcC,aAAa,aACzC2H,EAAS7H,EAAEC,cAAcC,aAAa,UAC5CyH,EAAY,CACRrC,SAAS,aAAD,OAAezY,GACvBzB,MAAO,CAAEyc,aAIjB,OAAIH,EACO,eAAC,KAAD,CAAU/W,GAAI+W,IAIrB,uBAAKhX,MAAO,CAAEiC,MAAO,QAArB,UACK8U,GAAaA,EAAUla,UAAYka,EAAUla,SAASoK,OAAS,2CAAmB,KAClF8P,GAAaA,EAAUla,UAAYka,EAAUla,SAASc,KAAI,SAAA4M,GACvD,OAAO,eAACgL,GAAA,EAAD,CAAU6B,UAAW7M,EAAK/N,IAAK8L,QAAS4O,EAAxC,SAAwE3M,EAAKwI,aAAhBxI,EAAK/N,QAE5Eua,GAAaA,EAAUM,OAASN,EAAUM,MAAMpQ,OAAS,wCAAgB,KACzE8P,GAAaA,EAAUM,OAASN,EAAUM,MAAM1Z,KAAI,SAAA4M,GACjD,OAAO,eAACgL,GAAA,EAAD,CAAU6B,UAAW7M,EAAK3O,QAAS0b,OAAQ/M,EAAK/N,IAAK8L,QAAS4O,EAA9D,SAEH,iCACK,eAACtS,EAAA,EAAD,CAAYC,QAAQ,KAAKoF,UAAU,KAAnC,SAAyCM,EAAKwI,cAC9CxI,EAAKgN,aAJ4EhN,EAAK/N,YCyDhGgb,GAvEK,SAAC,GAAoE,IAAlExH,EAAiE,EAAjEA,KAAMyH,EAA2D,EAA3DA,WAAYf,EAA+C,EAA/CA,QAA+C,IAAtCgB,qBAAsC,MAAtB,MAAsB,EAAfC,EAAe,EAAfA,SAC/DxO,EAAU1I,KACVrB,EAAWuK,cAFmE,EAGpCgE,mBAAS,IAH2B,oBAG7EiK,EAH6E,KAG3DC,EAH2D,OAIhDlK,oBAAS,GAJuC,oBAI7EmK,EAJ6E,KAIjEC,EAJiE,KAK9EjK,EAAaqD,GAAYyG,EAAkB,KAC3CxJ,EAAeC,iBAAO,MACtB2J,EAAe3J,iBAAO,MAC5BxB,GAAauB,EAAc4J,GAAc,WACrCD,GAAc,MAGlBzM,qBAAU,WACN,OAAOlM,EAAS9D,QACjB,CAAC8D,IAEJ,IAAM2X,EAAYpX,YAAYgX,IAE9BrL,qBAAU,WACFwC,GACA1O,EFPU,SAACsX,EAAS5I,GAAV,OAAyB,SAAA1O,GAC3CqX,GAAUd,OAAOe,EAAS5I,GAAYxU,MAAK,SAAA+F,GACvCD,EAASyX,GAAgBxX,EAAI7F,WEKhBmc,CAAOe,EAAS5I,MAE9B,CAACA,EAAY4I,EAAStX,IAazB,OACI,qCACI,gBAACuL,GAAA,EAAD,CAAOvB,UAAWD,EAAQsC,YAA1B,UACI,eAACpC,GAAA,EAAD,CAAQnR,MAAM,UAAUoQ,QAASmP,EAAY5S,QAAQ,YACjDuE,UAAS,UAAKD,EAAQkN,iBAAb,YAAiCrG,EAAO7G,EAAQlK,QAAU,IADvE,SAEK,UAAC+Q,EAA+B2H,EAArBD,KAChB,sBAAKtO,UAAWD,EAAQwM,OAAxB,SACI,iCACI,sBAAKvM,UAAWD,EAAQ6M,WAAxB,SAAoC,eAAC,KAAD,MACpC,iCACI,eAACiC,GAAA,EAAD,CACInL,IAAKkL,EACL1O,SAAU0G,EACVtJ,MAAOkR,EACPnP,SAzBP,SAAA6G,GACa,KAA1BA,EAAEC,cAAc7I,OAActH,EAAS9D,MAC3Cuc,EAAoBvI,EAAEC,cAAc7I,QAwBZ4B,QArBH,SAACgH,GAClBU,GACJ+H,GAAc,IAoBUnE,YAAY,eACZzK,QAAS,CACLvI,KAAMuI,EAAQ+O,UACdlQ,MAAOmB,EAAQiN,YAEnB+B,WAAY,CAAE,aAAc,YAE/BL,GAAc,eAACnN,GAAA,EAAD,CAAOmC,IAAKsB,EAAchF,UAAWD,EAAQ+M,WAA7C,SACX,eAAC,GAAD,CAAca,UAAWA,oBCT1CqB,GAnDE,WACb,IAAMjP,EAAU1I,KACVuW,EAAWvX,KAFE,EAGiCkO,oBAAS,GAH1C,oBAGZ0K,EAHY,KAGQ9E,EAHR,KAIbnU,EAAWuK,cACX9P,EAAU8F,YAAYlE,IACtBoB,EAAW8C,YAAY2Y,IACvBC,EAAsB5Y,YAAY3C,IAIxCsO,qBACI,WvCiHmB,IAAC3R,EAAQoC,EAAMC,EuChHN,IAApBa,EAASoK,QAAiBpN,EAAQ6C,iBAAoB6b,GACtDnZ,GvC+GoC,SAAAA,GAChDA,EAASvF,GAAQ,CAAEc,OAAQhC,MAC3B+C,GAAWI,YAAYnC,EAAQoC,EAAMC,GAAO1C,MAAK,SAAA+F,GAC7CD,EAAS/B,MACU,MAAfgC,EAAImZ,QACJpZ,EAAS9B,GAAY+B,EAAI7F,KAAKqD,WAC9BuC,EAASvE,GAAY,CAAEF,OAAQhC,OAE/ByG,EAASvE,GAAY,CAAEF,OAAQhC,cuCrHhC,CAACyG,EAAUvF,EAAQ6C,gBAAiBG,EAASoK,OAAQsR,IAW5D,OAAIvB,EAAiB,eAAC,KAAD,CAAU/W,GAAG,WAG9B,uCACI,eAAC2E,EAAA,EAAD,CAAYE,MAAM,SAASD,QAAQ,KAAKoF,UAAU,KAAlD,sBACA,eAAC,GAAD,CAAayM,QAAQ,WAAW1G,KAAMqI,EAAoBZ,WAZzC,WACrBlE,GAAsB,SAAC1D,GACnB,OAAQA,MAWJ6H,cAAc,cAAcC,SAAS,aAEzC,uBAAKvO,UAAWD,EAAQuC,kBAAxB,UACI,sBAAKtC,UAAS,UAAKD,EAAQtM,SAAb,YAAyBwb,EAAqBlP,EAAQ2C,KAAO,IAA3E,SACKjS,EAAQ6C,gBAAkB,eAAC,GAAD,IACrBG,EAASoK,OAAUpK,EAASc,KAAI,SAAC/B,EAASyL,GACxC,OACI,eAAC,GAAD,CAAiBzL,QAASA,GAAZyL,MAEhB,8DAEd,sBAAK+B,UAAS,UAAKD,EAAQxN,WAAb,YAA4B0c,EAAoC,GAAflP,EAAQ2C,MAAvE,SACI,eAAC,GAAD,CAAYyH,sBAAuBA,aCzBxCkF,GAzBD,WACV,IAAMrZ,EAAWuK,cACX9P,EAAU8F,YAAYlE,IACtBid,EAAW/Y,YAAYvF,IAU7B,OARAkR,qBACI,WACSoN,EAASzR,QAAWpN,EAAQG,eAC7BoF,G1C2Dc,SAAAA,GAC1BA,EAASvF,GAAQ,CAAEc,OAAQrC,KAC3Ba,GAASM,WAAWH,MAAK,SAAA+F,GACrBC,QAAQC,IAAIF,EAAIqZ,UAChBtZ,EAAS/D,GAAmBgE,EAAIsZ,aAChCvZ,EAASnE,GAASoE,EAAIqZ,WACtBtZ,EAASvE,GAAY,CAAEF,OAAQrC,a0C/D5B,CAACogB,EAASzR,OAAQpN,EAAQG,cAAeoF,IAI5C,qCACKsZ,EAAS/a,KAAI,SAAAib,GACV,OAAO,gBAACrG,GAAA,EAAD,WACH,eAAC,IAAD,CAASvS,MAAOhI,EAAWiI,GAAE,gBAAW2Y,EAAQpc,KAAhD,SAAuD,8BAAKoc,EAAQja,UACpE,mDAAqBia,EAAQzd,mBAFfyd,EAAQpc,WCf3Bqc,GANF,WACT,OACI,wCCIOC,GANU,WACrB,OACI,8CC8BOC,GA1BG,WACd,IAAM3Z,EAAWuK,cACXqN,EAAWvX,KACXmZ,EAAUjZ,YAAYzF,IACtBL,EAAU8F,YAAYlE,IAU5B,OARA6P,qBACI,WACSsN,GAAY/e,EAAQC,mBACrBsF,G7C8CkB,SAAAA,GAC9BA,EAASvF,GAAQ,CAAEc,OAAQtC,KAC3Bc,GAASC,eAAeE,MAAK,SAAA+F,GACzBC,QAAQC,IAAIF,GACZD,EAAStE,GAAYuE,IACrBD,EAASvE,GAAY,CAAEF,OAAQtC,QAChCmH,OAAM,SAAAnF,GACLiF,QAAQC,IAAIlF,EAAId,SAASC,c6CnDtB,CAACof,EAASxZ,EAAUvF,EAAQC,oBAG/Bkd,EAAiB,eAAC,KAAD,CAAU/W,GAAG,WAC9BpG,EAAQmf,eAAuB,eAAC,GAAD,IAC9BJ,EAED,uCACI,8BAAKA,EAAQja,QACb,gCAAKia,EAAQpe,KAAb,IAAoBoe,EAAQla,WAC5B,8BAAKka,EAAQta,QACb,mDAAqBsa,EAAQzd,cAA7B,IAA6Cyd,EAAQK,cAArD,UANa,gCCGVC,GAvBC,CAEZC,QAFY,SAEJhd,EAAWid,GACf,OAAOtgB,GAAc+C,KAAd,mBAA+BM,EAA/B,UAAkDid,GAAM9f,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAE7F6f,SALY,SAKHld,EAAWmd,GAChB,IAAMrd,EAAI,qBAAiBqd,GAAQ,GACnC,OAAOxgB,GAAcO,IAAd,mBAA8B8C,EAA9B,YAA2CF,KAEtDsd,iBATY,SASKpd,EAAWkb,GACxB,OAAOve,GAAcyD,IAAd,mBAA8BJ,EAA9B,sBAA6Dkb,IAExEmC,SAZY,SAYHrd,EAAWgb,EAAQiC,GACxB,OAAOtgB,GAAcyD,IAAd,mBAA8BJ,EAA9B,kBAAiDgb,GAAUiC,IAEtEK,qBAfY,SAeStd,EAAWgb,EAAQqB,GACpC,OAAO1f,GAAcyD,IAAd,mBAA8BJ,EAA9B,kBAAiDgb,EAAjD,WAAkEqB,IAE7EkB,WAlBY,SAkBDvd,EAAWgb,GAClB,OAAOre,GAAcuD,OAAd,mBAAiCF,EAAjC,kBAAoDgb,MCjB7Dvd,GAAe,CACjByd,MAAO,GACPxd,QAAS,CACL4C,QAAQ,EACRkd,cAAc,EACdtd,OAAQ,GACRud,KAAM,GACNC,eAAgB,GAChBC,aAAa,GAEjBC,SAAU,CACNC,YAAa,EACbC,gBAAiB,GAErBjd,WAAW,EACXF,SAAU,GACVC,MAAO,MAIEmd,GAAY3f,YAAY,CACjCC,KAAM,OACNZ,gBACAa,SAAU,CACNZ,QAAS,SAACa,EAAOC,GACT,CAACnC,EAAQC,GAAMC,IAAiBgc,MAAK,SAAAnK,GAAI,OAAIA,IAAS5P,EAAOC,QAAQD,UACrED,EAAMb,QAAQc,EAAOC,QAAQD,QAA7B,sBAA2CD,EAAMb,QAAQc,EAAOC,QAAQD,SAAxE,CAAiFA,EAAOC,QAAQuC,KAGpGzC,EAAMb,QAAQc,EAAOC,QAAQD,SAAU,GAE3CE,YAAa,SAACH,EAAOC,GACb,CAACnC,EAAQC,GAAMC,IAAiBgc,MAAK,SAAAnK,GAAI,OAAIA,IAAS5P,EAAOC,QAAQD,UACrED,EAAMb,QAAQc,EAAOC,QAAQD,QAA7B,YAA2CD,EAAMb,QAAQc,EAAOC,QAAQD,QAAQyC,QAAO,SAAAD,GAAE,OAAIA,IAAOxC,EAAOC,QAAQuC,OAGvHzC,EAAMb,QAAQc,EAAOC,QAAQD,SAAU,GAE3C0C,kBAAmB,SAAA3C,GACfA,EAAMsC,WAAY,GAEtBuc,iBAAkB,SAAC7e,EAAOC,GACtBD,EAAM2c,MAAQ1c,EAAOC,SAEzBuf,SAAU,SAACzf,EAAOC,GACdD,EAAM2c,MAAN,sBAAkB3c,EAAM2c,OAAxB,YAAkC1c,EAAOC,WAE7CiD,eAAgB,SAACnD,EAAOC,GACpBD,EAAMoC,SAAN,sBAAqBpC,EAAMoC,UAA3B,CAAqCnC,EAAOC,WAEhDkD,gBAAiB,SAACpD,EAAOC,GACrBD,EAAMoC,SAAN,YAAqBpC,EAAMoC,SAASM,QAAO,SAAAD,GAAE,OAAIA,IAAOxC,EAAOC,aAEnEwf,kBAAmB,SAAC1f,EAAOC,GACvBD,EAAM2c,MAAN,CAAe1c,EAAOC,SAAtB,mBAAkCF,EAAM2c,SAE5CgD,WAAY,SAAC3f,EAAOC,GAChB,IAAI+C,GAAW,EACfhD,EAAM2c,MAAQ3c,EAAM2c,MAAM1Z,KAAI,SAAAyb,GAC1B,OAAK1b,GAAY0b,EAAK5c,MAAQ7B,EAAOC,QAAQ4B,IAItC4c,GAHH1b,GAAW,EACJ/C,EAAOC,aAM1B0f,yBAA0B,SAAC5f,EAAOC,GAC9B,IAAI+C,GAAW,EACfhD,EAAM2c,MAAQ3c,EAAM2c,MAAM1Z,KAAI,SAAAyb,GAC1B,OAAK1b,GAAY0b,EAAK5c,MAAQ7B,EAAOC,QAAQ4B,IAItC4c,GAHH1b,GAAW,EACJ,6BAAK0b,GAAZ,IAAkBmB,UAAWnB,EAAKmB,gBAK9CC,cAAe,SAAC9f,EAAOC,GACnBD,EAAMqf,SAASE,gBAAkBtf,EAAOC,SAE5C6f,cAAe,SAAA/f,GACXA,EAAMqf,SAASC,eAEnBN,WAAY,SAAChf,EAAOC,GAChBD,EAAM2c,MAAQ3c,EAAM2c,MAAMja,QAAO,SAAAgc,GAAI,OAAIA,EAAK5c,MAAQ7B,EAAOC,YAEjEU,MAAO,kBAAM1B,O,GAM0CsgB,GAAU3e,QAF1D1B,G,GAAAA,QAASgB,G,GAAAA,YAAasf,G,GAAAA,SAAUC,G,GAAAA,kBAAmBvc,G,GAAAA,eAAgBC,G,GAAAA,gBAC9E4b,G,GAAAA,WAAYW,G,GAAAA,WAAYC,G,GAAAA,yBAA0Bf,G,GAAAA,iBAClDje,G,GAAAA,MAAO+B,G,GAAAA,kBAAmBmd,G,GAAAA,cAAeC,G,GAAAA,cAGhChf,GAAa,SAAAf,GAAK,OAAIA,EAAM0e,KAAKvf,SACjCwd,GAAQ,SAAA3c,GAAK,OAAIA,EAAM0e,KAAK/B,OAE5Bra,GAAY,SAAAtC,GAAK,OAAIA,EAAM0e,KAAKpc,WAChC0d,GAAe,SAAAhgB,GAAK,OAAIA,EAAM0e,KAAKtc,UACnCid,GAAW,SAAArf,GAAK,OAAIA,EAAM0e,KAAKW,UAW/BV,GAAW,SAACld,EAAWmd,GAAZ,OAAqB,SAAAla,GACzCA,EAASvF,GAAQ,CAAEc,OAAQ/B,MAC3BsgB,GAAQG,SAASld,EAAWmd,GAAMhgB,MAAK,SAAA+F,GACnCD,EAAS/B,MACLgC,EAAI7F,KAAK6d,OACTjY,EAAS+a,GAAS9a,EAAI7F,KAAK6d,QAC3BjY,EAASqb,MACTrb,EAASvE,GAAY,CAAEF,OAAQ/B,MAC/BwG,EAASob,GAAcG,KAAKC,KAAKvb,EAAI7F,KAAKqhB,WAzH5B,OA2Hdzb,EAASvE,GAAY,CAAEF,OAAQ/B,WAsD5BshB,MAAf,QCzKevH,GARM,SAAC,GAAyB,IAAvBjY,EAAsB,EAAtBA,MAAO0E,EAAe,EAAfA,SAC3B,OACI,eAAC,GAAD,UACI,eAAC,GAAD,CAAuB1E,MAAOA,EAAO0E,SAAUA,OCJ9CqB,GAAYC,cAAW,SAACC,GAAD,MAAY,CAC5Cma,QAAS,CACLnY,SAAU,YAEdoY,aAAc,CACVxV,OAAQ,SACR,sBAAuB,CACnBM,SAAU,GACVC,YAAa,GACb/E,aAAc,GACd7I,MAAO,UACPqL,gBAAiBiI,GAAiB7K,IAEtC,UAAW,CACP,qBAAsB,CAClBoF,gBAAiB,4BACjBC,oBAAqB,aAIjCgV,YAAa,CACT/Y,MAAO,OACP2D,UAAWjF,EAAMkC,QAAQ,GACzB1B,QAASR,EAAMkC,QAAQ,GACvBoY,QAAS,EACTtP,UAAW,WAEXlK,WAAYd,EAAMe,YAAYjF,OAAO,YAAa,CAC9CkF,OAAQhB,EAAMe,YAAYC,OAAOC,MACjCC,SAAUlB,EAAMe,YAAYG,SAASqZ,WAEzC,uBAAwB,CACpB1O,SAAU,WAGlBV,KAAM,CACFnJ,SAAU,WACVsY,QAAS,EACThZ,MAAO,EACPkB,OAAQ,EACRwI,UAAW,WACXlK,WAAYd,EAAMe,YAAYjF,OAAO,MAAO,CACxCkF,OAAQhB,EAAMe,YAAYC,OAAOC,MACjCC,SAAUlB,EAAMe,YAAYG,SAASqZ,YAG7CC,aAAa,cACTta,QAAS,OACT4B,SAAU,GACT9B,EAAMwB,YAAYC,KAAK,MAAQ,CAC5BvB,QAAS,QACT,UAAW,CACPoB,MAAO,UAInBmZ,cAAc,cACVja,QAASR,EAAMkC,QAAQ,IACtBlC,EAAMwB,YAAYC,KAAK,MAAQ,CAC5B0D,YAAa,IAGrBuV,SAAU,CACNzV,UAAWjF,EAAMkC,QAAQ,IAE7ByY,cAAe,CACX1V,UAAWjF,EAAMkC,QAAQ,IAE7B2N,mBAAoB,CAChB9D,SAAU,IACV,MAAO,CACHvL,QAASR,EAAMkC,QAAQ,IAE3B,WAAY,CACR0C,OAAQ5E,EAAMkC,QAAQ,KAG9B0Y,WAAY,CACR1a,QAAS,OACTI,WAAY,SACZ,oBAAqB,CACjBqB,YAAa3B,EAAMkC,QAAQ,KAGnC2Y,SAAU,CACN,OAAQ,CACJ3a,QAAS,OACTK,eAAgB,gBAChB,QAAS,CACLc,WAAYrB,EAAMkC,QAAQ,MAItC+J,gBAAiB,CACbhH,UAAWjF,EAAMkC,QAAQ,GACzB,iBAAkB,CACdP,YAAa3B,EAAMkC,QAAQ,KAGnC4Y,YAAa,CACT9Y,SAAU,YAEd+Y,WAAY,CACR/Y,SAAU,WACV0D,KAAM,IAEVsV,UAAW,CACPpW,OAAQ,EACRpE,QAAS,EACTqV,UAAW,QAEfoF,UAAW,GAGXC,OAAQ,OC5GNjiB,GAAe,CACjB1B,MAAO,GACPqf,SAAU,GACVxa,MAAO,MAGLiW,GAAU,SAACtY,EAAOC,GACpB,OAAQA,EAAOjD,MACX,IAAK,YACD,OAAO,6BAAKgD,GAAZ,IAAmBxC,MAAOyC,EAAOzC,QACrC,IAAK,gBACD,OAAO,6BAAKwC,GAAZ,IAAmB6c,SAAU5c,EAAO4c,WACxC,IAAK,kBACD,OAAO,6BAAK7c,GAAZ,IAAmB6c,SAAU,KACjC,IAAK,YACD,OAAO,6BAAK7c,GAAZ,IAAmBqC,MAAOpC,EAAOoC,QACrC,IAAK,cACD,OAAO,6BAAKrC,GAAZ,IAAmBqC,MAAO,OAC9B,IAAK,iBACD,OAAOnD,GACX,QACI,OAAOc,IAmEJohB,GA/DC,SAAC,GAAyB,IAAvB3f,EAAsB,EAAtBA,UAAW6T,EAAW,EAAXA,KACpB7G,EAAU1I,KADqB,EAEN2S,qBAAWJ,GAASpZ,IAFd,oBAE9Bc,EAF8B,KAEvB2Y,EAFuB,OAGW1F,oBAAS,GAHpB,oBAG9BuF,EAH8B,KAGZC,EAHY,KAI/B/T,EAAWuK,cAsBjB,OACI,sBAAKP,UAAWD,EAAQ2R,QAAxB,SACI,gBAACnQ,GAAA,EAAD,CAAOvB,UAAS,UAAM4G,EAAsB7G,EAAQ6R,YAAvB7R,EAAQ2C,MAArC,UACI,gBAACzB,GAAA,EAAD,CAAM7G,WAAS,EAAf,UACI,uBAAK4F,UAAWD,EAAQgS,aAAxB,UACI,eAAC9S,GAAA,EAAD,CACIqL,QAAS,SAAApE,GAAC,OAAIA,EAAEjC,OAAOsG,UACvBvK,UAAWD,EAAQ4R,aACnBtS,SA3BJ,SAAC6G,GACjB+D,EAAc,CAAE3b,KAAM,gBACtB2b,EAAc,CAAE3b,KAAM,gBAAiB6f,SAAUjI,EAAEjC,OAAO3G,SA0BtCA,MAAOhM,EAAM6c,SACb9N,KAAK,QACL1M,MAAOkT,QAAQvV,EAAMqC,OACrB+L,WAAYpO,EAAMqC,MAClB8H,QAAQ,WACR2D,MAAM,OACNoL,YAAY,kBAEhB,sBAAKxK,UAAWD,EAAQiS,cAAxB,SACI,eAAC/R,GAAA,EAAD,CAAQf,QA1BZ,WAChB,IAAK5N,EAAM6c,SACP,OAAOlE,EAAc,CAAE3b,KAAM,YAAaqF,MAAO,sBAErDqC,EHqDkB,SAACjD,EAAWid,GAAZ,OAAqB,SAAAha,GAC3CA,EAASvF,GAAQ,CAAEc,OAAQvC,KAC3B8gB,GAAQC,QAAQhd,EAAWid,GAAM9f,MAAK,SAAA+F,GAClCD,EAASgb,GAAkB/a,EAAI+Z,OAC/Bha,EAASvE,GAAY,CAAEF,OAAQvC,SGzDtB2jB,CAAW5f,EAAWzB,IAC/B2Y,EAAc,CAAE3b,KAAM,oBAqB4BmN,QAAQ,YAAtC,yBAIR,+BACI,eAACwN,EAAA,EAAD,CAAY/J,QArCL,WACvB6K,GAAoB,SAAAtD,GAChB,OAAQA,MAmCI,SACKqD,EAAmB,eAAC,KAAD,IAAgB,eAAC,KAAD,WAIhD,sBAAK9J,UAAWD,EAAQkS,SAAxB,SACKnI,EAAmB,eAAC,GAAD,CAAcxY,MAAOA,EAAO0E,SAAUiU,IAAoB,a,yCChF9FzZ,GAAe,GAEboZ,GAAU,SAACtY,EAAOC,GACpB,OAAQA,EAAOjD,MACX,IAAK,YACD,OAAO,6BAAKgD,GAAZ,IAAmBxC,MAAOyC,EAAOzC,QACrC,IAAK,gBACD,OAAO,6BAAKwC,GAAZ,IAAmB6c,SAAU5c,EAAO4c,WACxC,IAAK,kBACD,OAAO,6BAAK7c,GAAZ,IAAmB6c,SAAU,KACjC,IAAK,YACD,OAAO,6BAAK7c,GAAZ,IAAmBqC,MAAOpC,EAAOoC,QACrC,IAAK,cACD,OAAO,6BAAKrC,GAAZ,IAAmBqC,MAAO,OAC9B,IAAK,iBACD,OAAOnD,GACX,QACI,OAAOc,IAgEJshB,GA1DM,SAAC,GAAyB,IAAvB7f,EAAsB,EAAtBA,UAAWid,EAAW,EAAXA,KAC/Bxf,GAAY,gBAAQwf,GACpB,IAAMha,EAAWuK,cAFyB,EAGXyJ,qBAAWJ,GAASpZ,IAHT,oBAGnCc,EAHmC,KAG5B2Y,EAH4B,KAIpClK,EAAU1I,KAOVuT,EAAa,SAAC1E,GAChBlQ,EAAStB,GAAgBwR,EAAEC,cAAcpS,MAS7C,OACI,qCACI,gBAACoV,GAAA,EAAD,CAAMnJ,UAAWD,EAAQmS,cAAzB,UACI,eAAC9H,GAAA,EAAD,CACIhR,MACI,eAAC6F,GAAA,EAAD,CACIqL,QAAS,SAAApE,GAAC,OAAIA,EAAEjC,OAAOsG,UACvBvK,UAAWD,EAAQ4R,aACnBhe,MAAOkT,QAAQvV,EAAMqC,OACrB+L,WAAYpO,EAAMqC,MAClByL,MAAM,OACNG,WAAS,EACTF,SA3BJ,SAAC6G,GACjB+D,EAAc,CAAE3b,KAAM,gBACtB2b,EAAc,CAAE3b,KAAM,gBAAiB6f,SAAUjI,EAAEjC,OAAO3G,SA0BtCA,MAAOhM,EAAM6c,WAErB5c,OACI,eAAC0X,EAAA,EAAD,CAAYlV,GAAIic,EAAK5c,IAAK8L,QAAS0L,EAAnC,SACI,eAAC,KAAD,QAIZ,eAACxB,GAAA,EAAD,UACI,uCACI,eAAC,GAAD,UACI,eAAC,GAAD,CAAuB9X,MAAOA,EAAO0E,SAAUiU,MAEnD,gBAAC9H,EAAA,EAAD,CAAKnC,UAAWD,EAAQyD,gBAAxB,UACI,eAACvD,GAAA,EAAD,CAAQlM,GAAIic,EAAK5c,IAAK8L,QAjC1B,SAACgH,GACjB,IAAK5U,EAAM6c,SAAU,OAAOlE,EAAc,CAAE3b,KAAM,YAAaqF,MAAO,sBACtEqC,EJmFgB,SAACjD,EAAWgb,EAAQiC,GAApB,OAA6B,SAAAha,GACjDA,EAASvF,GAAQ,CAAEc,OAAQlC,GAAM0E,GAAIga,KACrC+B,GAAQM,SAASrd,EAAWgb,EAAQiC,GAAM9f,MAAK,SAAA+F,GACvCA,EAAI7F,KAAK4f,OACTha,EAASib,GAAWhb,EAAI7F,KAAK4f,OAC7Bha,EAASvE,GAAY,CAAEF,OAAQlC,GAAM0E,GAAIga,KACzC/X,EAAStB,GAAgBqZ,SIzFpBqC,CAASrd,EAAWid,EAAK5c,IAAK9B,KA+ByBmK,QAAQ,YAAY3M,MAAM,UAAtE,kBACA,eAACmR,GAAA,EAAD,CAAQlM,GAAIic,EAAK5c,IAAK8L,QAAS0L,EAAYnP,QAAQ,YAAY3M,MAAM,YAArE,kC,2BC9Ef+jB,GAAgBC,aAAW,CACpCtb,KAAM,CACF,YAAa,CACT1I,MAAOikB,KAAU,OAGzBC,QAAS,IANgBF,EAO1B,SAAChT,GAAD,OAAW,eAACD,GAAA,EAAD,cAAU/Q,MAAM,WAAcgR,OAE/BmT,GAAeH,aAAW,CACnCtb,KAAM,CACF2C,gBAAiB+Y,KAAO,OAFJJ,EAIzB,SAAChT,GAAD,OAAW,eAAC4B,GAAA,EAAD,cAAQ5S,MAAM,WAAcgR,OCiH3BqT,GA9GF,SAAC,GAA+B,IAA7BpgB,EAA4B,EAA5BA,UAAiBid,EAAW,EAAjB7O,KACjB+J,EAAUC,eACViI,EAAcnO,iBAAO,MAFa,EAGRV,mBAAS,MAHD,oBAGjCC,EAHiC,KAGvBC,EAHuB,OAIUF,oBAAS,GAJnB,oBAIjCuG,EAJiC,KAIdC,EAJc,OAKAxG,mBAAS,MALT,oBAKjC8O,EALiC,KAKnBC,EALmB,KAMlC5f,EAAW6C,YAAY+a,IACvB7gB,EAAU8F,YAAYlE,IACtB0N,EAAU1I,KACVrB,EAAWuK,cACXgT,EAAUvD,EAAKlhB,MAAQsT,GAAiB4N,EAAKlhB,OAAS,GAE5DoT,qBACI,WACIkR,GAAeA,EAAYrP,SAAWqP,EAAYrP,QAAQyP,eAAe,CAAEC,SAAU,aACtF,CAACvI,EAAQK,SAASja,MAAO8hB,IAIhC,IAIMhI,EAAc,WAChB3G,EAAY,OAwBV4G,EAAqB,kBAAMN,GAAqB,IAEhD2I,EAAqB,WACvB1d,ENqF4B,SAACjD,EAAWgb,EAAQqB,GAApB,OAA+B,SAAApZ,GAC/DA,EAASvF,GAAQ,CAAEc,OAAQjC,GAAiByE,GAAIga,KAChD,IAAM4F,EAAiB,IAAIhY,KAC3BmU,GAAQO,qBAAqBtd,EAAWgb,EAAQ,CAAEqB,WAAUlf,MAAK,SAAA+F,GAC7DD,EAASkb,GAAyB,CAAE9d,IAAK2a,KACzC,IAAM6F,EAAW,IAAIjY,KACfkY,EAAOzL,YAAW,WACpBpS,EAASvE,GAAY,CAAEF,OAAQjC,GAAiByE,GAAIga,OACrD,KACE6F,EAAWD,EAAkB,MAC9B3d,EAASvE,GAAY,CAAEF,OAAQjC,GAAiByE,GAAIga,KACpD1F,aAAawL,QMhGRxD,CAAqBtd,EAAWid,EAAK5c,KAAM4c,EAAKmB,YAG7D,OACI,uBAAKnR,UAAWD,EAAQsS,YAAxB,UAEM3e,EAAS4X,MAAK,SAAAvX,GAAE,OAAIA,IAAOic,EAAK5c,OA4CxB,eAAC,GAAD,CAAcL,UAAWA,EAAWid,KAAMA,IA5CX,gBAAC7G,GAAA,EAAD,CAAMnJ,UAAWD,EAAQmS,cAAzB,UACrC,eAAC9H,GAAA,EAAD,CACIrW,GAAIic,EAAK5c,IACTwD,MAAO,CAAEuD,gBAAiB6V,EAAKlhB,MAAOA,MAAOykB,GAC7Cna,MACI,uBAAK4G,UAAWD,EAAQoS,WAAxB,UACI,eAACc,GAAD,UACI,eAACJ,GAAD,CACI3S,SAAUzP,EAAQggB,eAAenF,MAAK,SAAAvX,GAAE,OAAIA,IAAOic,EAAK5c,OACxDW,GAAIic,EAAK5c,IACTiM,SAAUqU,EACVV,QAAShD,EAAKmB,SACd2C,YAAa,eAAC,KAAD,QAErB,eAACtY,EAAA,EAAD,UAAawU,EAAK7B,cAG1B5c,OACI,uCACI,eAAC0X,EAAA,EAAD,CAAY/J,QAzDjB,SAAC4E,GAChBW,EAAYX,EAAMqC,gBAwDE,SACI,eAAC,KAAD,CAAcvP,MAAO,CAAE9H,MAAOykB,OAElC,gBAAC,KAAD,CACIvT,UAAWD,EAAQqS,SACnB5N,SAAUA,EACVqH,aAAW,EACXjF,KAAMC,QAAQrC,GACdiD,QAAS2D,EACTU,mBAAoB,KACpBC,aAAc,CAAEC,SAAU,MAAOC,WAAY,QAC7CC,gBAAiB,CAAEF,SAAU,MAAOC,WAAY,UARpD,UAUI,gBAACE,GAAA,EAAD,CAAUjN,QAnDnB,WACflJ,EAASvB,GAAeub,EAAK5c,MAC7BgY,KAiDwB,kBAAoC,eAAC,KAAD,OACpC,gBAACe,GAAA,EAAD,CAAUjM,SAAUzP,EAAQwC,OAAOqY,MAAK,SAAAvX,GAAE,OAAIA,IAAOic,EAAK5c,OAAMW,GAAIic,EAAK5c,IACrE8L,QAhEX,SAACgH,GAClBoN,EAAgBtD,EAAK5c,KACrB2X,GAAqB,GACrBK,KA4DwB,oBACkC,eAAC,KAAD,OAClC,gBAACe,GAAA,EAAD,CAAUjM,SAAUzP,EAAQggB,eAAenF,MAAK,SAAAvX,GAAE,OAAIA,IAAOic,EAAK5c,OAC9D8L,QAlDL,WACvBwU,IACAtI,KA+CwB,UACmC4E,EAAKmB,SAC9B,qDAAa,eAAC,KAAD,IAAb,OACA,mDAAW,eAAC,KAAD,OAHrB,eAQhB,sBAAKnR,UAAWD,EAAQuS,WAAY5O,IAAKwH,EAAQK,SAASja,OAAS4Z,EAAQK,SAASja,MAAMyc,SAAWiC,EAAK5c,IAAMggB,EAAc,UAGlI,eAAC,GAAD,CAAOxM,KAAMkE,EAAmBrD,QAAS4D,EAAzC,SACI,eAAC,GAAD,CAAeX,UAvEL,WAClB1U,ENwHkB,SAACjD,EAAWgb,GAAZ,OAAuB,SAAA/X,GAC7CA,EAASvF,GAAQ,CAAEc,OAAQnC,EAAQ2E,GAAIga,KACvC+B,GAAQQ,WAAWvd,EAAWgb,GAAQ7d,MAAK,SAAA+F,GACvCD,EAASsa,GAAWvC,IACpB/X,EAASvE,GAAY,CAAEF,OAAQnC,EAAQ2E,GAAIga,SM5HlCgG,CAAWhhB,EAAWsgB,IAC/BhI,KAqEiD5D,QAAS4D,U,mBC8NnD2I,GAtVS,SAAC,GAAoH,IAAlHC,EAAiH,EAAjHA,UAAW5hB,EAAsG,EAAtGA,WAA2B6hB,EAA2E,EAA1FC,cAA8B9U,EAA4D,EAA5DA,SAAU+U,EAAkD,EAAlDA,kBAAmBC,EAA+B,EAA/BA,gBAAoBC,EAAW,8GAC9G/P,mBAAS0P,GADqG,oBACjIM,EADiI,KAC1HC,EAD0H,KAElIzU,EAAU1I,KAFwH,EAGxGkN,qBAHwG,oBAGjIkQ,EAHiI,KAGvHC,EAHuH,OAI1FnQ,qBAJ0F,oBAIjIoQ,EAJiI,KAIhHC,EAJgH,KAKlI1P,EAAOD,mBACP4P,EAAU5P,mBACV6P,EAAa7P,mBACb8P,EAAY9P,mBACZ+P,EAAsB/P,mBACtBgQ,EAAkBhQ,mBAClBiQ,EAAcjQ,mBAGpB/C,qBAAU,WACNsS,EAASP,KACV,CAACA,EAAWa,IAEXP,IAAUQ,EAAUhR,UACpBgR,EAAUhR,QAAUwQ,EACpBO,EAAW/Q,QAAUwQ,EAAMhgB,KAAI,SAAC4M,EAAMlD,GAAP,OAAaA,MAGhDiE,qBAAU,WACN,IAAMiT,EAAc,aAEpB,OADAC,OAAOjR,iBAAiB,YAAagR,GAC9B,WACHC,OAAOhR,oBAAoB,YAAa+Q,MAE7C,IAIH,IAAME,EAAcC,uBAAY,SAACC,EAAMC,EAAGC,GACtC,IAAIpjB,IACAoiB,GAEiB,IAAjBF,EAAM1W,OAAV,CAGA,IAAMsD,EAAOjG,EAAQgK,EAAKnB,QAASwR,GACnC,GAAKpU,EAAL,CARgD,mBAWnBA,EAXmB,GAWzCuU,EAXyC,KAW/Bnc,EAX+B,KAahDmb,EAAY,CACRe,QACAE,gBAAiBpc,EACjBqc,YAAaC,MAAMC,UAAUvhB,IAAIwhB,KAAK7Q,EAAKnB,QAAQ2C,YAAY,SAAA6O,GAAI,OAAIA,EAAKS,wBAAwBjc,UACpGkc,YAAa/Q,EAAKnB,QAAQ2C,WAAW,GAAGsP,wBAAwB/Y,IAAMiI,EAAKnB,QAAQ2C,WAAW,GAAGsP,wBAAwBE,OACzHC,cAAeT,EAASM,wBAAwB/Y,IAAMiI,EAAKnB,QAAQ2C,WAAW,GAAGsP,wBAAwB/Y,IACzGmZ,WAAYZ,IAGhBR,EAAoBjR,QAAU,CAC1BsS,SAAU9c,EACV+c,IAAK/c,EACLgd,OAAQ,GAEZrB,EAAYnR,QAAUwQ,EAAMhgB,KAAI,SAAAiiB,GAAC,OAAI,SACtC,CAAC/B,EAAUF,EAAOliB,IAEfokB,EAAenB,uBAAY,SAACxR,GAC9B,KAAIA,EAAM4S,QAAQ7Y,OAAS,GAA3B,CAGA,IAAM4X,EAAQ3R,EAAM6S,eAAe,GACnCtB,EAAYvR,EAAMG,OAAO2S,QAAQ,MAAOnB,EAAMoB,MAAOpB,EAAMqB,eAC5D,CAACzB,IAEExN,EAAcyN,uBAAY,SAACxR,GAER,IAAjBA,EAAM/M,QAGVse,EAAYvR,EAAMG,OAAO2S,QAAQ,MAAO9S,EAAM+S,SAC/C,CAACxB,IAEE0B,EAAazB,uBAAY,SAACxR,GAC5B,GAAK2Q,EAAL,CAIA,IAAIe,EAEJ,QAAuBjY,IAAnBkX,EAASgB,MAAqB,CAAC,IAAD,iBACV3R,EAAM6S,gBADI,IAC9B,2BAA0C,CAAC,IAAhClB,EAA+B,QACtC,GAAIA,EAAMqB,aAAerC,EAASgB,MAAO,CACrCD,EAAIC,EAAMoB,MACV,QAJsB,oCAQ9BrB,EAAI1R,EAAM+S,MAGd,QAAUtZ,IAANiY,EAAJ,CAKA1R,EAAMkT,iBACN,IAAMC,EAASzB,EAAIf,EAAS2B,WACtBc,EAAuBzC,EAAS0B,cAAgBc,EAEhD1d,EAAW4d,EACb1C,EAASmB,YACTnB,EAASwB,YACTiB,EACAzC,EAASkB,iBAGPyB,EAAoB3C,EAASmB,YAAYnB,EAASkB,iBAExDT,EAAYnR,QAAUwQ,EAAMhgB,KAAI,SAACiiB,EAAGa,GAChC,OAAIA,EAAI5C,EAASkB,gBACT0B,GAAK9d,EACE6d,EAAoB3C,EAASwB,YAE7B,EAEJoB,EAAI5C,EAASkB,gBAChB0B,GAAK9d,GACG,GAAK6d,EAAoB3C,EAASwB,aAEnC,EAGJgB,KAKf,IADA,IAAIhZ,EAAI,EACDA,EAAIsW,EAAM1W,QACTqH,EAAKnB,QAAQ2C,WAAWzI,KAAIiH,EAAKnB,QAAQ2C,WAAWzI,GAAGrH,MAAM2L,UAAjC,qBAA2D2S,EAAYnR,QAAQ9F,GAA/E,QAChCA,IAGJ+W,EAAoBjR,QAAU,CAC1BsS,SAAU5B,EAASkB,gBACnBW,IAAK/c,EACLgd,OAAQe,EACJ7C,EAASmB,YACTnB,EAASwB,YACTxB,EAASkB,gBACTpc,GACA+d,EACA7C,EAASmB,YACTnB,EAASwB,YACTxB,EAASkB,gBACTlB,EAASkB,sBAIlB,CAAClB,EAAUF,IAGRgD,EAAYjC,uBAAY,WAC1BZ,IACAE,GAAmB,GACnB,IAAM4C,EAAgBC,EAClB3C,EAAW/Q,QACXiR,EAAoBjR,QAAQsS,SAC5BrB,EAAoBjR,QAAQuS,KAEhClO,YAAW,WACPwM,GAAmB,GACnBE,EAAW/Q,QAAUyT,EACrB,IAAME,EAAmBF,EAAcjjB,KAAI,SAAA0J,GAAC,OAAIsW,EAAMtW,MACtDuW,EAASkD,GACTrY,EAASqY,EAAiB1C,EAAoBjR,WAC/CqQ,KACJ,CAACG,EAAOH,EAAmB/U,IAExBsY,EAAarC,uBAAY,SAACxR,GAAW,IAAD,iBAClBA,EAAM6S,gBADY,IACtC,2BAA0C,CACtC,GADsC,QAC5BG,aAAejC,EAAQ9Q,QAE7B,YADAwT,KAH8B,iCAOvC,CAACA,IAEEK,EAAYtC,uBAAY,SAACxR,GACP,IAAhBA,EAAM+T,OAGVN,MACD,CAACA,IAEJrV,qBAAU,WACFuS,GACAQ,EAAgBlR,QAAUgT,OACHxZ,IAAnBkX,EAASgB,OACTZ,EAAQ9Q,QAAU0Q,EAASgB,MAC3BL,OAAOjR,iBAAiB,YAAa8Q,EAAgBlR,QAAS,CAAE+T,SAAS,IACzE1C,OAAOjR,iBAAiB,WAAYwT,KAEpCvC,OAAOjR,iBAAiB,YAAa8Q,EAAgBlR,QAAS,CAAE+T,SAAS,IACzE1C,OAAOjR,iBAAiB,UAAWyT,WAGfra,IAApBsX,EAAQ9Q,SACR8Q,EAAQ9Q,aAAUxG,EAClB6X,OAAOhR,oBAAoB,YAAa6Q,EAAgBlR,QAAS,CAAE+T,SAAS,IAC5E1C,OAAOhR,oBAAoB,WAAYuT,KAEvCvC,OAAOhR,oBAAoB,YAAa6Q,EAAgBlR,QAAS,CAAE+T,SAAS,IAC5E1C,OAAOhR,oBAAoB,UAAWwT,IAE1C3C,EAAgBlR,aAAUxG,KAE/B,CAACkX,EAAUmD,EAAWD,EAAYZ,IAErC,IAAMU,EAAmB,SAAC3C,EAAYiD,EAAcC,GAChD,OAAIA,EAAaD,EACNjD,EAAWlM,MAAM,EAAGoP,GACtBC,OAAOnD,EAAWiD,IAClBE,OAAOnD,EAAWlM,MAAMoP,EAAYD,IACpCE,OAAOnD,EAAWlM,MAAMmP,EAAe,IAE5CC,EAAaD,EACNjD,EAAWlM,MAAM,EAAGmP,GACtBE,OAAOnD,EAAWlM,MAAMmP,EAAe,EAAGC,EAAa,IACvDC,OAAOnD,EAAWiD,IAClBE,OAAOnD,EAAWlM,MAAMoP,EAAa,IAEvClD,EAAWlM,SAGhB0O,EAA0B,SAAC1B,EAAaK,EAAaN,EAAiBpc,GAGxE,IAFA,IAAI0D,EAAM,EACNoa,EAAI,EACDA,EAAI9d,GACH8d,IAAM1B,EACNpc,IAEA0D,GAAO2Y,EAAYyB,GAAKpB,EAE5BoB,IAEJ,OAAOpa,GAGLka,EAAyB,SAACvB,EAAaK,EAAaiB,EAAsBvB,GAI5E,IAHA,IAAMuC,EAAYhB,EAAuBtB,EAAYD,GAAmB,EAAIM,EAAc,EACtFT,EAAI,EACJvX,EAAI,EACDA,EAAI2X,EAAY/X,QAAQ,CAE3B,GAAIqa,IADJ1C,GAAKI,EAAY3X,GAAKgY,GAElB,OAAOhY,EAEXA,IAEJ,OAAO2X,EAAY/X,OAAS,GAI1B3C,EAAU,SAACgK,EAAMqQ,GAGnB,IAFA,IAAI4C,EACAC,EACG7C,GAAM,CACT,GAAIA,IAASrQ,EAAM,CAEf,IAAKiT,EACD,OAEJ,GAAIC,EAEA,IADA,IAAIna,EAAI,EACDA,EAAIsX,EAAK7O,WAAW7I,QAAQ,CAC/B,GAAI0X,EAAK7O,WAAWzI,KAAOma,EACvB,MAAO,CAACA,EAAWna,GAEvBA,IAGR,MAEAsX,EAAK8C,UACLF,EAAS5C,GAEb6C,EAAY7C,EACZA,EAAOA,EAAK+C,gBAIdC,EAAiB,CAAEhW,UAAW,QAEpC,SAASiW,EAAaC,EAAW9D,EAAiB4B,EAAQnC,EAAmBC,GACzE,IAAMzd,EAAQ,CACV2C,SAAU,WACVlB,WAAW,OAAD,OAAS+b,EAAT,cAAgCC,IAU9C,OARIoE,GACA7hB,EAAMuB,OAAS,EACVwc,IACD/d,EAAMyB,gBAAakF,IAGvB3G,EAAM2L,UAAN,qBAAgCgU,EAAhC,OAEG3f,EAGXsL,qBAAU,WACFyS,IACAzP,EAAKnB,QAAQ2C,WAAWsO,EAAoBjR,QAAQsS,UAAUzf,MAAM2L,UAApE,qBAA8FyS,EAAoBjR,QAAQwS,OAA1H,UAGL,CAAC5B,IAGJ,IAAM+D,EACFnE,EAAMhgB,KAAI,SAAC4M,EAAMlD,GACb,OAAO,qBAAIrH,MAAQ6d,GAAYE,EAAmB6D,EAC9Cva,IAAM+W,EAAoBjR,QAAQsS,SAClC1B,EACAO,EAAYnR,QAAQ9F,GACpBmW,EACAC,GACAkE,EANG,SAOH,eAACrE,EAAD,cACI/S,KAAMA,GACFmT,KAHanT,EAAK/N,QAQtC,OACI,qBACIsQ,IAAKwB,EACLuR,aAAcA,EACd5O,YAAaA,EACb7H,UAAWD,EAAQoN,UAJvB,SAMKuL,KC5OEC,GA7FD,SAAC,GAA6B,IAA3B5lB,EAA0B,EAA1BA,UAAW6lB,EAAe,EAAfA,SAClB1N,EAAUC,eADuB,EAEO5G,oBAAS,GAFhB,oBAEhCsU,EAFgC,KAEfC,EAFe,KAGjC9iB,EAAWuK,cAHsB,EAIKgE,oBAAS,GAJd,oBAIhCwU,EAJgC,KAIhBC,EAJgB,KAKjC/K,EAAQ1X,YAAY0iB,IACpBxoB,EAAU8F,YAAYlE,IACtBM,EAAO4D,YAAYoa,IACnBxB,EAAsB5Y,YAAY3C,IAMxCsO,qBACI,WACyB,IAAjB+L,EAAMpQ,QAAiBpN,EAAQ8f,cAAiBpB,GAChDnZ,EAASia,GAASld,MAEvB,CAACiD,EAAUiY,EAAMpQ,OAAQpN,EAAQ8f,aAAcxd,EAAWoc,EAAqBjE,EAAQK,WAG9FrJ,qBACI,WACI,GAAKgJ,EAAQK,SAASja,OACjB2c,EAAMpQ,OAAX,CACAqN,EAAQK,SAASja,MAAMyc,QAAUiL,GAAkB,GACnD,IAAIE,EAAIjL,EAAMkL,MAAK,SAAAnJ,GACf,OAAOA,EAAK5c,MAAQ8X,EAAQK,SAASja,MAAMyc,WAE1CmL,IAAMzoB,EAAQ8f,cAAgBrF,EAAQK,SAASja,MAAMyc,QAAUpb,EAAKie,aAAeje,EAAKke,iBACzF7a,EAASia,GAASld,EAAWkb,EAAMpQ,SAEnCqb,GAAGF,GAAkB,MAC1B,CAAC9N,EAAQK,SAASja,MAAO2c,EAAOjY,EAAUrD,EAAKie,YAAangB,EAAQ8f,aAAcxd,EAAWJ,EAAKke,kBAGzG3O,qBACI,WACI,OAAO,WACHlM,EAAS9D,SAEd,CAAC8D,IAIR,IAIMojB,EAAe,WAEjB,IADA,IAAIC,EAAS,GACJpb,EAAI,EAAGA,EAAI,EAAGA,IACnBob,EAAOve,KAAK,eAAC,GAAD,GAAsBmD,IAEtC,OAAOob,GAQX,OAAKlK,EACD4J,EAAuBK,IAGvB,uCACI,eAAC,GAAD,CAAa9L,QAAQ,QAAQpN,SAAU0Y,EAAUtK,cAAc,WAAWC,SAAS,QAC/E3H,KAAMiS,EAAiBxK,WA5DN,WACzByK,GAAmB,SAAArS,GAAI,OAAKA,QA4DxB,eAAC,GAAD,CAAS1T,UAAWA,EAAW6T,KAAMiS,IAEnC1J,IAAwBlB,EAAMpQ,OAAU,0DAAmC,eAAE,KAAF,CACzEyb,WAAY3mB,EAAKie,YACjB2I,QAAS5mB,EAAKie,aAAeje,EAAKke,gBAClC2I,KA7BM,WACdxjB,EAASia,GAASld,EAAWkb,EAAMpQ,UA6B3B4b,OAAQ,eAAC,GAAD,IACRC,iBAAiB,UALwD,SAOzE,eAAC,GAAD,CACIra,SAtBC,SAACkV,EAAOoF,GACrB3jB,ERyEwB,SAACjD,EAAWkb,EAAO0L,GAAnB,OAA6B,SAAA3jB,GACzD,GAAI2jB,EAAMrD,MAAQqD,EAAMtD,SAAxB,CACArgB,EAASvF,GAAQ,CAAEc,OAAQ9B,MAC3B,IAAMmqB,EAAW3L,EAAM1Z,KAAI,SAACyb,EAAM/R,GAC9B,OAAO,6BAAK+R,GAAZ,IAAkB2J,MAAO1b,OAE7BjI,EAASma,GAAiByJ,IAC1B9J,GAAQK,iBAAiBpd,EAAW,CAAE0T,KAAMkT,EAAMtD,SAAUC,IAAKqD,EAAMrD,MAAOpmB,MAAK,SAAA+F,GAC/ED,EAASvE,GAAY,CAAEF,OAAQ9B,WQjFtBoqB,CAAiB9mB,EAAWwhB,EAAOoF,KAsBhC5mB,UAAWA,EACXV,WAAY5B,EAAQigB,YACpBuD,UAAWhG,EACXkG,cAAehB,GACfiB,kBAAmB,IACnBC,gBAAgB,kBAvBC+E,K,qBCrBtBU,GAzCK,WAChB,ItD+E0B/mB,EsD/EpBgnB,EAASC,eACThkB,EAAWuK,cACX/N,EAAU+D,atD6EUxD,EsD7EiBgnB,EAAOhnB,UtD8E3CknB,YAAexmB,IAAU,SAACA,GAC7B,OAAOA,EAAS0lB,MAAK,SAAA3mB,GAAO,OAAIA,EAAQY,MAAQL,UsD9E9CmnB,EAAe3jB,YAAY5C,IAC3BwmB,EAAkB5jB,YAAYhD,IAkBpC,OAhBA2O,qBACI,WAGI,OAFAlM,EAAS7B,GAAiB3B,IACrBA,GAASwD,EtDgIA,SAAAjD,GAAS,OAAI,SAAAiD,GACnCA,EAASvF,GAAQ,CAAEc,OAAQhC,MAC3B+C,GAAWQ,WAAWC,GAAW7C,MAAK,SAAA+F,GAClCD,EAASvE,GAAY,CAAEF,OAAQhC,MAC/ByG,EAAS7B,GAAiB8B,EAAI7F,KAAKoC,aACpC4D,OAAM,SAAAnF,GACL+E,EAASrB,GAAQ1D,EAAId,SAASC,OAC9B4F,EAASvE,GAAY,CAAEF,OAAQhC,UsDvIJuD,CAAWinB,EAAOhnB,YAClC,WACHiD,EAAS7B,GAAiB,UAE/B,CAAC4lB,EAAOhnB,UAAWP,EAASwD,IAGnCkM,qBAAU,WACN,OAAO,WACHlM,EAASpB,SAEd,CAACoB,IAEAkkB,EACA,uCACI,eAAC1e,EAAA,EAAD,UAAa0e,EAAava,UAC1B,eAAC,KAAD,CAAU/I,MAAO,CAAE6F,SAAU,MAC7B,eAAC,IAAD,CAAS5F,GAAG,QAAQD,MAAOhI,EAA3B,SAAsC,eAACqR,GAAA,EAAD,CAAQxE,QAAQ,YAAhB,uBAGzC0e,EAED,uCACI,eAAC3e,EAAA,EAAD,CAAYE,MAAM,SAASD,QAAQ,KAAKoF,UAAU,KAAlD,iCACA,eAAC,GAAD,CAASrO,QAAS2nB,IAClB,eAAC,GAAD,CAAOpnB,UAAWonB,EAAgB/mB,SALb,eAAC,GAAD,KCFlBgnB,GAlCC,WAAO,IACX7pB,EAAWypB,eAAXzpB,OACF8pB,EAAS9jB,YAAYxF,IACrBN,EAAU8F,YAAYlE,IACtB2D,EAAWuK,cAiBjB,OAfA2B,qBACI,WACSmY,GAAW5pB,EAAQE,oBACpBqF,EzDqEO,SAACzF,GAAD,OAAY,SAAAyF,GAC/BA,EAASvF,GAAQ,CAAEc,OAAQpC,KAC3BY,GAASO,QAAQC,GAAQL,MAAK,SAAA+F,GAC1BD,EAASrE,GAAcsE,IACvBD,EAASvE,GAAY,CAAEF,OAAQpC,QAChCiH,OAAM,SAAAnF,GACLiF,QAAQC,IAAIlF,OyD3EKX,CAAQC,MAEtB,CAACyF,EAAUvF,EAAQE,mBAAoB0pB,EAAQ9pB,IAItD2R,qBAAU,WACN,OAAO,WACHlM,EAASpE,SAEd,CAACoE,IAECqkB,EAGD,uCACI,8BAAKA,EAAOjoB,KAAKmD,QAChB8kB,EAAO5mB,SAASc,KAAI,SAAA/B,GAEjB,OADA0D,QAAQC,IAAI3D,GACL,eAAC2W,GAAA,EAAD,CAAwBvS,MAAO,CAAE4F,UAAW,IAA5C,SAAmDhK,EAAQmX,aAAhDnX,EAAQY,WAPlB,gC,oBCvBXknB,GAAsBnpB,YAAY,CAC3CC,KAAM,iBACNZ,aAAc,CACVC,SAAS,EACTkD,MAAO,KACP4mB,aAAa,EACbC,iBAAiB,GAErBnpB,SAAU,CACNZ,QAAS,SAAAa,GACLA,EAAMb,SAAU,GAEpBoF,QAAS,SAAAvE,GACLA,EAAMb,SAAU,GAEpBkE,QAAS,SAACrD,EAAOC,GACbD,EAAMb,SAAU,EAChBa,EAAMqC,MAAQpC,EAAOC,SAEzBoD,WAAY,SAAAtD,GACRA,EAAMqC,MAAQ,MAElB8mB,mBAAoB,SAAAnpB,GAChBA,EAAMipB,aAAc,GAExBG,oBAAqB,SAAAppB,GACjBA,EAAMipB,aAAc,GAExBI,mBAAoB,SAACrpB,EAAOC,GACxBD,EAAMkpB,gBAAkBjpB,EAAOC,Y,GAK2E8oB,GAAoBnoB,QAA3H0D,G,GAAAA,QAASlB,G,GAAAA,QAASC,G,GAAAA,WAAYnE,G,GAAAA,QAASiqB,G,GAAAA,oBAAqBD,G,GAAAA,mBAAoBE,G,GAAAA,mBAGlFnkB,GAAW,SAAAlF,GAAK,OAAIA,EAAMkE,eAAe/E,SACzCkD,GAAQ,SAAArC,GAAK,OAAIA,EAAMkE,eAAe7B,OACtC4mB,GAAc,SAAAjpB,GAAK,OAAIA,EAAMkE,eAAe+kB,aAC5CC,GAAkB,SAAAlpB,GAAK,OAAIA,EAAMkE,eAAeglB,iBA2B9CF,MAAf,QCnDMM,GAAqB,SAAC9a,GACxB,IAAMC,EAAU1I,KACVrB,EAAWuK,cACX9P,EAAU8F,YAAYC,IACtBgK,EAAcjK,YAAY5C,IAKhC,OACI,wBAAM+M,SAAUZ,EAAMa,aAAcX,UAAWD,EAAQxD,KAAvD,UACI,+BACI,eAAC,KAAD,CACIqE,SAAUrC,GAAkBlB,GAAeI,IAC3C2B,MAAM,QACND,aAAa,QACb/N,KAAK,QACLyP,UAAWlC,GACXa,WAAW,EACXC,WAAW,EACXxO,IAAKuP,EACL5L,WAfC,WACboB,EAASpB,WAkBL,eAAC,GAAD,CAAcuL,WAAW,OAAO3J,SAAU/F,QAsDvCoqB,GA9CQ,WACnB,IAAM9a,EAAU1I,KACVrB,EAAWuK,cACXjK,EAASC,YAAYX,IACrBklB,EAAavkB,YAAYgkB,IAE/B,GAAIjkB,EACA,OAAO,eAAC,KAAD,CAAUO,GAAG,MAQxB,OACI,gBAACoK,GAAA,EAAD,CAAM7G,WAAS,EAACyG,UAAU,OAAOb,UAAWD,EAAQvI,KAApD,UACI,eAAC0J,EAAA,EAAD,IACA,eAACD,GAAA,EAAD,CAAME,MAAI,EAACC,IAAI,EAAOC,GAAI,EAAGC,GAAI,EAAGtB,UAAWD,EAAQlE,QACvD,eAACoF,GAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAAGT,UAAWU,KAAOC,UAAW,EAAGC,QAAM,EAAvE,SACI,uBAAKzB,UAAWD,EAAQxF,MAAxB,UACI,eAACmH,GAAA,EAAD,CAAQrB,KAAK,QAAQL,UAAWD,EAAQ3D,OAAxC,SACI,eAAC,KAAD,MAEJ,eAACZ,EAAA,EAAD,CAAYqF,UAAU,KAAKpF,QAAQ,KAAnC,6BAGCqf,EACK,eAACtf,EAAA,EAAD,CAAY5E,MAAO,CAAEyD,WAAY,GAAIC,cAAe,IAAMoB,MAAM,SAASD,QAAQ,KAAKoF,UAAU,KAAhG,SAAsG,wEACtG,eAAC,KAAD,CAAMH,SAnBX,SAACrC,GDhBe,IAACnJ,ECiB9Bc,GDjB8Bd,ECiBCmJ,EAAOnJ,MDjBE,SAACc,GAC7CA,EAASvF,MACTqE,GAAQU,eAAeN,GAAOhF,MAAK,SAAA+F,GAC/BD,EAASH,MACTG,EAASykB,SACVrkB,OAAM,SAAAnF,GACLiF,QAAQC,IAAIlF,EAAId,SAASC,MACzB4F,EAASrB,GAAQ1D,EAAId,SAASC,OAC9B4F,EAAS0kB,aC2BmC7Z,UAAW+Z,KAC3C,gBAAC3Z,GAAA,EAAD,CAAM7G,WAAS,EAAf,UACI,eAAC6G,GAAA,EAAD,CAAME,MAAI,EAACC,IAAE,EAAb,SACI,eAAC,IAAD,CAASxK,MAAO7H,EAAU8H,GAAG,SAAS4E,QAAQ,QAA9C,qBAIJ,gBAACwF,GAAA,EAAD,CAAME,MAAI,EAAV,oCAC2B,eAAC,IAAD,CAASvK,MAAO7H,EAAU8H,GAAG,UAA7B,oCCtE7CkkB,GAAoB,SAACjb,GACvB,IAAMC,EAAU1I,KACV5G,EAAU8F,YAAYC,IAG5B,OACI,wBAAMkK,SAAUZ,EAAMa,aAAcX,UAAWD,EAAQxD,KAAvD,UACI,+BACI,eAAC,KAAD,CACIqE,SAAUrC,GAAkBZ,GAAkBG,GAAiCF,IAC/EwB,MAAM,eACNhO,KAAK,WACL9C,KAAK,WACL6Q,aAAa,eACb0B,UAAWlC,GACXa,WAAW,EACXC,WAAW,MAInB,+BACI,eAAC,KAAD,CACImB,SAAUjD,GACVwB,aAAa,eACbC,MAAM,mBACN9Q,KAAK,WACL8C,KAAK,uBACLyP,UAAWlC,GACXc,WAAW,MAInB,eAAC,GAAD,CAAcU,WAAW,OAAO3J,SAAU/F,QAqDvCuqB,GA7CO,WAClB,IAAMjb,EAAU1I,KACVrB,EAAWuK,cACXjK,EAASC,YAAYX,IAErBF,EADWulB,eACUzP,SAAS9F,MAAM,KAAK,GACzCwV,EAAoB3kB,YAAYikB,IAEtC,IAAK9kB,EAAW,OAAO,eAAC,KAAD,CAAUmB,GAAG,WACpC,GAAIqkB,EAAmB,OAAO,eAAC,KAAD,CAAUrkB,GAAG,WAC3C,GAAIP,EACA,OAAO,eAAC,KAAD,CAAUO,GAAG,MAQxB,OACI,gBAACoK,GAAA,EAAD,CAAM7G,WAAS,EAACyG,UAAU,OAAOb,UAAWD,EAAQvI,KAApD,UACI,eAAC0J,EAAA,EAAD,IACA,eAACD,GAAA,EAAD,CAAME,MAAI,EAACC,IAAI,EAAOC,GAAI,EAAGC,GAAI,EAAGtB,UAAWD,EAAQlE,QACvD,eAACoF,GAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAAGT,UAAWU,KAAOC,UAAW,EAAGC,QAAM,EAAvE,SACI,uBAAKzB,UAAWD,EAAQxF,MAAxB,UACI,eAACmH,GAAA,EAAD,CAAQrB,KAAK,QAAQL,UAAWD,EAAQ3D,OAAxC,SACI,eAAC,KAAD,MAEJ,eAACZ,EAAA,EAAD,CAAYqF,UAAU,KAAKpF,QAAQ,KAAnC,4BAGA,eAAC,KAAD,CAAMmF,SAAUxC,GAAsBsC,SAjBrC,SAACrC,GACdrI,EFhBqB,SAACb,EAAUO,GAAX,OAAyB,SAACM,GACnDA,EAASvF,MACTqE,GAAQW,cAAcN,EAAUO,GAAWxF,MAAK,SAAA+F,GAC5CD,EAASH,MACTG,EAAS2kB,IAAmB,OAC7BvkB,OAAM,SAAAnF,GACLiF,QAAQC,IAAIlF,EAAId,SAASC,MACzB4F,EAASrB,GAAQ1D,EAAId,SAASC,WESrBqF,CAAc4I,EAAOlJ,SAAUO,KAgB8BmL,UAAWka,KACrE,eAAC9Z,GAAA,EAAD,CAAM7G,WAAS,EAAf,SACI,eAAC6G,GAAA,EAAD,CAAME,MAAI,EAACC,IAAE,EAAb,SACI,eAAC,IAAD,CAASxK,MAAO7H,EAAU8H,GAAG,SAAS4E,QAAQ,QAA9C,gCC1Db0f,GArBO,WAElB,OADiB5kB,YAAYlE,IAElB,+BAGP,gBAAC,KAAD,WACI,eAAC,KAAD,CAAOQ,KAAK,SAASgO,UAAWG,KAChC,eAAC,KAAD,CAAOnO,KAAK,UAAUgO,UAAWmB,KACjC,eAAC,KAAD,CAAOnP,KAAK,iBAAiBgO,UAAWma,KACxC,eAAC,KAAD,CAAOnoB,KAAK,kBAAkBgO,UAAWga,KACzC,eAAC,KAAD,CAAOO,OAAK,EAACvoB,KAAK,YAAYwoB,OAAQ,kBAAM,eAAC,GAAD,GAAe,IAAI1f,SAC/D,eAAC,KAAD,CAAO9I,KAAK,uBAAuBgO,UAAWiZ,KAC9C,eAAC,KAAD,CAAOjnB,KAAK,QAAQgO,UAAW8O,KAC/B,eAAC,KAAD,CAAOyL,OAAK,EAACvoB,KAAK,SAASgO,UAAWwO,KACtC,eAAC,KAAD,CAAOxc,KAAK,iBAAiBgO,UAAWuZ,KACxC,eAAC,KAAD,CAAOgB,OAAK,EAACvoB,KAAK,IAAIgO,UAAW4O,SCN9B6L,GAnBI,WACf,IAAMhlB,EAASC,YAAYX,IACrBY,EAAWD,YAAYlE,IACvB2D,EAAWuK,cACXgb,EAAY,eAAC/f,EAAA,EAAD,CAAY1M,MAAM,cAAlB,oBACZ0sB,EAAW,eAAChgB,EAAA,EAAD,CAAY1M,MAAM,cAAlB,mBAQjB,OAAO,qCACF0H,EAAW,eAAC4J,GAAA,EAAD,CAAkBtR,MAAM,UAAUuR,KAAM,KAChD,eAACJ,GAAA,EAAD,CAAQnR,MAAM,UAAUoQ,QATX,WACZ5I,GAGLN,G1D6CoB,SAAAA,GACxBA,EAASvF,MACTqE,GAAQE,SAAS9E,MAAK,WAClB8F,EAASF,MACTE,EAAS2L,a0D5CL,SAAgDrL,EAASilB,EAAYC,OCjBlEC,GAFCC,IAAMC,cAAc,MCwBrB,SAASC,KACpB,IAAM7b,EAAU1I,KACVwkB,EAAiB5W,mBACjB6W,EAAYvlB,YAAYyE,IACxB0M,EAAkBnR,YAAY4E,IAC9BnF,EAAWuK,cAEjB,OACI,uBAAKP,UAAWD,EAAQvI,KAAxB,UACI,eAAC0J,EAAA,EAAD,IACA,eAAC6a,EAAA,EAAD,CAAQxiB,SAAS,WAAWyG,UAAW8H,YAAK/H,EAAQ7H,OAAQwP,GAAmB3H,EAAQpH,aAAvF,SACI,gBAACqjB,EAAA,EAAD,CAAShc,UAAWD,EAAQrI,QAA5B,UACI,eAACuR,EAAA,EAAD,CACIgT,KAAK,QACLntB,MAAM,UACNotB,aAAW,cACXhd,QAAS,kBAAMlJ,EAASsF,OACxB0E,UAAW8H,YAAK/H,EAAQ9G,WAAYyO,GAAmB3H,EAAQ5G,kBALnE,SAOI,eAAC,IAAD,MAEJ,eAACqC,EAAA,EAAD,CAAYqF,UAAU,KAAKpF,QAAQ,KAAK3M,MAAM,UAAUqtB,QAAM,EAACnc,UAAWD,EAAQ3G,MAAlF,mBAGA,eAAC6P,EAAA,EAAD,CAAY/J,QAAS,kBAAMlJ,EAASoF,OAApC,SACK0gB,EAAY,eAAC,IAAD,IAAsB,eAAC,IAAD,MAEvC,sBAAKllB,MAAO,CAAE0M,SAAU,IAAxB,SACI,eAAC,IAAD,CAAStD,UAAWD,EAAQ9H,YAAapB,GAAG,SAA5C,SACI,eAAC,GAAD,aAMhB,gBAACulB,EAAA,EAAD,CACI3gB,QAAQ,YACRsE,QAAS,CACLxF,MAAOuN,YAAK/H,EAAQzG,aAAcoO,GAAmB3H,EAAQrG,mBAEjEkN,KAAMc,EALV,UAOI,sBAAK1H,UAAWD,EAAQnI,YAAxB,SACI,eAACqR,EAAA,EAAD,CAAY/J,QAAS,kBAAMlJ,EAASsF,OAApC,SACI,eAAC,IAAD,QAIR,eAAC+N,EAAA,EAAD,IACA,eAACtC,EAAA,EAAD,UAAM,eAAC,GAAD,MACN,eAACsC,EAAA,EAAD,IACA,eAACtC,EAAA,EAAD,UAAO7P,QAEX,wBAAMwM,IAAKmY,EAAgB7b,UAAWD,EAAQjG,QAAS/F,GAAG,UAA1D,UACI,uBAAKiM,UAAWD,EAAQrF,cAAxB,UACI,sBAAKsF,UAAWD,EAAQlG,eACxB,eAACwiB,EAAA,EAAD,CAAWC,SAAS,KAAKtc,UAAWD,EAAQ3F,UAA5C,SACI,eAAC,GAAQmiB,SAAT,CAAkBjf,MAAOue,EAAzB,SAAyC,eAAC,GAAD,QAE7C,sBAAK7b,UAAWD,EAAQjF,UAE5B,eAACqH,EAAA,EAAD,CAAKnC,UAAWD,EAAQlF,OAAxB,SACI,eAAC,GAAD,YCvDL2hB,OAxBf,WACE,IAAMjlB,EAAQhB,YAAYyE,IACpB8gB,EAAYW,YAAeruB,GAC3BsuB,EAAaD,YAAehuB,GAC5BuH,EAAWuK,cACXxK,EAAOQ,YAAYX,IAUzB,OARAsM,qBAAU,WACHnM,GACHC,EAASjB,SAIbmB,QAAQC,IAAIrG,gBAGV,eAAC6sB,EAAA,EAAD,CAAeplB,MAAOA,EAAQukB,EAAYY,EAA1C,SACE,eAAC,IAAD,CAAQE,SAAU9sB,eAAlB,SACE,eAAC,GAAD,SChBK+sB,GAAQC,YAAe,CAClClT,QAAS,CACPrS,MAAOwlB,GACP9nB,MAAO+nB,GACP3nB,OAAQ4nB,GACRznB,eAAgB0nB,GAChBnnB,KAAMonB,GACN/qB,KAAMgrB,GACN5qB,QAAS6qB,GACTrN,KAAMsN,GACN/Q,OAAQgR,MCTQ1W,QACW,cAA7BuO,OAAO7J,SAASiS,UAEe,UAA7BpI,OAAO7J,SAASiS,UAEhBpI,OAAO7J,SAASiS,SAAS9f,MACvB,2DCVNiK,IAAS0T,OAEL,eAAC,IAAD,CAAUwB,MAAOA,GAAjB,SACE,eAAC,GAAD,MAGJ3Y,SAASoD,eAAe,SDqHpB,kBAAmBmW,WACrBA,UAAUC,cAAcC,MAAMztB,MAAK,SAAC0tB,GAClCA,EAAaC,kB","file":"static/js/main.46535755.chunk.js","sourcesContent":["\r\n\r\nexport const dark = {\r\n    palette: {\r\n        type: 'dark',\r\n        text: {\r\n            primary: '#ffffff'\r\n        },\r\n        \r\n    },\r\n\r\n}\r\n\r\nexport const light = {\r\n    palette: {\r\n        type: 'light',\r\n        text: {\r\n            primary: '#000000'\r\n        },\r\n        background: {\r\n            default: '#eaeaea'\r\n        }\r\n    },\r\n}\r\n\r\n","export const linkStyle = { textDecoration: 'none', color: 'inherit' }\r\nexport const authLink = { textDecoration: 'none', color :'#aba3c6'}","export const CREATE = 'create'\r\nexport const MY_PROFILE_FETCH = 'myProfileFetch'\r\nexport const USERS_FETCH = 'usersFetch'\r\nexport const ACTIVE_USER_FETCH = 'activeUserFetch'\r\nexport const DELETE = 'delete'\r\nexport const EDIT = 'edit'\r\nexport const COMPLETE_STATUS = 'completeStatus'\r\nexport const PROJECTS_LOADING = 'projectsLoading'\r\nexport const TASKS_LOADING = 'tasksLoading'\r\nexport const ORDER_CHANGE = 'orderChange'","import * as axios from 'axios'\r\n\r\nconst axiosInstance = process.env.NODE_ENV === 'production'\r\n    ? axios.create({\r\n        withCredentials: true,\r\n        baseURL: `${process.env.REACT_APP_API_ADRESS}/api/`\r\n    })\r\n    : axios.create({\r\n        withCredentials: true,\r\n        baseURL: `${process.env.REACT_APP_API_ADRESS_DEV}/api/`\r\n    })\r\n\r\nexport default axiosInstance","import axiosInstance from '../axiosSettings'\r\n\r\n\r\nconst usersApi = {\r\n\r\n    getMyProfile() {\r\n        return axiosInstance.get(`user/home`).then(response => response.data)\r\n    },\r\n    getUsers() {\r\n        return axiosInstance.get(`user/`).then(response => response.data)\r\n    },\r\n    getUser(userId) {\r\n        return axiosInstance.get(`user/${userId}`).then(response => response.data)\r\n    }\r\n\r\n}\r\n\r\nexport default usersApi","import { createSlice } from '@reduxjs/toolkit';\r\nimport { ACTIVE_USER_FETCH, MY_PROFILE_FETCH, USERS_FETCH } from '../actions';\r\nimport usersApi from './apiCalls';\r\n\r\nconst initialState = {\r\n    pending: {\r\n        myProfileFetching: false,\r\n        activeUserFetching: false,\r\n        usersFetching: false\r\n    },\r\n    totalUsersCount: 0,\r\n    authUser: null,\r\n    activeUser: null,\r\n    users: [],\r\n    err: null,\r\n}\r\n\r\nexport const usersSlice = createSlice({\r\n    name: 'user',\r\n    initialState,\r\n    reducers: {\r\n        pending: (state, action) => {\r\n            state.pending[action.payload.action] = true\r\n        },\r\n        stopPending: (state, action) => {\r\n            state.pending[action.payload.action] = false\r\n        },\r\n        setAuthUser: (state, action) => {\r\n            state.authUser = action.payload\r\n        },\r\n        setActiveUser: (state, action) => {\r\n            state.activeUser = action.payload\r\n        },\r\n        clearActiveUser: state => { state.activeUser = null },\r\n        setUsers: (state, action) => {\r\n            state.users = [...state.users, ...action.payload]\r\n        },\r\n        incrementAuthUserProjectsCount: state => {\r\n            if (!state.authUser) return\r\n            state.authUser.projectsCount++\r\n        },\r\n        decrementAuthUserProjectsCount: state => {\r\n            if (!state.authUser) return\r\n            state.authUser.projectsCount--\r\n        },\r\n        setTotalUsersCount: (state, action) => {\r\n            state.totalUsersCount = action.payload\r\n        },\r\n        reset: () => initialState\r\n    },\r\n});\r\n\r\n\r\nexport const { pending, stopPending, setAuthUser, setActiveUser, clearActiveUser,\r\n    setUsers, setTotalUsersCount, incrementAuthUserProjectsCount, decrementAuthUserProjectsCount, reset } = usersSlice.actions;\r\n\r\n//selectors\r\nexport const authUser = state => state.user.authUser\r\nexport const isFetching = state => state.user.pending\r\nexport const users = state => state.user.users\r\nexport const activeUser = state => state.user.activeUser\r\n\r\n//thunks\r\nexport const getMyProfile = () => dispatch => {\r\n    dispatch(pending({ action: MY_PROFILE_FETCH }))\r\n    usersApi.getMyProfile().then(res => {\r\n        console.log(res)\r\n        dispatch(setAuthUser(res))\r\n        dispatch(stopPending({ action: MY_PROFILE_FETCH }))\r\n    }).catch(err => {\r\n        console.log(err.response.data)\r\n    })\r\n}\r\n\r\nexport const getUsers = () => dispatch => {\r\n    dispatch(pending({ action: USERS_FETCH }))\r\n    usersApi.getUsers().then(res => {\r\n        console.log(res.profiles)\r\n        dispatch(setTotalUsersCount(res.totalCount))\r\n        dispatch(setUsers(res.profiles))\r\n        dispatch(stopPending({ action: USERS_FETCH }))\r\n    })\r\n}\r\n\r\nexport const getUser = (userId) => dispatch => {\r\n    dispatch(pending({ action: ACTIVE_USER_FETCH }))\r\n    usersApi.getUser(userId).then(res => {\r\n        dispatch(setActiveUser(res))\r\n        dispatch(stopPending({ action: ACTIVE_USER_FETCH }))\r\n    }).catch(err => {\r\n        console.log(err)\r\n    })\r\n}\r\n\r\nexport default usersSlice.reducer;\r\n","import axiosInstance from '../axiosSettings'\r\n\r\n\r\nconst projectApi = {\r\n    newProject(project) {\r\n        return axiosInstance.post('projects', project).then(response => response.data)\r\n    },\r\n    getProjects(userId, page, count) {\r\n        const path = `projects/?page=${page || 1}&count=${count || 20}`\r\n        if (!userId) {\r\n            return axiosInstance.get(path)\r\n        }\r\n        return axiosInstance.get(`${userId}/${path}`)\r\n    },\r\n    getProject(projectId) {\r\n        return axiosInstance.get(`projects/${projectId}`)\r\n    },\r\n    deleteProject(projectId) {\r\n        return axiosInstance.delete(`projects/${projectId}`)\r\n    },\r\n    editProject(project) {\r\n        return axiosInstance.put(`projects/${project._id}`, project)\r\n    },\r\n}\r\n\r\nexport default projectApi","import { createSelector, createSlice } from '@reduxjs/toolkit';\r\nimport { CREATE, DELETE, EDIT, PROJECTS_LOADING } from '../actions';\r\nimport { decrementAuthUserProjectsCount, incrementAuthUserProjectsCount } from '../users/usersSlice';\r\nimport projectApi from './apiCalls';\r\n\r\nconst initialState = {\r\n    pending: {\r\n        create: false,\r\n        projectsLoading: false,\r\n        delete: [], //contains project id's that currently in delete progress\r\n    },\r\n    activeProject: null,\r\n    projectsPage: 0,\r\n    projects: [],\r\n    editMode: [],\r\n    error: null,\r\n    isFetched: false,\r\n    projectCreated: false\r\n}\r\n\r\n\r\nexport const projectSlice = createSlice({\r\n    name: 'project',\r\n    initialState,\r\n    reducers: {\r\n        pending: (state, action) => {\r\n            if (action.payload.action === DELETE) {\r\n                state.pending[action.payload.action] = [...state.pending[action.payload.action], action.payload.id]\r\n                return\r\n            }\r\n            state.pending[action.payload.action] = true\r\n        },\r\n        stopPending: (state, action) => {\r\n            if (action.payload.action === DELETE) {\r\n                state.pending[action.payload.action] = [...state.pending[action.payload.action].filter(id => id !== action.payload.id)]\r\n                return\r\n            }\r\n            state.pending[action.payload.action] = false\r\n        },\r\n        firstLoadComplete: state => {\r\n            state.isFetched = true\r\n        },\r\n        setProjects: (state, action) => {\r\n            state.projects = [...state.projects, ...action.payload]\r\n        },\r\n        setActiveProject: (state, action) => {\r\n            state.activeProject = action.payload\r\n        },\r\n        addProjectToBegining: (state, action) => {\r\n            state.projects = [action.payload, ...state.projects]\r\n            state.projectCreated = true\r\n        },\r\n        updateProject: (state, action) => {\r\n            let isFinded = false\r\n            state.projects = state.projects.map(project => {\r\n                if (!isFinded && project._id === action.payload._id) {\r\n                    isFinded = true\r\n                    return action.payload\r\n                }\r\n                return project\r\n            })\r\n\r\n        },\r\n        projectCreatedStatusToDefault: state => {\r\n            state.projectCreated = false\r\n        },\r\n        deleteProject: (state, action) => {\r\n            state.projects = state.projects.filter(project => project._id !== action.payload)\r\n        },\r\n        turnEditModeOn: (state, action) => {\r\n            state.editMode = [...state.editMode, action.payload]\r\n        },\r\n        turnEditModeOff: (state, action) => {\r\n            state.editMode = [...state.editMode.filter(id => id !== action.payload)]\r\n        },\r\n        failure: (state, action) => {\r\n            state.error = action.payload\r\n        },\r\n        clearError: state => {\r\n            state.error = null\r\n        },\r\n        reset: () => initialState\r\n    }\r\n})\r\n\r\nexport const { setProjects, addProjectToBegining, updateProject, failure, clearError,\r\n    pending, setActiveProject, stopPending, firstLoadComplete, projectCreatedStatusToDefault,\r\n    deleteProject, turnEditModeOn, turnEditModeOff, reset } = projectSlice.actions\r\n\r\n//selectors\r\nexport const projects = state => state.project.projects\r\nexport const error = state => state.project.error\r\nexport const getProjectById = projectId => {\r\n    return createSelector(projects, (projects) => {\r\n        return projects.find(project => project._id === projectId)\r\n    })\r\n}\r\nexport const activeProject = state => state.project.activeProject\r\nexport const isFetching = state => state.project.pending\r\nexport const isFetched = state => state.project.isFetched\r\nexport const projectCreated = state => state.project.projectCreated\r\nexport const projectEditMode = state => state.project.editMode\r\n\r\n\r\n//thunks\r\nexport const createProject = project => dispatch => {\r\n    dispatch(pending({ action: CREATE }))\r\n    projectApi.newProject(project).then((res) => {\r\n        dispatch(addProjectToBegining(res.project))\r\n        dispatch(incrementAuthUserProjectsCount())\r\n        dispatch(stopPending({ action: CREATE }))\r\n    }).catch(error => {\r\n        console.log(error)\r\n        dispatch(failure(error.response.data))\r\n    })\r\n}\r\n\r\nexport const removeProject = projectId => dispatch => {\r\n    dispatch(pending({ action: DELETE, id: projectId }))\r\n    projectApi.deleteProject(projectId).then(res => {\r\n        dispatch(deleteProject(projectId))\r\n        dispatch(decrementAuthUserProjectsCount())\r\n        dispatch(stopPending({ action: DELETE, id: projectId }))\r\n    })\r\n}\r\n\r\nexport const editProject = project => dispatch => {\r\n    dispatch(pending({ action: EDIT, id: project._id }))\r\n    projectApi.editProject(project).then(res => {\r\n        if (res.data.project) {\r\n            dispatch(updateProject(res.data.project))\r\n            dispatch(stopPending({ action: EDIT, id: project._id }))\r\n            dispatch(turnEditModeOff(project._id))\r\n        }\r\n    })\r\n}\r\n\r\nexport const getProjects = (userId, page, count) => dispatch => {\r\n    dispatch(pending({ action: PROJECTS_LOADING }))\r\n    projectApi.getProjects(userId, page, count).then(res => {\r\n        dispatch(firstLoadComplete())\r\n        if (res.status !== 204) {\r\n            dispatch(setProjects(res.data.projects))\r\n            dispatch(stopPending({ action: PROJECTS_LOADING }))\r\n        } else {\r\n            dispatch(stopPending({ action: PROJECTS_LOADING }))\r\n        }\r\n    })\r\n}\r\n\r\nexport const getProject = projectId => dispatch => {\r\n    dispatch(pending({ action: PROJECTS_LOADING }))\r\n    projectApi.getProject(projectId).then(res => {\r\n        dispatch(stopPending({ action: PROJECTS_LOADING }))\r\n        dispatch(setActiveProject(res.data.project))\r\n    }).catch(err => {\r\n        dispatch(failure(err.response.data))\r\n        dispatch(stopPending({ action: PROJECTS_LOADING }))\r\n    })\r\n}\r\n\r\n\r\nexport default projectSlice.reducer;\r\n","import axiosInstance from '../axiosSettings'\r\n\r\nconst authApi = {\r\n\r\n    authMe() {\r\n        return axiosInstance.get('authme').then(response => response.data)\r\n    },\r\n    logout() {\r\n        return axiosInstance.delete('login')\r\n    },\r\n    login(email, password, rememberMe) {\r\n        return axiosInstance.post('login', { email, password, rememberMe }).then(response => response.data)\r\n    },\r\n    signUp(name, surname, alias, email, password) {\r\n        return axiosInstance.post('signup', { name, surname, alias, email, password }, { withCredentials: false })\r\n    },\r\n    forgotPassword(email) {\r\n        return axiosInstance.post('login/forgotPassword', { email })\r\n    },\r\n    resetPassword(password, resetCode) {\r\n        return axiosInstance.put(`login/resetPassword`, { password, resetCode })\r\n    }\r\n}\r\n\r\nexport default authApi","import { createSlice } from '@reduxjs/toolkit';\r\nimport { reset as projectsReset } from '../project/projectSlice';\r\nimport authApi from './apiCalls';\r\n\r\n\r\nexport const authSlice = createSlice({\r\n    name: 'auth',\r\n    initialState: {\r\n        isFetching: true,\r\n        isAuthorized: false,\r\n        userId: null,\r\n        error: null\r\n    },\r\n    reducers: {\r\n        pending: state => {\r\n            state.isFetching = true\r\n        },\r\n        success: (state, action) => {\r\n            state.isFetching = false\r\n            state.userId = action.payload\r\n            state.isAuthorized = true\r\n        },\r\n        failure: (state, action) => {\r\n            state.isFetching = false\r\n            state.isAuthorized = false\r\n            state.error = action.payload\r\n        },\r\n        notAuthorized: state => {\r\n            state.isAuthorized = false\r\n            state.isFetching = false\r\n        },\r\n        clearError: state => {\r\n            state.error = null\r\n        }\r\n    }\r\n})\r\n\r\nexport const { success, failure, clearError, pending, notAuthorized } = authSlice.actions\r\n\r\n//selectors\r\nexport const isFetching = state => state.auth.isFetching\r\nexport const isAuthorized = state => state.auth.isAuthorized\r\nexport const authUserId = state => state.auth.userId\r\n\r\n//thunks\r\nexport const authMe = () => dispatch => {\r\n    dispatch(pending())\r\n    authApi.authMe().then(res => {\r\n        console.log(res)\r\n        if (res.user) {\r\n            return dispatch(success(res.user))\r\n        }\r\n        return dispatch(notAuthorized())\r\n    }).catch(err => {\r\n        if (err) {\r\n            dispatch(err.response.data)\r\n            console.log(err)\r\n        }\r\n    })\r\n}\r\n\r\nexport const logout = () => dispatch => {\r\n    dispatch(pending())\r\n    authApi.logout().then(() => {\r\n        dispatch(notAuthorized())\r\n        dispatch(projectsReset())\r\n    })\r\n}\r\n\r\nexport default authSlice.reducer","import { useSelector } from \"react-redux\"\r\nimport { isAuthorized, isFetching } from \"../features/auth/authSlice\"\r\n\r\nconst useNotAuth = () => {\r\n    const isAuth = useSelector(isAuthorized)\r\n    const progress = useSelector(isFetching)\r\n\r\n    if (!isAuth && !progress) {\r\n        return true\r\n    }\r\n    return false\r\n}\r\n\r\nexport default useNotAuth","import React from 'react';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListSubheader from '@material-ui/core/ListSubheader';\r\nimport DashboardIcon from '@material-ui/icons/Dashboard';\r\nimport PeopleIcon from '@material-ui/icons/People';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport AssignmentIcon from '@material-ui/icons/Assignment';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { linkStyle } from '../commonStyles';\r\nimport useNotAuth from '../../hooks/useNotAuth';\r\n\r\n\r\n\r\n\r\nexport const MainListItems = () => {\r\n  const notAuth = useNotAuth()\r\n  const authOnlyItems = <><NavLink style={linkStyle} to='/home'>\r\n    <ListItem button>\r\n      <ListItemIcon>\r\n        <HomeIcon />\r\n      </ListItemIcon>\r\n      <ListItemText primary=\"Home\" />\r\n    </ListItem>\r\n  </NavLink>\r\n    <NavLink style={linkStyle} to='/projects'>\r\n      <ListItem button>\r\n        <ListItemIcon>\r\n          <DashboardIcon />\r\n        </ListItemIcon>\r\n        <ListItemText primary=\"Projects\" />\r\n      </ListItem>\r\n    </NavLink></>\r\n  return (\r\n    <div>\r\n      {!notAuth ? authOnlyItems : ''}\r\n      <NavLink style={linkStyle} to='/users'>\r\n        <ListItem button>\r\n          <ListItemIcon>\r\n            <PeopleIcon />\r\n          </ListItemIcon>\r\n          <ListItemText primary=\"Users\" />\r\n        </ListItem>\r\n      </NavLink>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\n\r\nexport const secondaryListItems = (\r\n  <div>\r\n    <ListSubheader inset>Saved reports</ListSubheader>\r\n    <ListItem button>\r\n      <ListItemIcon>\r\n        <AssignmentIcon />\r\n      </ListItemIcon>\r\n      <ListItemText primary=\"Current month\" />\r\n    </ListItem>\r\n  </div>\r\n);","import { makeStyles } from \"@material-ui/core\"\r\n\r\nconst drawerWidth = 240;\r\n\r\nexport const useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n    },\r\n    toolbar: {\r\n        paddingRight: 24,\r\n    },\r\n    toolbarIcon: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-end',\r\n        padding: '0 8px',\r\n        ...theme.mixins.toolbar,\r\n    },\r\n    loginButton: {\r\n        textDecoration: 'none',\r\n        color: '#FFF'\r\n    },\r\n    appBar: {\r\n        zIndex: theme.zIndex.drawer + 1,\r\n        transition: theme.transitions.create(['width', 'margin'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n    },\r\n    appBarShift: {\r\n        marginLeft: drawerWidth,\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        transition: theme.transitions.create(['width', 'margin'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n        [theme.breakpoints.down('xs')]: {\r\n            width: '100%'\r\n        },\r\n    },\r\n    menuButton: {\r\n        marginRight: 36,\r\n        [theme.breakpoints.down('xs')]: {\r\n            display: 'none'\r\n        }\r\n    },\r\n    menuButtonHidden: {\r\n        display: 'none',\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n    },\r\n    drawerPaper: {\r\n        position: 'relative',\r\n        whiteSpace: 'nowrap',\r\n        width: drawerWidth,\r\n        transition: theme.transitions.create('width', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n        [theme.breakpoints.down('xs')]: {\r\n            width: theme.spacing(7)\r\n        },\r\n    },\r\n    drawerPaperClose: {\r\n        overflowX: 'hidden',\r\n        transition: theme.transitions.create('width', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n        width: theme.spacing(7),\r\n        [theme.breakpoints.up('sm')]: {\r\n            width: theme.spacing(9),\r\n        },\r\n        \r\n    },\r\n    appBarSpacer: theme.mixins.toolbar,\r\n    content: {\r\n        flexGrow: 1,\r\n        height: '100vh',\r\n        overflow: 'auto',\r\n        '&::-webkit-scrollbar': {\r\n            width: '0.4em'\r\n        },\r\n        '&::-webkit-scrollbar-track': {\r\n            boxShadow: 'inset 0 0 6px rgba(0,0,0,0.00)',\r\n            webkitBoxShadow: 'inset 0 0 6px rgba(0,0,0,0.00)'\r\n        },\r\n        '&::-webkit-scrollbar-thumb': {\r\n            backgroundColor: 'rgba(0,0,0,.3)',\r\n        }\r\n    },\r\n    container: {\r\n        paddingTop: theme.spacing(4),\r\n        paddingBottom: theme.spacing(4),\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(2),\r\n        display: 'flex',\r\n        overflow: 'auto',\r\n        flexDirection: 'column',\r\n    },\r\n    fixedHeight: {\r\n        height: 240,\r\n    },\r\n    contentWraper: {\r\n        minHeight: '100%',\r\n        marginBottom: -30\r\n    },\r\n    footer: {\r\n        height: 30\r\n    },\r\n    push: {\r\n        height: 30\r\n    }\r\n}))","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nexport const themeSlice = createSlice({\r\n    name: 'theme',\r\n    initialState: {\r\n        darkMode: localStorage.getItem('darkMode') === 'false' ? false : true,\r\n        sideBarOpen: localStorage.getItem('sideBarOpen') === 'false'? false: true\r\n    },\r\n    reducers: {\r\n        toggleDarkMode: (state) => {\r\n            localStorage.setItem('darkMode', !state.darkMode)\r\n            state.darkMode = !state.darkMode\r\n        },\r\n        toggleSideBar: (state) => {\r\n            localStorage.setItem('sideBarOpen', !state.sideBarOpen)\r\n            state.sideBarOpen = !state.sideBarOpen\r\n        }\r\n    },\r\n});\r\n\r\n\r\nexport const { toggleDarkMode, toggleSideBar } = themeSlice.actions;\r\n\r\n\r\nexport const darkMode = state => state.theme.darkMode\r\nexport const sideBarOpen = state => state.theme.sideBarOpen\r\n\r\nexport default themeSlice.reducer;\r\n","import { Typography } from '@material-ui/core';\r\nimport React from 'react'\r\nimport { NavLink } from 'react-router-dom';\r\nimport { linkStyle } from '../commonStyles';\r\n\r\nconst Copyright = () => {\r\n    return (\r\n        <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n            {'Copyright © '}\r\n            <NavLink style={linkStyle} color=\"inherit\" to=\"/\">\r\n                AlexReactNodeJs\r\n      </NavLink>{' '}\r\n            {new Date().getFullYear()}\r\n            {'.'}\r\n        </Typography>\r\n    );\r\n}\r\n\r\nexport default Copyright","import { makeStyles } from \"@material-ui/core\"\r\n\r\nexport const useStyles = makeStyles((theme) => ({\r\n\r\n    image: {\r\n        backgroundImage: 'url(https://source.unsplash.com/random)',\r\n        backgroundRepeat: 'no-repeat',\r\n        backgroundColor:\r\n            theme.palette.type === 'light' ? theme.palette.grey[50] : theme.palette.grey[900],\r\n        backgroundSize: 'cover',\r\n        backgroundPosition: 'center',\r\n    },\r\n    paper: {\r\n        margin: theme.spacing(3, 4),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(2),\r\n        '&>*': {\r\n            display: 'block',\r\n            margin: theme.spacing(2),\r\n            '& label.Mui-focused': {\r\n                fontSize: 20,\r\n                paddingLeft: 10,\r\n                paddingRight: 10,\r\n                color: 'black',\r\n                backgroundColor: '#fff'\r\n            },\r\n            '& input': {\r\n                '&:-webkit-autofill': {\r\n                    WebkitBoxShadow: '0 0 0 100px #88a4ce inset', //TODO\r\n                    WebkitTextFillColor: 'black',\r\n                }\r\n            }\r\n        }\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    SubmitButton: {\r\n        display: 'block',\r\n        margin: '0 auto'\r\n    },\r\n    submitButtonWraper: {\r\n        position: 'relative',\r\n    },\r\n    submitButtonProgress: {\r\n        position: 'absolute',\r\n        top: '50%',\r\n        left: '50%',\r\n        marginTop: -12,\r\n        marginLeft: -12,\r\n    },\r\n}));","import { createSlice } from '@reduxjs/toolkit';\r\nimport { reset as projectsReset } from '../project/projectSlice';\r\nimport { reset as usersReset } from '../users/usersSlice'\r\nimport authApi from './apiCalls';\r\nimport { authMe } from './authSlice';\r\n\r\nexport const loginSlice = createSlice({\r\n    name: 'login',\r\n    initialState: {\r\n        pending: false,\r\n        loginSuccess: false,\r\n        error: null\r\n    },\r\n    reducers: {\r\n        pending: state => {\r\n            state.pending = true\r\n        },\r\n        success: state => {\r\n            state.pending = false\r\n            state.loginSuccess = true\r\n        },\r\n        failure: (state, action) => {\r\n            state.pending = false\r\n            state.loginSuccess = false\r\n            state.error = action.payload\r\n        },\r\n        clearError: state => {\r\n            state.error = null\r\n        }\r\n    }\r\n})\r\n\r\nexport const { success, failure, clearError, pending } = loginSlice.actions\r\n\r\n//selectors\r\nexport const loginSuccess = state => state.login.loginSuccess\r\nexport const progress = state => state.login.pending\r\nexport const error = state => state.login.error\r\n\r\n//thunks\r\nexport const login = (email, password, rememberMe) => (dispatch) => {\r\n    dispatch(pending())\r\n    authApi.login(email, password, rememberMe).then(res => {\r\n        dispatch(success())\r\n        dispatch(authMe())\r\n        dispatch(projectsReset())\r\n        dispatch(usersReset())\r\n    }).catch(err => {\r\n        console.log(err.response.data)\r\n        dispatch(failure(err.response.data))\r\n    })\r\n}\r\n\r\n\r\nexport default loginSlice.reducer;\r\n","export const requiredEmail = (value) => {\r\n    return value ? undefined : 'Email is required'\r\n}\r\n\r\nexport const required = (value) => {\r\n    return value ? undefined : 'field is required'\r\n}\r\n\r\nexport const isValidEmail = (value) => {\r\n    const reg = /[^@ \\t\\r\\n]+@[^@ \\t\\r\\n]+\\.[^@ \\t\\r\\n]+/\r\n    return value.match(reg) ? undefined : 'Invalid email'\r\n}\r\n\r\nexport const requiredPassword = (value) => {\r\n    return value ? undefined : 'Password is required'\r\n}\r\n\r\nexport const passwordLength = (value) => {\r\n    return value.length > 7 ? undefined : 'Password lenght must be at least 8 characters'\r\n}\r\n\r\nexport const paswordContainNumbersAndLetters = (value) => {\r\n    let numbersCount = 0\r\n    let lettersCount = 0\r\n    for (let i = 0; i < value.length; i++) {\r\n        if (isNaN(parseInt(value[i]))) {\r\n            lettersCount++\r\n        } else {\r\n            numbersCount++\r\n        }\r\n    }\r\n\r\n    if (numbersCount === 0) {\r\n        return 'Password must contain at least 1 number'\r\n    }\r\n    if (lettersCount === 0) {\r\n        return 'Password must contain at least 1 letter'\r\n    }\r\n\r\n\r\n\r\n}\r\n\r\nexport const passwordConfirmation = (values) => {\r\n    let errors = {}\r\n    if (values.password !== values.passwordConfirmation) {\r\n        errors.passwordConfirmation = 'Passwords not match'\r\n    }\r\n    return errors\r\n}\r\n\r\nexport const composeValidators = (...validators) => value =>\r\n    validators.reduce((error, validator) => error || validator(value), undefined)","import { Checkbox, TextField } from '@material-ui/core'\r\nimport React from 'react'\r\n\r\n\r\n\r\n\r\nexport const Input = ({ input, meta, ...restProps }) => {\r\n\r\n    const isFieldError = restProps.err ? (restProps.err.errType === input.name) : false\r\n\r\n\r\n    return (\r\n        <>\r\n            <TextField\r\n                onClick={restProps.clearError}\r\n                autoComplete={restProps.autoComplete}\r\n                label={restProps.label}\r\n                variant={restProps.variant || 'outlined'}\r\n                name={input.name}\r\n                value={input.value}\r\n                type={input.type}\r\n                onChange={input.onChange}\r\n                error={(meta.error && meta.touched) || isFieldError}\r\n                multiline={restProps.multiline}\r\n                autoFocus={restProps.autoFocus}\r\n                fullWidth={restProps.fullWidth}\r\n                helperText={(meta.error && meta.touched && <span>{meta.error}</span>)\r\n                    || (isFieldError ? <span>{restProps.err.message}</span> : undefined)}\r\n            />\r\n        </>\r\n    )\r\n}\r\n\r\nexport const CheckBox = ({ input }) => {\r\n    return (\r\n        <Checkbox\r\n            name={input.name}\r\n            onChange={input.onChange} />\r\n    )\r\n}","import { Button, CircularProgress } from '@material-ui/core'\r\nimport React from 'react'\r\nimport { useStyles } from './styles'\r\n\r\nconst SubmitButton = (props) => {\r\n    const classes = useStyles()\r\n    return (\r\n        <div className={classes.submitButtonWraper}>\r\n            <Button className={classes.SubmitButton} disabled={props.progress} type='submit' variant='contained' color='primary'>\r\n                {props.buttonText}\r\n                {props.progress && <CircularProgress size={24} className={classes.submitButtonProgress} />}\r\n            </Button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SubmitButton","import React from 'react';\r\nimport { Form, Field } from 'react-final-form'\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { useStyles } from '../styles';\r\nimport { NavLink, Redirect } from 'react-router-dom';\r\nimport { authLink } from '../../commonStyles';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { login, progress, error, clearError } from '../../../features/auth/loginSlice';\r\nimport { composeValidators, isValidEmail, requiredEmail, requiredPassword } from '../../form/validators';\r\nimport { CheckBox, Input } from '../../form/fields';\r\nimport SubmitButton from '../SubmitButton';\r\nimport { isAuthorized } from '../../../features/auth/authSlice';\r\n\r\n\r\n\r\nconst LoginForm = (props) => {\r\n    const classes = useStyles()\r\n    const dispatch = useDispatch()\r\n    const pending = useSelector(progress)\r\n    const serverError = useSelector(error)\r\n\r\n    const clearErr = () => {\r\n        dispatch(clearError())\r\n    }\r\n    return (\r\n        <form onSubmit={props.handleSubmit} className={classes.form}>\r\n            <div>\r\n                <Field\r\n                    validate={composeValidators(requiredEmail, isValidEmail)}\r\n                    label='Email'\r\n                    autoComplete='email'\r\n                    name='email'\r\n                    component={Input}\r\n                    autoFocus={true}\r\n                    fullWidth={true}\r\n                    err={serverError}\r\n                    clearError={clearErr}\r\n                >\r\n                </Field>\r\n            </div>\r\n\r\n            <div>\r\n                <Field\r\n                    validate={requiredPassword}\r\n                    label='Password'\r\n                    type='password'\r\n                    autoComplete='current-password'\r\n                    name='password'\r\n                    component={Input}\r\n                    fullWidth={true}\r\n                    err={serverError}\r\n                    clearError={clearErr}\r\n                >\r\n                </Field>\r\n            </div>\r\n\r\n            <div>\r\n                <FormControlLabel label='Remember me' control={\r\n                    <Field\r\n                        type='checkBox'\r\n                        name='rememberMe'\r\n                        component={CheckBox}\r\n                    />\r\n                }>\r\n                </FormControlLabel>\r\n            </div>\r\n            <SubmitButton buttonText='Login' progress={pending}></SubmitButton>\r\n        </form>\r\n\r\n\r\n    )\r\n}\r\n\r\n\r\nconst Login = () => {\r\n    const classes = useStyles();\r\n    const dispatch = useDispatch()\r\n    const isAuth = useSelector(isAuthorized)\r\n\r\n    if(isAuth){\r\n        return <Redirect to='/'/>\r\n    }\r\n\r\n    const onSubmit = (values) => {\r\n        dispatch(login(values.email, values.password, values.rememberMe || false))\r\n    }\r\n\r\n\r\n    return (\r\n        <Grid container component=\"main\" className={classes.root}>\r\n            <CssBaseline />\r\n            <Grid item xs={false} sm={4} md={7} className={classes.image} />\r\n            <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\r\n                <div className={classes.paper}>\r\n                    <Avatar size='small' className={classes.avatar}>\r\n                        <LockOutlinedIcon />\r\n                    </Avatar>\r\n                    <Typography component=\"h1\" variant=\"h5\">\r\n                        Sign in\r\n                    </Typography>\r\n                    <Form onSubmit={onSubmit} component={LoginForm} />\r\n                    <Grid container>\r\n                        <Grid item xs>\r\n                            <NavLink style={authLink} to=\"/forgotpassword\" variant=\"body2\">\r\n                                Forgot password?\r\n                             </NavLink>\r\n                        </Grid>\r\n                        <Grid item>\r\n                            Don't have an account? <NavLink style={authLink} to=\"/signup\">Sign Up</NavLink>\r\n                        </Grid>\r\n                    </Grid>\r\n                </div>\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n}\r\n\r\nexport default Login","import { createSlice } from '@reduxjs/toolkit';\r\nimport authApi from './apiCalls';\r\n\r\n\r\nexport const signUpSlice = createSlice({\r\n    name: 'signUp',\r\n    initialState: {\r\n        pending: false,\r\n        signUpSuccess: false,\r\n        error: null,\r\n    },\r\n    reducers: {\r\n        pending: state => {\r\n            state.pending = true\r\n        },\r\n        success: state => {\r\n            state.pending = false\r\n            state.signUpSuccess = true\r\n        },\r\n        failure: (state, action) => {\r\n            state.pending = false\r\n            state.signUpSuccess = false\r\n            state.error = action.payload\r\n        },\r\n        clearError: state => {\r\n            state.error = null\r\n        }\r\n    }\r\n})\r\n\r\nexport const { success, failure, clearError, pending } = signUpSlice.actions\r\n\r\n//selectors\r\nexport const signUpSuccess = state => state.signUp.signUpSuccess\r\nexport const progress = state => state.signUp.pending\r\nexport const error = state => state.signUp.error\r\n\r\n//thunks\r\nexport const signUp = (name, surname, alias, email, password) => (dispatch) => {\r\n    dispatch(pending())\r\n    authApi.signUp(name, surname, alias, email, password).then(res => {\r\n        dispatch(success())\r\n    }).catch(err => {\r\n        dispatch(failure(err.response.data))\r\n    })\r\n}\r\n\r\nexport default signUpSlice.reducer","import React, { useEffect } from 'react';\r\nimport { Form, Field } from 'react-final-form'\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { useStyles } from '../styles';\r\nimport { NavLink, Redirect } from 'react-router-dom';\r\nimport { authLink } from '../../commonStyles';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {\r\n    composeValidators, isValidEmail, passwordConfirmation, passwordLength,\r\n    paswordContainNumbersAndLetters, required, requiredEmail, requiredPassword\r\n} from '../../form/validators';\r\nimport DonutSmallIcon from '@material-ui/icons/DonutSmall';\r\nimport { Input } from '../../form/fields';\r\nimport SubmitButton from '../SubmitButton';\r\nimport { clearError, error, progress, signUp, signUpSuccess } from '../../../features/auth/signUpSlice';\r\nimport { isAuthorized } from '../../../features/auth/authSlice';\r\nimport { Box } from '@material-ui/core';\r\n\r\n\r\nconst SignUpForm = (props) => {\r\n    const classes = useStyles()\r\n    const pending = useSelector(progress)\r\n    const serverError = useSelector(error)\r\n    const dispatch = useDispatch()\r\n\r\n\r\n    const clearErr = () => {\r\n        dispatch(clearError())\r\n    }\r\n    return (\r\n        <form onSubmit={props.handleSubmit} className={classes.form}>\r\n            <div>\r\n                <Field\r\n                    autoFocus={true}\r\n                    validate={required}\r\n                    label='Name'\r\n                    type='name'\r\n                    autoComplete='given-name'\r\n                    name='name'\r\n                    component={Input}\r\n                    fullWidth={true}\r\n                >\r\n                </Field>\r\n            </div>\r\n            <div>\r\n                <Field\r\n                    validate={required}\r\n                    label='Surname'\r\n                    autoComplete='family-name'\r\n                    name='surname'\r\n                    component={Input}\r\n                    fullWidth={true}\r\n                >\r\n                </Field>\r\n            </div>\r\n            <div>\r\n                <Field\r\n                    validate={required}\r\n                    label='Alias'\r\n                    autoComplete='alias'\r\n                    name='alias'\r\n                    component={Input}\r\n                    fullWidth={true}\r\n                    err={serverError}\r\n                    clearError={clearErr}\r\n                >\r\n                </Field>\r\n            </div>\r\n            <div>\r\n                <Field\r\n                    validate={composeValidators(requiredEmail, isValidEmail)}\r\n                    label='Email'\r\n                    autoComplete='email'\r\n                    name='email'\r\n                    component={Input}\r\n                    fullWidth={true}\r\n                    err={serverError}\r\n                    clearError={clearErr}\r\n                >\r\n                </Field>\r\n            </div>\r\n            <div>\r\n                <Field\r\n                    validate={composeValidators(requiredPassword, passwordLength, paswordContainNumbersAndLetters)}\r\n                    label='Password'\r\n                    type='password'\r\n                    autoComplete='new-password'\r\n                    name='password'\r\n                    component={Input}\r\n                    fullWidth={true}\r\n                >\r\n                </Field>\r\n            </div>\r\n            <div>\r\n                <Field\r\n                    validate={requiredPassword}\r\n                    autoComplete='new-password'\r\n                    label='Confirm password'\r\n                    type='password'\r\n                    name='passwordConfirmation'\r\n                    component={Input}\r\n                    fullWidth={true}\r\n                >\r\n                </Field>\r\n            </div>\r\n            <SubmitButton buttonText='Sign up' progress={pending}></SubmitButton>\r\n        </form>\r\n\r\n\r\n    )\r\n}\r\n\r\n\r\nconst SignUp = () => {\r\n    const isAuth = useSelector(isAuthorized)\r\n    const classes = useStyles();\r\n    const dispatch = useDispatch()\r\n    const isAccountCreated = useSelector(signUpSuccess)\r\n\r\n    const onSubmit = (values) => {\r\n        dispatch(signUp(values.name, values.surname, values.alias, values.email, values.password))\r\n    }\r\n\r\n    useEffect(() => {\r\n        return dispatch(clearError())\r\n    })\r\n\r\n    if (isAccountCreated) {\r\n        return <Redirect to='/login' />\r\n    }\r\n\r\n    if (isAuth) {\r\n        return <Redirect to='/' />\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <Grid container component=\"main\" className={classes.root}>\r\n            <CssBaseline />\r\n            <Grid item xs={false} sm={4} md={7} className={classes.image} />\r\n            <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\r\n                <div className={classes.paper}>\r\n                    <Avatar size='small' className={classes.avatar}>\r\n                        <DonutSmallIcon />\r\n                    </Avatar>\r\n                    <Typography component=\"h1\" variant=\"h5\">\r\n                        Sign Up\r\n                    </Typography>\r\n\r\n                    <Form validate={passwordConfirmation} onSubmit={onSubmit} component={SignUpForm} />\r\n\r\n                    <Box>\r\n                        Have an account? <NavLink style={authLink} to=\"/login\">Log in now</NavLink>\r\n                    </Box>\r\n                </div>\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n}\r\n\r\nexport default SignUp","import { makeStyles } from \"@material-ui/core\"\r\nimport { blueGrey } from \"@material-ui/core/colors\"\r\n\r\nexport const getContrastColor = (theme) => {\r\n    if (theme.palette.type === 'dark') {\r\n        return '#9eb0ba'\r\n    }\r\n    return '#C7E5FC'\r\n}\r\n\r\nexport const useStyles = makeStyles((theme) => ({\r\n    topControll: {\r\n        display: 'flex',\r\n        justifyContent: 'space-between',\r\n        padding: theme.spacing(1),\r\n        marginTop: theme.spacing(2),\r\n\r\n    },\r\n\r\n    projectsContainer: {\r\n        //height: '50vh',\r\n        marginTop: theme.spacing(2)\r\n    },\r\n    projects: {\r\n        transform: 'scale(1)',\r\n        transition: 'all .5s',\r\n    },\r\n    menuItem: {\r\n        marginTop: theme.spacing(2),\r\n    },\r\n    projectLink: {\r\n        display: 'block',\r\n        textDecoration: 'none',\r\n        color: 'inherit',\r\n        '&:hover': {\r\n            filter: 'brightness(90%)'\r\n        }\r\n    },\r\n    newProject: {\r\n        transform: 'scale(1)',\r\n        transition: 'all .5s'\r\n    },\r\n    hide: {\r\n        width: 0,\r\n        height: 0,\r\n        visibility: 'hidden',\r\n        transform: 'scale(0)'\r\n    },\r\n    newProjectHeader: {\r\n        '& h3': {\r\n            textAlign: 'center',\r\n            width: '50%',\r\n            [theme.breakpoints.down('sm')]: {\r\n                width: '100%'\r\n            }\r\n        },\r\n        paddingBottom: 0,\r\n\r\n    },\r\n    newProjectInput: {\r\n        marginTop: theme.spacing(1),\r\n        width: '50%',\r\n        '& label.Mui-focused': {\r\n            fontSize: 16,\r\n            paddingLeft: 20,\r\n            paddingRight: 20,\r\n            color: '#444040',\r\n            backgroundColor: getContrastColor(theme)\r\n        },\r\n        '& input': {\r\n            '&:-webkit-autofill': {\r\n                WebkitBoxShadow: '0 0 0 100px #88a4ce inset', //TODO\r\n                WebkitTextFillColor: '#444040',\r\n            }\r\n        }\r\n    },\r\n    projectMenu: {\r\n        '& li': {\r\n            display: 'flex',\r\n            justifyContent: 'space-between',\r\n            '& svg': {\r\n                marginLeft: theme.spacing(1)\r\n            }\r\n        }\r\n    },\r\n    createProjectWrapper: {\r\n        '& button': {\r\n            marginTop: 10,\r\n            marginBottom: 10,\r\n            marginLeft: theme.spacing(2)\r\n        }\r\n    },\r\n    settingsMenu: {\r\n        backgroundColor:\r\n            theme.palette.type === 'light' ? blueGrey[50] : blueGrey[800]\r\n    },\r\n    settingsFields: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n        [theme.breakpoints.down('sm')]: {\r\n            justifyContent: 'center',\r\n        }\r\n    },\r\n    settingsField: {\r\n        minWidth: 200,\r\n        minHeight: 100,\r\n        margin: theme.spacing(1),\r\n        padding: theme.spacing(1),\r\n        '& h4': {\r\n            textAlign: 'center'\r\n        },\r\n        '& select': {\r\n            marginTop: theme.spacing(2)\r\n        }\r\n    },\r\n    categorySearchResult: {\r\n        minWidth: 200\r\n    },\r\n    editButtonGroup: {\r\n        marginTop: theme.spacing(1),\r\n        '& :first-child': {\r\n            marginRight: theme.spacing(1)\r\n        }\r\n    }\r\n}))","import { useEffect } from \"react\";\r\n\r\nconst useClickAway = (ref, exception, callBack) => {\r\n    useEffect(() => {\r\n        const handleClickOutside = (event) => {\r\n            if (ref.current && !ref.current.contains(event.target)) {\r\n                if (typeof exception === 'function') {\r\n                    return exception()\r\n                }\r\n                if (!exception.current.contains(event.target)) {\r\n                    callBack()\r\n                }\r\n            }\r\n        }\r\n\r\n        // Bind the event listener\r\n        document.addEventListener(\"mousedown\", handleClickOutside);\r\n        return () => {\r\n            // Unbind the event listener on clean up\r\n            document.removeEventListener(\"mousedown\", handleClickOutside);\r\n        };\r\n    }, [ref, exception, callBack]);\r\n}\r\n\r\nexport default useClickAway","import { List, ListItem, ListItemText, Paper, Popper, TextField } from '@material-ui/core'\r\nimport React, { useEffect, useRef, useState } from 'react'\r\nimport useClickAway from '../../../../hooks/useClickAway'\r\nimport { patternCreator } from '../../../../utils/patternCreator'\r\nimport { useStyles } from '../styles'\r\n\r\nconst categoryTest = ['IT', 'Guide', 'toDo list', 'time management', 'second project', 'ToDo', 'DIY', 'cleaning', 'cars', 'test1', 'test2', 'test3', 'test4', 'tes']\r\n\r\n\r\n\r\nconst checkString = (expression, str) => {\r\n    const pattern = patternCreator(str)\r\n    const regex = new RegExp(pattern, 'gi')\r\n    return expression.match(regex);\r\n}\r\n\r\n\r\nconst CategoryMenu = ({ state, dispatch }) => {\r\n    const [anchorEl, setAnchorEl] = useState(null)\r\n    const [searchText, setSearchText] = useState('')\r\n    const [filteredCategories, setFilteredCategories] = useState([])\r\n    const [selectedIndex, setSelectedIndex] = useState(null)\r\n    const classes = useStyles()\r\n    const clickAwayRef = useRef(null)\r\n    const list = useRef(null)\r\n    useClickAway(clickAwayRef, () => {\r\n        setAnchorEl(null)\r\n    })\r\n\r\n\r\n    useEffect(\r\n        () => {\r\n            const filtered = categoryTest.filter(category => {\r\n                return category.toLowerCase().includes(searchText) || checkString(category, searchText)\r\n            })\r\n            setFilteredCategories(filtered)\r\n        }, [searchText]\r\n    )\r\n\r\n    useEffect(\r\n        () => {\r\n            dispatch({ type: 'set_category', category: searchText })\r\n        }, [searchText, dispatch]\r\n    )\r\n\r\n    const handleClick = (e) => {\r\n        setAnchorEl(anchorEl ? null : e.currentTarget)\r\n        setSelectedIndex(null)\r\n    }\r\n\r\n    const handleKeyboardEvent = (e) => {\r\n        if (!list.current) return\r\n        const listLength = list.current.childElementCount\r\n        if (!listLength) return\r\n        if (selectedIndex === null) {\r\n            return setSelectedIndex(0)\r\n        }\r\n        switch (e.key) {\r\n            case 'ArrowDown':\r\n                return setSelectedIndex((prev) => {\r\n                    if ((prev + 1) >= listLength) return 0\r\n                    return prev + 1\r\n                })\r\n\r\n            case 'ArrowUp':\r\n                return setSelectedIndex((prev) => {\r\n                    if ((prev) <= 0) return listLength - 1\r\n                    return prev - 1\r\n                })\r\n            case 'Enter':\r\n                setSearchText(list.current.childNodes[selectedIndex].getAttribute('category'))\r\n                setAnchorEl(null)\r\n                return\r\n            default:\r\n                return\r\n        }\r\n    }\r\n\r\n    const chooseCategory = (e) => {\r\n        const category = e.currentTarget.getAttribute('category')\r\n        setSearchText(category)\r\n        setAnchorEl(null)\r\n    }\r\n\r\n    const searchCategory = (e) => {\r\n        setAnchorEl(e.currentTarget)\r\n        setSearchText(e.target.value)\r\n    }\r\n    return (\r\n        <>\r\n            <TextField onKeyDown={handleKeyboardEvent} value={state.category || searchText}\r\n                onChange={searchCategory} onClick={handleClick}></TextField>\r\n            <Popper anchorEl={anchorEl} open={Boolean(anchorEl)} placement={'bottom-start'}>\r\n                <Paper ref={clickAwayRef} className={classes.categorySearchResult}>\r\n                    <List ref={list}>\r\n                        {filteredCategories.map((category, i) => {\r\n                            if (i > 3) return null\r\n                            return (\r\n                                <ListItem selected={selectedIndex === i} category={category} onClick={chooseCategory} key={i} button>\r\n                                    <ListItemText key={i} primary={category} />\r\n                                </ListItem>\r\n                            )\r\n                        })}\r\n                    </List>\r\n                </Paper>\r\n            </Popper>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default CategoryMenu","export const patternCreator = str => {\r\n    const pattern = str.split(\"\").map((char) => {\r\n        if (char === \"\\\\\") return ''\r\n        return `(?=.*${char})`\r\n    }).join(\"\")\r\n    return pattern\r\n}","import { makeStyles } from \"@material-ui/core\"\r\n\r\nexport const useStyles = makeStyles((theme) => ({\r\n    backDrop: {\r\n        top: 0,\r\n        left: 0,\r\n        backgroundColor: 'rgba(0,0,0,.5)',\r\n        position: 'absolute',\r\n        width: '100vw',\r\n        height: '100vh',\r\n        zIndex: 1300,\r\n    },\r\n    modalContainer: {\r\n        padding: theme.spacing(2),\r\n        top: '50%',\r\n        left: 'calc(50% + 36px)',\r\n        position: 'fixed',\r\n        transform: 'translate(-50%,-50%)',\r\n    },\r\n    sideBarOpen: {\r\n        left: 'calc(50% + 120px)',\r\n    },\r\n    sideBarClose: {\r\n        left: 'calc(50% + 36px)',\r\n    },\r\n    confirmDeleteModal: {\r\n        minWidth: 160,\r\n        '& p': {\r\n            padding: theme.spacing(1)\r\n        },\r\n        '& button': {\r\n            margin: theme.spacing(1)\r\n        },\r\n    }\r\n}))","import { Paper } from '@material-ui/core';\r\nimport clsx from 'clsx';\r\nimport React from 'react'\r\nimport ReactDOM from 'react-dom';\r\nimport { useSelector } from 'react-redux';\r\nimport { sideBarOpen } from '../features/theme/themeSlice';\r\nimport { useStyles } from './styles'\r\n\r\nconst modalRoot = document.getElementById('modal');\r\n\r\nconst Modal = ({ children, open, onClose }) => {\r\n    const sideBarCollapse = useSelector(sideBarOpen)\r\n    const clickAwayListener = (e) => {\r\n        if (e.target.className.includes(classes.backDrop)) {\r\n            onClose()\r\n        }\r\n    }\r\n    const classes = useStyles()\r\n    if (!open) return null\r\n    return ReactDOM.createPortal(\r\n        <div onMouseDown={clickAwayListener} className={classes.backDrop}>\r\n            <Paper className={clsx(classes.modalContainer, sideBarCollapse ? classes.sideBarOpen : classes.sideBarClose)}>\r\n                {children}\r\n            </Paper>\r\n        </div>\r\n        ,\r\n        modalRoot\r\n    )\r\n}\r\n\r\nexport default Modal","import { useEffect, useState } from 'react'\r\n\r\nconst useDebounce = (value, delay) => {\r\n    const [debouncedValue, setDebouncedValue] = useState(value)\r\n\r\n    useEffect(\r\n        () => {\r\n            const handler = setTimeout(() => {\r\n                setDebouncedValue(value)\r\n            }, delay)\r\n            return () => {\r\n                clearTimeout(handler)\r\n            }\r\n        }, [value,delay]\r\n    )\r\n\r\n    return debouncedValue\r\n}\r\n\r\nexport default useDebounce","\r\nimport { Button } from '@material-ui/core'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { HexColorPicker, HexColorInput } from 'react-colorful'\r\nimport useDebounce from '../hooks/useDebounce'\r\n\r\nconst ColorPicker = ({ state, dispatch }) => {\r\n    const [color, setColor] = useState(state.color)\r\n    const pickedColor = useDebounce(color, 200)\r\n\r\n    useEffect(\r\n        () => {\r\n            dispatch({ type: 'set_color', color: pickedColor })\r\n        }, [pickedColor, dispatch]\r\n    )\r\n\r\n    const handleChange = (color) => {\r\n        setColor(color)\r\n    }\r\n    return (\r\n        <>\r\n            <div style={{ width: 200, height: 100, backgroundColor: color }}></div>\r\n            <HexColorInput style={{ width: 200 }} color={color} onChange={handleChange} />\r\n            <HexColorPicker color={color} onChange={handleChange} />\r\n            <Button style={{ marginTop: '10px' }} variant='outlined' onClick={() => setColor('')}>Set to default</Button>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ColorPicker","export const getContrastColor = hex => {\r\n    if (hex.indexOf('#') === 0) {\r\n        hex = hex.slice(1);\r\n    }\r\n    if (hex.length === 3) {\r\n        hex = hex[0] + hex[0] + hex[1] + hex[1] + hex[2] + hex[2];\r\n    }\r\n    if (hex.length !== 6) {\r\n       return ''\r\n    }\r\n    let r = parseInt(hex.slice(0, 2), 16),\r\n        g = parseInt(hex.slice(2, 4), 16),\r\n        b = parseInt(hex.slice(4, 6), 16);\r\n    // http://stackoverflow.com/a/3943023/112731\r\n    return (r * 0.299 + g * 0.587 + b * 0.114) > 186\r\n        ? '#000000'\r\n        : '#FFFFFF';\r\n}","import { makeStyles } from \"@material-ui/core\"\r\nimport { blueGrey } from \"@material-ui/core/colors\"\r\n\r\nexport const useStyles = makeStyles((theme) => ({\r\n    colorPreview: {\r\n        minHeight: 50,\r\n        '& button': {\r\n            display: 'block',\r\n            margin: '0 auto'\r\n        },\r\n    },\r\n    settingsMenu: {\r\n        backgroundColor:\r\n            theme.palette.type === 'light' ? blueGrey[50] : blueGrey[800]\r\n    },\r\n    settingsFields: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n        [theme.breakpoints.down('sm')]: {\r\n            justifyContent: 'center',\r\n        }\r\n    },\r\n    settingsField: {\r\n        minWidth: 200,\r\n        minHeight: 100,\r\n        margin: theme.spacing(1),\r\n        padding: theme.spacing(1),\r\n        '& h4': {\r\n            textAlign: 'center'\r\n        },\r\n        '& select': {\r\n            marginTop: theme.spacing(2)\r\n        }\r\n    }\r\n}))","import { IconButton, Typography } from '@material-ui/core'\r\nimport PaletteIcon from '@material-ui/icons/Palette';\r\nimport React, { useState } from 'react'\r\nimport Modal from '../../../commonComponents/Modal';\r\nimport ColorPicker from '../../../pickers/ColorPicker';\r\nimport { getContrastColor } from '../../../pickers/contrastColor';\r\nimport { useStyles } from './styles';\r\n\r\nconst BackGroundColorPicker = ({ state, dispatch }) => {\r\n    const [colorPickerOpen, setColorPickerOpen] = useState(false)\r\n    const classes = useStyles()\r\n    const handleOpen = () => setColorPickerOpen(true)\r\n    const handleClose = () => setColorPickerOpen(false)\r\n    return (\r\n        <>\r\n            <Typography variant='subtitle1' component='h4'>Background color:</Typography>\r\n            <div className={classes.colorPreview} style={{ backgroundColor: state.color }}>\r\n                <IconButton style={{ color: getContrastColor(state.color) }} onClick={handleOpen}>\r\n                    <PaletteIcon />\r\n                </IconButton>\r\n                <Modal style={{ marginLeft: '64px' }} open={colorPickerOpen} onClose={handleClose}>\r\n                    <ColorPicker state={state} dispatch={dispatch} />\r\n                </Modal>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default BackGroundColorPicker","import { Card, CardContent, Divider, Paper, Typography } from '@material-ui/core'\r\nimport React from 'react'\r\nimport { useStyles } from './styles'\r\n\r\nconst SettingsWrapper = ({ children }) => {\r\n    const classes = useStyles()\r\n    return (\r\n        <Card>\r\n            <CardContent className={classes.settingsMenu}>\r\n                <Typography align='right' variant='h6' component='h3'>Settings</Typography>\r\n                <Divider />\r\n                <div className={classes.settingsFields}>\r\n                    {children.length ? children.map((child, i) => {\r\n                        return (\r\n                            < Paper key={i} className={classes.settingsField} >{child}</Paper >\r\n                        )\r\n                    }) : <Paper className={classes.settingsField}>{children}</Paper>}\r\n                </div>\r\n            </CardContent>\r\n        </Card >\r\n    )\r\n}\r\n\r\nexport default SettingsWrapper","import { Select, Typography } from '@material-ui/core'\r\nimport React from 'react'\r\nimport CategoryMenu from './CategoryMenu';\r\nimport BackGroundColorPicker from '../../../commonComponents/settings/BackGroundColorPicker';\r\nimport SettingsWrapper from '../../../commonComponents/settings/SettingsWrapper'\r\n\r\n\r\n\r\n\r\nconst SettingsMenu = ({ state, dispatch }) => {\r\n    const setPrivacySettings = (e) => {\r\n        dispatch({ type: 'set_privacy_settings', privacySettings: e.target.value })\r\n    }\r\n\r\n\r\n    return (\r\n        <SettingsWrapper>\r\n            <>\r\n                <Typography variant='subtitle1' component='h4'>Who can see my project?</Typography>\r\n                <Select native value={state.privacySettings} onChange={setPrivacySettings}>\r\n                    <option value='public'>Public</option>\r\n                    <option value='publicReg'>Public-registered</option>\r\n                    <option value='private'>Private</option>\r\n                    <option disabled>Certain people</option>\r\n                </Select>\r\n            </>\r\n            <BackGroundColorPicker state={state} dispatch={dispatch} />\r\n            <>\r\n                <Typography variant='subtitle1' component='h4'>Category:</Typography>\r\n                <CategoryMenu state={state} dispatch={dispatch} />\r\n            </>\r\n        </SettingsWrapper>\r\n    )\r\n}\r\n\r\nexport default SettingsMenu","import { Button, Card, CardContent, CardHeader, IconButton, TextField } from '@material-ui/core'\r\nimport React, { useEffect, useReducer, useState } from 'react'\r\nimport { useStyles } from './styles'\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport CloseIcon from '@material-ui/icons/Close'\r\nimport ImageIcon from '@material-ui/icons/Image';\r\nimport SettingsMenu from './settings/SettingsMenu';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { createProject, isFetching, projectCreated as projectCreationStatus, projectCreatedStatusToDefault } from '../../../features/project/projectSlice';\r\n\r\nconst initialState = {\r\n    color: '',\r\n    projectName: '',\r\n    privacySettings: 'public',\r\n    category: null,\r\n    error: null,\r\n}\r\n\r\nconst reducer = (state, action) => {\r\n    switch (action.type) {\r\n        case 'set_color':\r\n            return { ...state, color: action.color }\r\n        case 'set_project_name':\r\n            return { ...state, projectName: action.projectName }\r\n        case 'clear_project_name':\r\n            return { ...state, projectName: '' }\r\n        case 'set_privacy_settings':\r\n            return { ...state, privacySettings: action.privacySettings }\r\n        case 'set_category':\r\n            return { ...state, category: action.category }\r\n        case 'set_error':\r\n            return { ...state, error: action.error }\r\n        case 'clear_error':\r\n            return { ...state, error: null }\r\n        case 'set_to_default':\r\n            return initialState\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nconst NewProject = (props) => {\r\n    const classes = useStyles()\r\n    const dispatch = useDispatch()\r\n    const pending = useSelector(isFetching)\r\n    const [settingsMenuOpen, setSettingsMenuOpen] = useState(false)\r\n    const [state, dispatchLocal] = useReducer(reducer, initialState)\r\n    const projectCreated = useSelector(projectCreationStatus)\r\n\r\n    useEffect(\r\n        () => {\r\n            if (projectCreated) {\r\n                props.setNewProjectMenuOpen(false)\r\n                dispatch(projectCreatedStatusToDefault())\r\n                dispatchLocal({ type: 'clear_project_name' })\r\n            }\r\n        }\r\n    )\r\n\r\n    const toggleSettingsMenu = () => {\r\n        setSettingsMenuOpen(prev => {\r\n            return !prev\r\n        })\r\n    }\r\n\r\n    const setProjectName = (e) => {\r\n        dispatchLocal({ type: 'clear_error' })\r\n        dispatchLocal({ type: 'set_project_name', projectName: e.target.value })\r\n    }\r\n\r\n    const sendNewProject = () => {\r\n        if (!state.projectName) {\r\n            return dispatchLocal({ type: 'set_error', error: 'Field is required' })\r\n        }\r\n        dispatch(createProject(state))\r\n        dispatchLocal({ type: 'set_to_default' })\r\n    }\r\n\r\n\r\n    return (\r\n        <Card >\r\n            <CardHeader\r\n                className={classes.newProjectHeader}\r\n                action={\r\n                    <>\r\n                        <IconButton onClick={toggleSettingsMenu}>\r\n                            {settingsMenuOpen ? <CloseIcon /> : <SettingsIcon />}\r\n                        </IconButton>\r\n                        <IconButton>\r\n                            <ImageIcon />\r\n                        </IconButton>\r\n                    </>\r\n                }\r\n                title='What is final result you want to achive?'\r\n                titleTypographyProps={{ variant: 'h6', component: 'h3' }}\r\n            >\r\n            </CardHeader>\r\n            <CardContent>\r\n                {settingsMenuOpen ? <SettingsMenu state={state} dispatch={dispatchLocal} /> : null}\r\n                <div className={classes.createProjectWrapper}>\r\n                    <TextField\r\n                        onFocus={e => e.target.select()}\r\n                        onChange={setProjectName}\r\n                        value={state.projectName}\r\n                        error={Boolean(state.error)}\r\n                        helperText={state.error}\r\n                        size='small'\r\n                        className={classes.newProjectInput}\r\n                        label='New Project' variant='outlined'\r\n                        placeholder='type new project name'></TextField>\r\n                    <Button disabled={pending.create} variant='contained' color='primary' onClick={sendNewProject}>Create</Button>\r\n                </div>\r\n            </CardContent>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default NewProject","import { Button, Typography } from '@material-ui/core'\r\nimport React from 'react'\r\nimport { useStyles } from './styles'\r\n\r\nconst ConfirmWindow = ({ onConfirm, onClose }) => {\r\n    const classes = useStyles()\r\n    return (\r\n        <div className={classes.confirmDeleteModal}>\r\n            <div><Typography align='center'>Are you sure?</Typography></div>\r\n            <div>\r\n                <Button variant='contained' color='primary' onClick={onConfirm}>yes</Button>\r\n                <Button variant='contained' color='secondary' onClick={onClose}>no</Button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ConfirmWindow","import { Box, Button, Card, CardContent, CardHeader, IconButton, TextField } from '@material-ui/core'\r\nimport React, { useReducer } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { editProject, turnEditModeOff } from '../../../features/project/projectSlice'\r\nimport { useStyles } from './styles'\r\nimport CloseIcon from '@material-ui/icons/Close'\r\nimport SettingsMenu from './settings/SettingsMenu'\r\n\r\nlet initialState = {}\r\n\r\nconst reducer = (state, action) => {\r\n    switch (action.type) {\r\n        case 'set_color':\r\n            return { ...state, color: action.color }\r\n        case 'set_project_name':\r\n            return { ...state, projectName: action.projectName }\r\n        case 'clear_project_name':\r\n            return { ...state, projectName: '' }\r\n        case 'set_privacy_settings':\r\n            return { ...state, privacySettings: action.privacySettings }\r\n        case 'set_category':\r\n            return { ...state, category: action.category }\r\n        case 'set_error':\r\n            return { ...state, error: action.error }\r\n        case 'clear_error':\r\n            return { ...state, error: null }\r\n        case 'set_to_default':\r\n            return initialState\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nconst EditModeProject = ({ project }) => {\r\n    initialState = { ...project }\r\n    const dispatch = useDispatch()\r\n    const [state, dispatchLocal] = useReducer(reducer, initialState)\r\n    const classes = useStyles()\r\n\r\n    const setProjectName = (e) => {\r\n        dispatchLocal({ type: 'clear_error' })\r\n        dispatchLocal({ type: 'set_project_name', projectName: e.target.value })\r\n    }\r\n\r\n\r\n\r\n    const cancelEdit = (e) => {\r\n        dispatch(turnEditModeOff(e.currentTarget.id))\r\n    }\r\n\r\n    const saveChanges = (e) => {\r\n        if (!state.projectName) return dispatchLocal({ type: 'set_error', error: 'Field is required' })\r\n        dispatch(editProject(state))\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <Card>\r\n                <CardHeader\r\n                    title={\r\n                        <TextField\r\n                            onFocus={e => e.target.select()}\r\n                            className={classes.newProjectInput}\r\n                            error={Boolean(state.error)}\r\n                            helperText={state.error}\r\n                            label='Project'\r\n                            multiline\r\n                            onChange={setProjectName}\r\n                            value={state.projectName} />\r\n                    }\r\n                    action={\r\n                        <>\r\n                            <IconButton id={project._id} onClick={cancelEdit}>\r\n                                <CloseIcon />\r\n                            </IconButton>\r\n                        </>\r\n                    }\r\n                />\r\n                <CardContent>\r\n                    <>\r\n                        <SettingsMenu state={state} dispatch={dispatchLocal} />\r\n                        <Box className={classes.editButtonGroup}>\r\n                            <Button variant='contained' color='primary' id={project._id} onClick={saveChanges}>Save</Button>\r\n                            <Button variant='contained' color='secondary' id={project._id} onClick={cancelEdit}>Cancel</Button>\r\n                        </Box>\r\n                    </>\r\n                </CardContent>\r\n            </Card>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default EditModeProject","import { Card, CardHeader, Menu, IconButton, MenuItem } from '@material-ui/core'\r\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport React, { useState } from 'react'\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { NavLink, useHistory } from 'react-router-dom'\r\nimport ConfirmWindow from '../../../commonComponents/ConfirmWindow';\r\nimport Modal from '../../../commonComponents/Modal';\r\nimport { isFetching, projectEditMode, removeProject, turnEditModeOn } from '../../../features/project/projectSlice';\r\nimport { getContrastColor } from '../../../pickers/contrastColor';\r\nimport { useStyles } from './styles';\r\nimport EditModeProject from './EditModeProject';\r\n\r\nconst Project = ({ project }) => {\r\n    const classes = useStyles()\r\n    const dispatch = useDispatch()\r\n    const [deleteConfirmOpen, setDeleteConfirmOpen] = useState(false)\r\n    const [anchorEl, setAnchorEl] = useState(null)\r\n    const [projectToDelete, setProjectToDelete] = useState(null)\r\n    const editMode = useSelector(projectEditMode)\r\n    const pending = useSelector(isFetching)\r\n    const history = useHistory()\r\n\r\n\r\n    const handleDeleteProject = (e) => {\r\n        setProjectToDelete(e.currentTarget.id)\r\n        setDeleteConfirmOpen(true)\r\n        handleClose()\r\n    }\r\n\r\n    const confirmDelete = () => {\r\n        dispatch(removeProject(projectToDelete))\r\n        closeConfirmWindow()\r\n        history.replace('/projects')\r\n    }\r\n\r\n    const handleOpen = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    }\r\n\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    }\r\n\r\n    const handleEdit = (e) => {\r\n        dispatch(turnEditModeOn(e.currentTarget.id))\r\n        handleClose()\r\n    }\r\n\r\n    const closeConfirmWindow = () => setDeleteConfirmOpen(false)\r\n\r\n\r\n    return (\r\n        <>\r\n            {!editMode.some(id => id === project._id) ? <Card className={classes.menuItem}>\r\n                <CardHeader\r\n                    title={history.location.pathname !== `/projects/${project._id}` ? // if pathName /projects/:id NavLink disabled ToDo\r\n                        <NavLink style={{ backgroundColor: project.color, color: project.color ? getContrastColor(project.color) : '' }}\r\n                            className={classes.projectLink} to={`/projects/${project._id}`}>\r\n                            {project.projectName}\r\n                        </NavLink> :\r\n                        <div className={classes.projectHeader} style={{\r\n                            backgroundColor: project.color,\r\n                            color: project.color ? getContrastColor(project.color) : ''\r\n                        }}>{project.projectName}</div>\r\n                    }\r\n                    subheader={new Date(project.editDate).toUTCString()}\r\n                    action={\r\n                        <>\r\n                            <IconButton onClick={handleOpen}>\r\n                                <MoreVertIcon />\r\n                            </IconButton>\r\n                            <Menu\r\n                                className={classes.projectMenu}\r\n                                anchorEl={anchorEl}\r\n                                keepMounted\r\n                                open={Boolean(anchorEl)}\r\n                                onClose={handleClose}\r\n                                getContentAnchorEl={null}\r\n                                anchorOrigin={{ vertical: 'top', horizontal: 'left' }}\r\n                                transformOrigin={{ vertical: 'top', horizontal: 'center' }}\r\n                            >\r\n                                <MenuItem onClick={handleEdit} id={project._id}>Edit <EditIcon /></MenuItem>\r\n                                <MenuItem disabled={pending.delete.some(id => id === project._id)} id={project._id}\r\n                                    onClick={handleDeleteProject}>Delete <DeleteForeverIcon /></MenuItem>\r\n                            </Menu>\r\n                        </>\r\n                    }\r\n                />\r\n            </Card> : <EditModeProject project={project} />}\r\n            <Modal open={deleteConfirmOpen} onClose={closeConfirmWindow}>\r\n                <ConfirmWindow onConfirm={confirmDelete} onClose={closeConfirmWindow} />\r\n            </Modal>\r\n        </>\r\n\r\n    )\r\n}\r\n\r\nexport default Project","import { Card, CardHeader, Typography } from '@material-ui/core'\r\nimport { Skeleton } from '@material-ui/lab'\r\nimport React from 'react'\r\nimport { useStyles } from './styles'\r\n\r\nconst ProjectSkeleton = () => {\r\n    const classes = useStyles()\r\n    return (\r\n        <Card className={classes.menuItem}>\r\n            <CardHeader\r\n                title={\r\n                    <Typography >\r\n                        Loading...\r\n                        <Skeleton />\r\n                    </Typography>\r\n                }\r\n                subheader={\r\n                    <Typography>\r\n                        <Skeleton />\r\n                    </Typography>\r\n                }\r\n            />\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default ProjectSkeleton","import { fade, makeStyles } from \"@material-ui/core\"\r\nimport { green } from \"@material-ui/core/colors\"\r\n\r\n\r\nexport const getContrastColor = (theme) => {\r\n    if (theme.palette.type === 'dark') {\r\n        return '#9eb0ba'\r\n    }\r\n    return '#C7E5FC'\r\n}\r\n\r\nexport const useStyles = makeStyles((theme) => ({\r\n    topControll: {\r\n        display: 'flex',\r\n        justifyContent: 'space-between',\r\n        padding: theme.spacing(1),\r\n        marginTop: theme.spacing(2),\r\n    },\r\n    search: {\r\n        position: 'relative',\r\n        borderRadius: theme.shape.borderRadius,\r\n        backgroundColor: fade(theme.palette.info.main, 0.15),\r\n        '&:hover': {\r\n            backgroundColor: fade(theme.palette.info.main, 0.25),\r\n        },\r\n        marginLeft: 0,\r\n        width: '100%',\r\n        [theme.breakpoints.up('xs')]: {\r\n            marginLeft: theme.spacing(1),\r\n            width: 'auto',\r\n        },\r\n    },\r\n    searchIcon: {\r\n        padding: theme.spacing(0, 2),\r\n        height: '100%',\r\n        position: 'absolute',\r\n        pointerEvents: 'none',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    searchMenu: {\r\n        right: 0,\r\n        position: 'absolute',\r\n        zIndex: 1,\r\n\r\n    },\r\n    inputInput: {\r\n        padding: theme.spacing(1, 1, 1, 0),\r\n        // vertical padding + font size from searchIcon\r\n        paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n        transition: theme.transitions.create('width'),\r\n        width: '100%',\r\n        [theme.breakpoints.up('sm')]: {\r\n            width: '12ch',\r\n            '&:focus': {\r\n                width: '20ch',\r\n            },\r\n        },\r\n    },\r\n    newProjectButton: {\r\n        minWidth: 96,\r\n        [theme.breakpoints.down('sm')]: {\r\n            fontSize: 10,\r\n            padding: '6px 10px'\r\n        }\r\n    },\r\n    success: {\r\n        backgroundColor: green[500],\r\n        '&:hover': {\r\n            backgroundColor: green[700],\r\n        }\r\n    },\r\n    itemsList: {\r\n        padding: 0,\r\n        margin: 0,\r\n        listStyle: 'none'\r\n    }\r\n}))","import axiosInstance from '../axiosSettings'\r\n\r\nconst searchApi = {\r\n    search(context, text) {\r\n        return axiosInstance.get(`search/?where=${context}&text=${text}`)\r\n    }\r\n}\r\n\r\nexport default searchApi","import { createSlice } from '@reduxjs/toolkit';\r\nimport searchApi from './apiCalls';\r\n\r\n\r\n\r\nconst initialState = {\r\n    searchResult: null\r\n}\r\n\r\nexport const searchSlice = createSlice({\r\n    name: 'search',\r\n    initialState,\r\n    reducers: {\r\n        setSearchResult: (state, action) => {\r\n            state.searchResult = action.payload\r\n        },\r\n        reset: () => initialState\r\n    },\r\n});\r\n\r\n\r\nexport const { setSearchResult, reset } = searchSlice.actions;\r\n\r\n//selectors\r\nexport const searchResult = state => state.search.searchResult\r\n//thunks\r\nexport const search = (context, searchText) => dispatch => {\r\n    searchApi.search(context, searchText).then(res => {\r\n        dispatch(setSearchResult(res.data))\r\n    })\r\n}\r\n\r\nexport default searchSlice.reducer;\r\n","import { MenuItem, Typography } from '@material-ui/core'\r\nimport React, { useState } from 'react'\r\nimport { Redirect } from 'react-router'\r\n\r\nfunction SearchResult({ searchRes }) {\r\n    const [redirect, setRedirect] = useState(null)\r\n    const handleRelocate = (e) => {\r\n        const projectId = e.currentTarget.getAttribute('projectid')\r\n        const taskId = e.currentTarget.getAttribute('taskid')\r\n        setRedirect({\r\n            pathname: `/projects/${projectId}`,\r\n            state: { taskId }\r\n        })\r\n    }\r\n\r\n    if (redirect) {\r\n        return <Redirect to={redirect} />\r\n    }\r\n\r\n    return (\r\n        <div style={{ width: '100%' }}>\r\n            {searchRes && searchRes.projects && searchRes.projects.length ? <p>Projects:</p> : null}\r\n            {searchRes && searchRes.projects && searchRes.projects.map(item => {\r\n                return <MenuItem projectid={item._id} onClick={handleRelocate} key={item._id}>{item.projectName}</MenuItem>\r\n            })}\r\n            {searchRes && searchRes.tasks && searchRes.tasks.length ? <p>Tasks:</p> : null}\r\n            {searchRes && searchRes.tasks && searchRes.tasks.map(item => {\r\n                return <MenuItem projectid={item.project} taskid={item._id} onClick={handleRelocate} key={item._id}>\r\n\r\n                    <div>\r\n                        {<Typography variant='h6' component='h3'>{item.projectName}</Typography >}\r\n                        {item.taskName}\r\n                    </div>\r\n\r\n                </MenuItem>\r\n            })}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SearchResult\r\n","import { Button, InputBase, Paper } from '@material-ui/core'\r\nimport React, { useEffect, useRef, useState } from 'react'\r\nimport { useStyles } from './styles'\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport useDebounce from '../../hooks/useDebounce'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { reset, search, searchResult } from '../../features/search/searchSlice';\r\nimport useClickAway from '../../hooks/useClickAway';\r\nimport SearchResult from './SearchResult';\r\n\r\n\r\n\r\n\r\nconst TopControll = ({ open, toggleOpen, context, createNewText = 'new', listText }) => {\r\n    const classes = useStyles()\r\n    const dispatch = useDispatch()\r\n    const [searchInputValue, setSearchInputValue] = useState('')\r\n    const [searchOpen, setSearchOpen] = useState(false)\r\n    const searchText = useDebounce(searchInputValue, 300)\r\n    const clickAwayRef = useRef(null)\r\n    const exceptionRef = useRef(null)\r\n    useClickAway(clickAwayRef, exceptionRef, () => {\r\n        setSearchOpen(false)\r\n    })\r\n\r\n    useEffect(() => {\r\n        return dispatch(reset())\r\n    }, [dispatch])\r\n\r\n    const searchRes = useSelector(searchResult)\r\n\r\n    useEffect(() => {\r\n        if (searchText) {\r\n            dispatch(search(context, searchText))\r\n        }\r\n    }, [searchText, context, dispatch])\r\n\r\n    const handleChange = e => {\r\n        if (e.currentTarget.value === '') dispatch(reset())\r\n        setSearchInputValue(e.currentTarget.value)\r\n    }\r\n\r\n    const handleSearchOpen = (e) => {\r\n        if (open) return\r\n        setSearchOpen(true)\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <Paper className={classes.topControll}>\r\n                <Button color='primary' onClick={toggleOpen} variant='contained'\r\n                    className={`${classes.newProjectButton} ${open ? classes.success : ''}`}>\r\n                    {!open ? `${createNewText}` : `${listText}`}</Button>\r\n                <div className={classes.search}>\r\n                    <div>\r\n                        <div className={classes.searchIcon}><SearchIcon /></div>\r\n                        <div>\r\n                            <InputBase\r\n                                ref={exceptionRef}\r\n                                disabled={open}\r\n                                value={searchInputValue}\r\n                                onChange={handleChange}\r\n                                onClick={handleSearchOpen}\r\n                                placeholder=\"Search…\"\r\n                                classes={{\r\n                                    root: classes.inputRoot,\r\n                                    input: classes.inputInput,\r\n                                }}\r\n                                inputProps={{ 'aria-label': 'search' }}\r\n                            />\r\n                            {searchOpen && <Paper ref={clickAwayRef} className={classes.searchMenu}>\r\n                                <SearchResult searchRes={searchRes} />\r\n                            </Paper>}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n            </Paper>\r\n        </>\r\n\r\n    )\r\n}\r\n\r\nexport default TopControll","import { Typography } from '@material-ui/core'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Redirect } from 'react-router'\r\nimport { getProjects, isFetched, isFetching, projects as projectsSelector } from '../../../features/project/projectSlice';\r\nimport useNotAuth from '../../../hooks/useNotAuth'\r\nimport NewProject from './NewProject';\r\nimport { useStyles } from './styles'\r\nimport Project from './Project';\r\nimport ProjectSkeleton from './ProjectSkeleton';\r\nimport TopControll from '../../commonComponents/TopControll';\r\n\r\nconst Projects = () => {\r\n    const classes = useStyles()\r\n    const redirect = useNotAuth()\r\n    const [newProjectMenuOpen, setNewProjectMenuOpen] = useState(false)\r\n    const dispatch = useDispatch()\r\n    const pending = useSelector(isFetching)\r\n    const projects = useSelector(projectsSelector)\r\n    const isFirstLoadComplete = useSelector(isFetched)\r\n\r\n\r\n\r\n    useEffect(\r\n        () => {\r\n            if (projects.length === 0 && !pending.projectsLoading && !isFirstLoadComplete) {\r\n                dispatch(getProjects())\r\n            }\r\n        }, [dispatch, pending.projectsLoading, projects.length, isFirstLoadComplete]\r\n    )\r\n\r\n\r\n    const toggleNewProject = () => {\r\n        setNewProjectMenuOpen((prev) => {\r\n            return !prev\r\n        })\r\n    }\r\n\r\n\r\n    if (redirect) return <Redirect to='/login' />\r\n\r\n    return (\r\n        <>\r\n            <Typography align='center' variant='h4' component='h1'>Projects</Typography>\r\n            <TopControll context='projects' open={newProjectMenuOpen} toggleOpen={toggleNewProject}\r\n                createNewText='New Project' listText='Projects' />\r\n\r\n            <div className={classes.projectsContainer}>\r\n                <div className={`${classes.projects} ${newProjectMenuOpen ? classes.hide : ''}`}>\r\n                    {pending.projectsLoading ? <ProjectSkeleton />\r\n                        : projects.length ? (projects.map((project, i) => {\r\n                            return (\r\n                                <Project key={i} project={project} />\r\n                            )\r\n                        })) : <h1>Create your first project</h1>}\r\n                </div>\r\n                <div className={`${classes.newProject} ${!newProjectMenuOpen ? classes.hide : ''}`}>\r\n                    <NewProject setNewProjectMenuOpen={setNewProjectMenuOpen} /></div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Projects","import { Card } from '@material-ui/core'\r\nimport React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { NavLink } from 'react-router-dom'\r\nimport { getUsers, isFetching, users } from '../../../features/users/usersSlice'\r\nimport { linkStyle } from '../../commonStyles'\r\n\r\nconst Users = () => {\r\n    const dispatch = useDispatch()\r\n    const pending = useSelector(isFetching)\r\n    const profiles = useSelector(users)\r\n\r\n    useEffect(\r\n        () => {\r\n            if (!profiles.length && !pending.usersFetching) {\r\n                dispatch(getUsers())\r\n            }\r\n        }, [profiles.length, pending.usersFetching, dispatch]\r\n    )\r\n\r\n    return (\r\n        <>\r\n            {profiles.map(profile => {\r\n                return <Card key={profile._id}>\r\n                    <NavLink style={linkStyle} to={`users/${profile._id}`}><h1>{profile.alias}</h1></NavLink>\r\n                    <h2>Projects count: {profile.projectsCount}</h2>\r\n                </Card>\r\n            })}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Users","import React from 'react'\r\n\r\nconst Root = ()=>{\r\n    return (\r\n        <h1>ROOT</h1>\r\n    )\r\n}\r\n\r\nexport default Root","import React from 'react'\r\n\r\nconst ProfilePreloader = () => {\r\n    return (\r\n        <h1>Loading...</h1>\r\n    )\r\n}\r\n\r\nexport default ProfilePreloader","import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Redirect } from 'react-router'\r\nimport { authUser, getMyProfile, isFetching } from '../../../features/users/usersSlice'\r\nimport useNotAuth from '../../../hooks/useNotAuth'\r\nimport ProfilePreloader from './ProfilePreloader'\r\n\r\n\r\nconst MyProfile = () => {\r\n    const dispatch = useDispatch()\r\n    const redirect = useNotAuth()\r\n    const profile = useSelector(authUser)\r\n    const pending = useSelector(isFetching)\r\n\r\n    useEffect(\r\n        () => {\r\n            if (!profile && !pending.myProfileFetching) {\r\n                dispatch(getMyProfile())\r\n            }\r\n        }, [profile, dispatch, pending.myProfileFetching]\r\n    )\r\n    \r\n    if (redirect) return <Redirect to='/login' />\r\n    if (pending.myProfileFetch) return <ProfilePreloader />\r\n    if (!profile) return <></>\r\n    return (\r\n        <>\r\n            <h1>{profile.alias}</h1>\r\n            <h2>{profile.name} {profile.surname}</h2>\r\n            <h2>{profile.email}</h2>\r\n            <h3>Projects count: {profile.projectsCount}/{profile.projectsLimit} </h3>\r\n        </>)\r\n}\r\n\r\nexport default MyProfile","import axiosInstance from '../axiosSettings'\r\n\r\n//const tasksPath = id => `projects/${id}/tasks/`\r\n\r\nconst taskApi = {\r\n\r\n    newTask(projectId, task) {\r\n        return axiosInstance.post(`projects/${projectId}/tasks`, task).then(response => response.data)\r\n    },\r\n    getTasks(projectId, skip) {\r\n        const path = `tasks?skip=${skip || 0}`\r\n        return axiosInstance.get(`projects/${projectId}/${path}`)\r\n    },\r\n    updateTasksOrder(projectId, tasks) {\r\n        return axiosInstance.put(`projects/${projectId}/tasks/updateOrder`, tasks)\r\n    },\r\n    editTask(projectId, taskId, task) {\r\n        return axiosInstance.put(`projects/${projectId}/tasks/${taskId}`, task)\r\n    },\r\n    changeCompleteStatus(projectId, taskId, status) {\r\n        return axiosInstance.put(`projects/${projectId}/tasks/${taskId}/status`, status)\r\n    },\r\n    deleteTask(projectId, taskId) {\r\n        return axiosInstance.delete(`projects/${projectId}/tasks/${taskId}`)\r\n    }\r\n}\r\n\r\nexport default taskApi","import { createSlice } from '@reduxjs/toolkit';\r\nimport { COMPLETE_STATUS, CREATE, DELETE, EDIT, TASKS_LOADING, ORDER_CHANGE } from '../actions';\r\nimport taskApi from './apiCalls';\r\n\r\nconst TASKS_PER_REQUEST = 20\r\n\r\nconst initialState = {\r\n    tasks: [],\r\n    pending: {\r\n        create: false,\r\n        tasksLoading: false,\r\n        delete: [],\r\n        edit: [],\r\n        completeStatus: [],\r\n        orderChange: false,\r\n    },\r\n    taskPage: {\r\n        currentPage: 1,\r\n        totalPagesCount: 0,\r\n    },\r\n    isFetched: false,\r\n    editMode: [],\r\n    error: null\r\n}\r\n\r\n\r\nexport const taskSlice = createSlice({\r\n    name: 'task',\r\n    initialState,\r\n    reducers: {\r\n        pending: (state, action) => {\r\n            if ([DELETE, EDIT, COMPLETE_STATUS].some(item => item === action.payload.action)) {\r\n                state.pending[action.payload.action] = [...state.pending[action.payload.action], action.payload.id]\r\n                return\r\n            }\r\n            state.pending[action.payload.action] = true\r\n        },\r\n        stopPending: (state, action) => {\r\n            if ([DELETE, EDIT, COMPLETE_STATUS].some(item => item === action.payload.action)) {\r\n                state.pending[action.payload.action] = [...state.pending[action.payload.action].filter(id => id !== action.payload.id)]\r\n                return\r\n            }\r\n            state.pending[action.payload.action] = false\r\n        },\r\n        firstLoadComplete: state => {\r\n            state.isFetched = true\r\n        },\r\n        updateTasksOrder: (state, action) => {\r\n            state.tasks = action.payload\r\n        },\r\n        setTasks: (state, action) => {\r\n            state.tasks = [...state.tasks, ...action.payload]\r\n        },\r\n        turnEditModeOn: (state, action) => {\r\n            state.editMode = [...state.editMode, action.payload]\r\n        },\r\n        turnEditModeOff: (state, action) => {\r\n            state.editMode = [...state.editMode.filter(id => id !== action.payload)]\r\n        },\r\n        addTaskToBegining: (state, action) => {\r\n            state.tasks = [action.payload, ...state.tasks]\r\n        },\r\n        updateTask: (state, action) => {\r\n            let isFinded = false\r\n            state.tasks = state.tasks.map(task => {\r\n                if (!isFinded && task._id === action.payload._id) {\r\n                    isFinded = true\r\n                    return action.payload\r\n                }\r\n                return task\r\n            })\r\n\r\n        },\r\n        updateTaskCompleteStatus: (state, action) => {\r\n            let isFinded = false\r\n            state.tasks = state.tasks.map(task => {\r\n                if (!isFinded && task._id === action.payload._id) {\r\n                    isFinded = true\r\n                    return { ...task, finished: !task.finished }\r\n                }\r\n                return task\r\n            })\r\n        },\r\n        setPagesCount: (state, action) => {\r\n            state.taskPage.totalPagesCount = action.payload\r\n        },\r\n        incrementPage: state => {\r\n            state.taskPage.currentPage++\r\n        },\r\n        deleteTask: (state, action) => {\r\n            state.tasks = state.tasks.filter(task => task._id !== action.payload)\r\n        },\r\n        reset: () => initialState\r\n    }\r\n})\r\n\r\nexport const { pending, stopPending, setTasks, addTaskToBegining, turnEditModeOn, turnEditModeOff,\r\n    deleteTask, updateTask, updateTaskCompleteStatus, updateTasksOrder,\r\n    reset, firstLoadComplete, setPagesCount, incrementPage } = taskSlice.actions\r\n\r\n//selectors\r\nexport const isFetching = state => state.task.pending\r\nexport const tasks = state => state.task.tasks\r\nexport const error = state => state.task.error\r\nexport const isFetched = state => state.task.isFetched\r\nexport const taskEditMode = state => state.task.editMode\r\nexport const taskPage = state => state.task.taskPage\r\nexport const skipTasks = state => state.task.skipTasks\r\n//thunks\r\nexport const createTask = (projectId, task) => dispatch => {\r\n    dispatch(pending({ action: CREATE }))\r\n    taskApi.newTask(projectId, task).then(res => {\r\n        dispatch(addTaskToBegining(res.task))\r\n        dispatch(stopPending({ action: CREATE }))\r\n    })\r\n}\r\n\r\nexport const getTasks = (projectId, skip) => dispatch => {\r\n    dispatch(pending({ action: TASKS_LOADING }))\r\n    taskApi.getTasks(projectId, skip).then(res => {\r\n        dispatch(firstLoadComplete())\r\n        if (res.data.tasks) {\r\n            dispatch(setTasks(res.data.tasks))\r\n            dispatch(incrementPage())\r\n            dispatch(stopPending({ action: TASKS_LOADING }))\r\n            dispatch(setPagesCount(Math.ceil(res.data.tasksCount / TASKS_PER_REQUEST)))\r\n        } else {\r\n            dispatch(stopPending({ action: TASKS_LOADING }))\r\n        }\r\n    })\r\n}\r\n\r\nexport const editTask = (projectId, taskId, task) => dispatch => {\r\n    dispatch(pending({ action: EDIT, id: taskId }))\r\n    taskApi.editTask(projectId, taskId, task).then(res => {\r\n        if (res.data.task) {\r\n            dispatch(updateTask(res.data.task))\r\n            dispatch(stopPending({ action: EDIT, id: taskId }))\r\n            dispatch(turnEditModeOff(taskId))\r\n        }\r\n    })\r\n}\r\n\r\nexport const changeTasksOrder = (projectId, tasks, order) => dispatch => {\r\n    if (order.new === order.previous) return\r\n    dispatch(pending({ action: ORDER_CHANGE }))\r\n    const newOrder = tasks.map((task, i) => {\r\n        return { ...task, order: i }\r\n    })\r\n    dispatch(updateTasksOrder(newOrder))\r\n    taskApi.updateTasksOrder(projectId, { prev: order.previous, new: order.new }).then(res => {\r\n        dispatch(stopPending({ action: ORDER_CHANGE }))\r\n    })\r\n}\r\n\r\nexport const changeCompleteStatus = (projectId, taskId, status) => dispatch => {\r\n    dispatch(pending({ action: COMPLETE_STATUS, id: taskId }))\r\n    const startFetchTime = new Date()\r\n    taskApi.changeCompleteStatus(projectId, taskId, { status }).then(res => {\r\n        dispatch(updateTaskCompleteStatus({ _id: taskId }))\r\n        const endFetch = new Date()\r\n        const test = setTimeout(() => {\r\n            dispatch(stopPending({ action: COMPLETE_STATUS, id: taskId }))\r\n        }, 2000)\r\n        if ((endFetch - startFetchTime) > 2000) {\r\n            dispatch(stopPending({ action: COMPLETE_STATUS, id: taskId }))\r\n            clearTimeout(test)\r\n        }\r\n    })\r\n\r\n\r\n}\r\n\r\nexport const removeTask = (projectId, taskId) => dispatch => {\r\n    dispatch(pending({ action: DELETE, id: taskId }))\r\n    taskApi.deleteTask(projectId, taskId).then(res => {\r\n        dispatch(deleteTask(taskId))\r\n        dispatch(stopPending({ action: DELETE, id: taskId }))\r\n    })\r\n}\r\n\r\nexport default taskSlice.reducer;\r\n","import React from 'react'\r\nimport BackGroundColorPicker from '../../../commonComponents/settings/BackGroundColorPicker'\r\nimport SettingsWrapper from '../../../commonComponents/settings/SettingsWrapper'\r\n\r\nconst SettingsMenu = ({ state, dispatch }) => {\r\n    return (\r\n        <SettingsWrapper>\r\n            <BackGroundColorPicker state={state} dispatch={dispatch} />\r\n        </SettingsWrapper>\r\n    )\r\n}\r\n\r\nexport default SettingsMenu","import { makeStyles } from \"@material-ui/core\"\r\nimport { getContrastColor } from \"../projects/styles\"\r\n\r\nexport const useStyles = makeStyles((theme) => ({\r\n    wrapper: {\r\n        position: 'relative'\r\n    },\r\n    newTaskInput: {\r\n        margin: 'auto 0',\r\n        '& label.Mui-focused': {\r\n            fontSize: 16,\r\n            paddingLeft: 20,\r\n            paddingRight: 20,\r\n            color: '#444040',\r\n            backgroundColor: getContrastColor(theme)\r\n        },\r\n        '& input': {\r\n            '&:-webkit-autofill': {\r\n                WebkitBoxShadow: '0 0 0 100px #88a4ce inset', //TODO\r\n                WebkitTextFillColor: '#444040',\r\n            }\r\n        }\r\n    },\r\n    newTaskMenu: {\r\n        width: '100%',\r\n        marginTop: theme.spacing(2),\r\n        padding: theme.spacing(2),\r\n        opacity: 1,\r\n        transform: 'scale(1)',\r\n        // transition: 'all .3s',\r\n        transition: theme.transitions.create('transform', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.standard,\r\n        }),\r\n        '& .MuiGrid-container': {\r\n            flexWrap: 'nowrap',\r\n        }\r\n    },\r\n    hide: {\r\n        position: 'absolute',\r\n        opacity: 0,\r\n        width: 0,\r\n        height: 0,\r\n        transform: 'scale(0)',\r\n        transition: theme.transitions.create('all', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.standard,\r\n        }),\r\n    },\r\n    inputWrapper: {\r\n        display: 'flex',\r\n        flexGrow: 1,\r\n        [theme.breakpoints.down('xs')]: {\r\n            display: 'block',\r\n            '& input': {\r\n                width: '100%'\r\n            }\r\n        }\r\n    },\r\n    buttonWrapper: {\r\n        padding: theme.spacing(1),\r\n        [theme.breakpoints.down('xs')]: {\r\n            paddingLeft: 0\r\n        },\r\n    },\r\n    settings: {\r\n        marginTop: theme.spacing(2)\r\n    },\r\n    taskContainer: {\r\n        marginTop: theme.spacing(2),\r\n    },\r\n    confirmDeleteModal: {\r\n        minWidth: 160,\r\n        '& p': {\r\n            padding: theme.spacing(1)\r\n        },\r\n        '& button': {\r\n            margin: theme.spacing(1)\r\n        },\r\n    },\r\n    taskHeader: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        '& .MuiAvatar-root': {\r\n            marginRight: theme.spacing(1)\r\n        }\r\n    },\r\n    taskMenu: {\r\n        '& li': {\r\n            display: 'flex',\r\n            justifyContent: 'space-between',\r\n            '& svg': {\r\n                marginLeft: theme.spacing(1)\r\n            }\r\n        }\r\n    },\r\n    editButtonGroup: {\r\n        marginTop: theme.spacing(1),\r\n        '& :first-child': {\r\n            marginRight: theme.spacing(1)\r\n        }\r\n    },\r\n    taskWrapper: {\r\n        position: 'relative'\r\n    },\r\n    taskAnchor: {\r\n        position: 'absolute',\r\n        top: -64\r\n    },\r\n    tasksList: {\r\n        margin: 0,\r\n        padding: 0,\r\n        listStyle: 'none'\r\n    },\r\n    draggable: {\r\n\r\n    },\r\n    spacer: {\r\n    }\r\n}))","import { Button, Grid, IconButton, Paper, TextField } from '@material-ui/core'\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport CloseIcon from '@material-ui/icons/Close'\r\nimport React, { useReducer, useState } from 'react'\r\nimport { useDispatch } from 'react-redux';\r\nimport { createTask } from '../../../features/task/tasksSlice';\r\nimport SettingsMenu from './settings/SettingsMenu';\r\nimport { useStyles } from './styles'\r\n\r\nconst initialState = {\r\n    color: '',\r\n    taskName: '',\r\n    error: null,\r\n}\r\n\r\nconst reducer = (state, action) => {\r\n    switch (action.type) {\r\n        case 'set_color':\r\n            return { ...state, color: action.color }\r\n        case 'set_task_name':\r\n            return { ...state, taskName: action.taskName }\r\n        case 'clear_task_name':\r\n            return { ...state, taskName: '' }\r\n        case 'set_error':\r\n            return { ...state, error: action.error }\r\n        case 'clear_error':\r\n            return { ...state, error: null }\r\n        case 'set_to_default':\r\n            return initialState\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nconst NewTask = ({ projectId, open }) => {\r\n    const classes = useStyles()\r\n    const [state, dispatchLocal] = useReducer(reducer, initialState)\r\n    const [settingsMenuOpen, setSettingsMenuOpen] = useState(false)\r\n    const dispatch = useDispatch()\r\n\r\n\r\n    const setTaskName = (e) => {\r\n        dispatchLocal({ type: 'clear_error' })\r\n        dispatchLocal({ type: 'set_task_name', taskName: e.target.value })\r\n    }\r\n\r\n    const toggleSettingsMenu = () => {\r\n        setSettingsMenuOpen(prev => {\r\n            return !prev\r\n        })\r\n    }\r\n\r\n    const sendNewTask = () => {\r\n        if (!state.taskName) {\r\n            return dispatchLocal({ type: 'set_error', error: 'Field is required' })\r\n        }\r\n        dispatch(createTask(projectId, state))\r\n        dispatchLocal({ type: 'set_to_default' })\r\n    }\r\n\r\n    return (\r\n        <div className={classes.wrapper}>\r\n            <Paper className={`${!open ? classes.hide : classes.newTaskMenu}`}>\r\n                <Grid container>\r\n                    <div className={classes.inputWrapper}>\r\n                        <TextField\r\n                            onFocus={e => e.target.select()}\r\n                            className={classes.newTaskInput}\r\n                            onChange={setTaskName}\r\n                            value={state.taskName}\r\n                            size='small'\r\n                            error={Boolean(state.error)}\r\n                            helperText={state.error}\r\n                            variant='outlined'\r\n                            label='Task'\r\n                            placeholder='type new task'></TextField>\r\n\r\n                        <div className={classes.buttonWrapper}>\r\n                            <Button onClick={sendNewTask} variant='contained'>Create</Button>\r\n                        </div>\r\n\r\n                    </div>\r\n                    <div>\r\n                        <IconButton onClick={toggleSettingsMenu}>\r\n                            {settingsMenuOpen ? <CloseIcon /> : <SettingsIcon />}\r\n                        </IconButton>\r\n                    </div>\r\n                </Grid>\r\n                <div className={classes.settings}>\r\n                    {settingsMenuOpen ? <SettingsMenu state={state} dispatch={dispatchLocal} /> : null}\r\n                </div>\r\n            </Paper>\r\n        </div >\r\n\r\n    )\r\n}\r\n\r\nexport default NewTask","import { Box, Button, Card, CardContent, CardHeader, IconButton, TextField } from '@material-ui/core'\r\nimport React, { useReducer } from 'react'\r\nimport CloseIcon from '@material-ui/icons/Close'\r\nimport { useDispatch } from 'react-redux'\r\nimport { turnEditModeOff, editTask } from '../../../features/task/tasksSlice'\r\nimport { useStyles } from './styles'\r\nimport SettingsWrapper from '../../commonComponents/settings/SettingsWrapper';\r\nimport BackGroundColorPicker from '../../commonComponents/settings/BackGroundColorPicker';\r\n\r\nlet initialState = {}\r\n\r\nconst reducer = (state, action) => {\r\n    switch (action.type) {\r\n        case 'set_color':\r\n            return { ...state, color: action.color }\r\n        case 'set_task_name':\r\n            return { ...state, taskName: action.taskName }\r\n        case 'clear_task_name':\r\n            return { ...state, taskName: '' }\r\n        case 'set_error':\r\n            return { ...state, error: action.error }\r\n        case 'clear_error':\r\n            return { ...state, error: null }\r\n        case 'set_to_default':\r\n            return initialState\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\n\r\nconst EditModeTask = ({ projectId, task }) => {\r\n    initialState = { ...task }\r\n    const dispatch = useDispatch()\r\n    const [state, dispatchLocal] = useReducer(reducer, initialState)\r\n    const classes = useStyles()\r\n\r\n    const setTaskName = (e) => {\r\n        dispatchLocal({ type: 'clear_error' })\r\n        dispatchLocal({ type: 'set_task_name', taskName: e.target.value })\r\n    }\r\n\r\n    const cancelEdit = (e) => {\r\n        dispatch(turnEditModeOff(e.currentTarget.id))\r\n    }\r\n\r\n    const saveChanges = (e) => {\r\n        if (!state.taskName) return dispatchLocal({ type: 'set_error', error: 'Field is required' })\r\n        dispatch(editTask(projectId, task._id, state))\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <Card className={classes.taskContainer}>\r\n                <CardHeader\r\n                    title={\r\n                        <TextField\r\n                            onFocus={e => e.target.select()}\r\n                            className={classes.newTaskInput}\r\n                            error={Boolean(state.error)}\r\n                            helperText={state.error}\r\n                            label='Task'\r\n                            multiline\r\n                            onChange={setTaskName}\r\n                            value={state.taskName} />\r\n                    }\r\n                    action={\r\n                        <IconButton id={task._id} onClick={cancelEdit}>\r\n                            <CloseIcon />\r\n                        </IconButton>\r\n                    }\r\n                />\r\n                <CardContent>\r\n                    <>\r\n                        <SettingsWrapper>\r\n                            <BackGroundColorPicker state={state} dispatch={dispatchLocal} />\r\n                        </SettingsWrapper>\r\n                        <Box className={classes.editButtonGroup}>\r\n                            <Button id={task._id} onClick={saveChanges} variant='contained' color='primary'>save</Button>\r\n                            <Button id={task._id} onClick={cancelEdit} variant='contained' color='secondary'>cancel</Button>\r\n                        </Box>\r\n                    </>\r\n                </CardContent>\r\n            </Card>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default EditModeTask","import { Avatar, Checkbox, withStyles } from \"@material-ui/core\";\r\nimport { indigo, lightGreen } from \"@material-ui/core/colors\";\r\n\r\nexport const GreenCheckbox = withStyles({\r\n    root: {\r\n        '&$checked': {\r\n            color: lightGreen['A200'],\r\n        },\r\n    },\r\n    checked: {},\r\n})((props) => <Checkbox color=\"default\" {...props} />)\r\n\r\nexport const IndigoAvatar = withStyles({\r\n    root: {\r\n        backgroundColor: indigo[200],\r\n    },\r\n})((props) => <Avatar color=\"default\" {...props} />)","import { Card, CardHeader, IconButton, Menu, MenuItem, Typography } from '@material-ui/core'\r\nimport React, { useEffect, useRef, useState } from 'react'\r\nimport { useStyles } from './styles'\r\nimport { getContrastColor } from '../../../pickers/contrastColor'\r\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever'\r\nimport RestoreIcon from '@material-ui/icons/Restore'\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert'\r\nimport EditIcon from '@material-ui/icons/Edit'\r\nimport DoneIcon from '@material-ui/icons/Done'\r\nimport Modal from '../../../commonComponents/Modal'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { changeCompleteStatus, isFetching, removeTask, taskEditMode, turnEditModeOn } from '../../../features/task/tasksSlice'\r\nimport ConfirmWindow from '../../../commonComponents/ConfirmWindow'\r\nimport EditModeTask from './EditModeTask'\r\nimport { GreenCheckbox, IndigoAvatar } from '../../commonComponents/StyledComponents'\r\nimport { useHistory } from 'react-router'\r\n\r\n\r\n\r\nconst Task = ({ projectId, item: task }) => {\r\n    const history = useHistory()\r\n    const scrollToRef = useRef(null)\r\n    const [anchorEl, setAnchorEl] = useState(null)\r\n    const [deleteConfirmOpen, setDeleteConfirmOpen] = useState(false)\r\n    const [taskToDelete, setTaskToDelete] = useState(null)\r\n    const editMode = useSelector(taskEditMode)\r\n    const pending = useSelector(isFetching)\r\n    const classes = useStyles()\r\n    const dispatch = useDispatch()\r\n    const bgColor = task.color ? getContrastColor(task.color) : ''\r\n\r\n    useEffect(\r\n        () => {\r\n            scrollToRef && scrollToRef.current && scrollToRef.current.scrollIntoView({ behavior: 'smooth' })\r\n        }, [history.location.state, scrollToRef]\r\n    )\r\n\r\n\r\n    const handleOpen = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    }\r\n\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    }\r\n\r\n    const handleDelete = (e) => {\r\n        setTaskToDelete(task._id)\r\n        setDeleteConfirmOpen(true)\r\n        handleClose()\r\n    }\r\n\r\n    const confirmDelete = () => {\r\n        dispatch(removeTask(projectId, taskToDelete))\r\n        closeConfirmWindow()\r\n    }\r\n\r\n    const handleEdit = () => {\r\n        dispatch(turnEditModeOn(task._id))\r\n        handleClose()\r\n    }\r\n\r\n    const handleTaskComplete = () => {\r\n        toggleTaskComplete()\r\n        handleClose()\r\n    }\r\n\r\n    const closeConfirmWindow = () => setDeleteConfirmOpen(false)\r\n\r\n    const toggleTaskComplete = () => {\r\n        dispatch(changeCompleteStatus(projectId, task._id, !task.finished))\r\n    }\r\n\r\n    return (\r\n        <div className={classes.taskWrapper}>\r\n\r\n            {!editMode.some(id => id === task._id) ? <Card className={classes.taskContainer}>\r\n                <CardHeader\r\n                    id={task._id}\r\n                    style={{ backgroundColor: task.color, color: bgColor }}\r\n                    title={\r\n                        <div className={classes.taskHeader}>\r\n                            <IndigoAvatar>\r\n                                <GreenCheckbox\r\n                                    disabled={pending.completeStatus.some(id => id === task._id)}\r\n                                    id={task._id}\r\n                                    onChange={toggleTaskComplete}\r\n                                    checked={task.finished}\r\n                                    checkedIcon={<DoneIcon />}></GreenCheckbox>\r\n                            </IndigoAvatar>\r\n                            <Typography>{task.taskName}</Typography>\r\n                        </div>\r\n                    }\r\n                    action={\r\n                        <>\r\n                            <IconButton onClick={handleOpen}>\r\n                                <MoreVertIcon style={{ color: bgColor }} />\r\n                            </IconButton>\r\n                            <Menu\r\n                                className={classes.taskMenu}\r\n                                anchorEl={anchorEl}\r\n                                keepMounted\r\n                                open={Boolean(anchorEl)}\r\n                                onClose={handleClose}\r\n                                getContentAnchorEl={null}\r\n                                anchorOrigin={{ vertical: 'top', horizontal: 'left' }}\r\n                                transformOrigin={{ vertical: 'top', horizontal: 'center' }}\r\n                            >\r\n                                <MenuItem onClick={handleEdit}>Edit <EditIcon /></MenuItem>\r\n                                <MenuItem disabled={pending.delete.some(id => id === task._id)} id={task._id}\r\n                                    onClick={handleDelete}>Delete <DeleteForeverIcon /></MenuItem>\r\n                                <MenuItem disabled={pending.completeStatus.some(id => id === task._id)}\r\n                                    onClick={handleTaskComplete} >{task.finished\r\n                                        ? <>Uncomplete <RestoreIcon /> </>\r\n                                        : <>Complete <DoneIcon /></>} </MenuItem>\r\n                            </Menu>\r\n                        </>\r\n                    }\r\n                />\r\n                <div className={classes.taskAnchor} ref={history.location.state && history.location.state.taskId === task._id ? scrollToRef : null}></div>\r\n            </Card> : <EditModeTask projectId={projectId} task={task} />}\r\n\r\n            <Modal open={deleteConfirmOpen} onClose={closeConfirmWindow}>\r\n                <ConfirmWindow onConfirm={confirmDelete} onClose={closeConfirmWindow} />\r\n            </Modal>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Task","import React, { useCallback, useEffect, useRef, useState } from 'react'\r\nimport { useStyles } from './styles'\r\n\r\nconst DragAndDropList = ({ listItems, isFetching, itemComponent: ItemComponent, onChange, animationDuration, animationEasing, ...rest }) => {\r\n    const [items, setItems] = useState(listItems)\r\n    const classes = useStyles()\r\n    const [dragging, setDragging] = useState()\r\n    const [willEndDragging, setWillEndDragging] = useState()\r\n    const list = useRef()\r\n    const touchId = useRef()\r\n    const itemsOrder = useRef()\r\n    const prevItems = useRef()\r\n    const draggedItemPosition = useRef()\r\n    const dragMoveHandler = useRef()\r\n    const itemShiftsY = useRef()\r\n\r\n\r\n    useEffect(() => {\r\n        setItems(listItems)\r\n    }, [listItems, itemsOrder])\r\n\r\n    if (items !== prevItems.current) {\r\n        prevItems.current = items\r\n        itemsOrder.current = items.map((item, i) => i)\r\n    }\r\n\r\n    useEffect(() => {\r\n        const onTouchMove = () => { }\r\n        window.addEventListener('touchmove', onTouchMove)\r\n        return () => {\r\n            window.removeEventListener('touchmove', onTouchMove)\r\n        }\r\n    }, [])\r\n\r\n\r\n\r\n    const onDragStart = useCallback((node, y, touch) => {\r\n        if (isFetching) return\r\n        if (dragging) return\r\n\r\n        if (items.length === 1) {\r\n            return\r\n        }\r\n        const item = getItem(list.current, node)\r\n        if (!item) {\r\n            return\r\n        }\r\n        const [itemNode, position] = item\r\n\r\n        setDragging({\r\n            touch,\r\n            initialPosition: position,\r\n            itemHeights: Array.prototype.map.call(list.current.childNodes, node => node.getBoundingClientRect().height),\r\n            itemSpacing: list.current.childNodes[1].getBoundingClientRect().top - list.current.childNodes[0].getBoundingClientRect().bottom,\r\n            itemTopOffset: itemNode.getBoundingClientRect().top - list.current.childNodes[0].getBoundingClientRect().top,\r\n            dragStartY: y\r\n        })\r\n\r\n        draggedItemPosition.current = {\r\n            previous: position,\r\n            new: position,\r\n            shiftY: 0\r\n        }\r\n        itemShiftsY.current = items.map(_ => 0)\r\n    }, [dragging, items, isFetching])\r\n\r\n    const onTouchStart = useCallback((event) => {\r\n        if (event.touches.length > 1) {\r\n            return\r\n        }\r\n        const touch = event.changedTouches[0]\r\n        onDragStart(event.target.closest('li'), touch.pageY, touch.identifier)\r\n    }, [onDragStart])\r\n\r\n    const onMouseDown = useCallback((event) => {\r\n\r\n        if (event.button !== 0) {\r\n            return\r\n        }\r\n        onDragStart(event.target.closest('li'), event.pageY)\r\n    }, [onDragStart])\r\n\r\n    const onDragMove = useCallback((event) => {\r\n        if (!dragging) {\r\n            return\r\n        }\r\n\r\n        let y\r\n\r\n        if (dragging.touch !== undefined) {\r\n            for (const touch of event.changedTouches) {\r\n                if (touch.identifier === dragging.touch) {\r\n                    y = touch.pageY\r\n                    break\r\n                }\r\n            }\r\n        } else {\r\n            y = event.pageY\r\n        }\r\n\r\n        if (y === undefined) {\r\n            return\r\n        }\r\n\r\n        \r\n        event.preventDefault()\r\n        const movedY = y - dragging.dragStartY\r\n        const draggedItemOffsetTop = dragging.itemTopOffset + movedY\r\n\r\n        const position = getDraggedItemPosition(\r\n            dragging.itemHeights,\r\n            dragging.itemSpacing,\r\n            draggedItemOffsetTop,\r\n            dragging.initialPosition\r\n        )\r\n\r\n        const draggedItemHeight = dragging.itemHeights[dragging.initialPosition]\r\n\r\n        itemShiftsY.current = items.map((_, j) => {\r\n            if (j < dragging.initialPosition) {\r\n                if (j >= position) {\r\n                    return draggedItemHeight + dragging.itemSpacing\r\n                } else {\r\n                    return 0\r\n                }\r\n            } else if (j > dragging.initialPosition) {\r\n                if (j <= position) {\r\n                    return -1 * (draggedItemHeight + dragging.itemSpacing)\r\n                } else {\r\n                    return 0\r\n                }\r\n            } else {\r\n                return movedY\r\n            }\r\n        })\r\n\r\n        let i = 0\r\n        while (i < items.length) {\r\n            if (list.current.childNodes[i]) list.current.childNodes[i].style.transform = `translateY(${itemShiftsY.current[i]}px)`\r\n            i++\r\n        }\r\n\r\n        draggedItemPosition.current = {\r\n            previous: dragging.initialPosition,\r\n            new: position,\r\n            shiftY: getDraggedItemPositionY(\r\n                dragging.itemHeights,\r\n                dragging.itemSpacing,\r\n                dragging.initialPosition,\r\n                position\r\n            ) - getDraggedItemPositionY(\r\n                dragging.itemHeights,\r\n                dragging.itemSpacing,\r\n                dragging.initialPosition,\r\n                dragging.initialPosition\r\n            )\r\n        }\r\n\r\n    }, [dragging, items])\r\n\r\n\r\n    const onDragEnd = useCallback(() => {\r\n        setDragging()\r\n        setWillEndDragging(true)\r\n        const newItemsOrder = getNewItemsOrder(\r\n            itemsOrder.current,\r\n            draggedItemPosition.current.previous,\r\n            draggedItemPosition.current.new\r\n        )\r\n        setTimeout(() => {\r\n            setWillEndDragging(false)\r\n            itemsOrder.current = newItemsOrder\r\n            const finalItemsOrder = (newItemsOrder.map(i => items[i]))\r\n            setItems(finalItemsOrder)\r\n            onChange(finalItemsOrder, draggedItemPosition.current)\r\n        }, animationDuration)\r\n    }, [items, animationDuration, onChange])\r\n\r\n    const onTouchEnd = useCallback((event) => {\r\n        for (const touch of event.changedTouches) {\r\n            if (touch.identifier === touchId.current) {\r\n                onDragEnd()\r\n                return\r\n            }\r\n        }\r\n    }, [onDragEnd])\r\n\r\n    const onMouseUp = useCallback((event) => {\r\n        if (event.which !== 1) {\r\n            return\r\n        }\r\n        onDragEnd()\r\n    }, [onDragEnd])\r\n\r\n    useEffect(() => {\r\n        if (dragging) {\r\n            dragMoveHandler.current = onDragMove\r\n            if (dragging.touch !== undefined) {\r\n                touchId.current = dragging.touch\r\n                window.addEventListener('touchmove', dragMoveHandler.current, { passive: false })\r\n                window.addEventListener('touchend', onTouchEnd)\r\n            } else {\r\n                window.addEventListener('mousemove', dragMoveHandler.current, { passive: false })\r\n                window.addEventListener('mouseup', onMouseUp)\r\n            }\r\n        } else {\r\n            if (touchId.current !== undefined) {\r\n                touchId.current = undefined\r\n                window.removeEventListener('touchmove', dragMoveHandler.current, { passive: false })\r\n                window.removeEventListener('touchend', onTouchEnd)\r\n            } else {\r\n                window.removeEventListener('mousemove', dragMoveHandler.current, { passive: false })\r\n                window.removeEventListener('mouseup', onMouseUp)\r\n            }\r\n            dragMoveHandler.current = undefined\r\n        }\r\n    }, [dragging, onMouseUp, onTouchEnd, onDragMove])\r\n\r\n    const getNewItemsOrder = (itemsOrder, fromPosition, toPosition) => {\r\n        if (toPosition < fromPosition) {\r\n            return itemsOrder.slice(0, toPosition)\r\n                .concat(itemsOrder[fromPosition])\r\n                .concat(itemsOrder.slice(toPosition, fromPosition))\r\n                .concat(itemsOrder.slice(fromPosition + 1))\r\n        }\r\n        if (toPosition > fromPosition) {\r\n            return itemsOrder.slice(0, fromPosition)\r\n                .concat(itemsOrder.slice(fromPosition + 1, toPosition + 1))\r\n                .concat(itemsOrder[fromPosition])\r\n                .concat(itemsOrder.slice(toPosition + 1))\r\n        }\r\n        return itemsOrder.slice()\r\n    }\r\n\r\n    const getDraggedItemPositionY = (itemHeights, itemSpacing, initialPosition, position) => {\r\n        let top = 0\r\n        let j = 0\r\n        while (j < position) {\r\n            if (j === initialPosition) {\r\n                position++\r\n            } else {\r\n                top += itemHeights[j] + itemSpacing\r\n            }\r\n            j++\r\n        }\r\n        return top\r\n    }\r\n\r\n    const getDraggedItemPosition = (itemHeights, itemSpacing, draggedItemOffsetTop, initialPosition) => {\r\n        const scanLineY = draggedItemOffsetTop + itemHeights[initialPosition] / 2 + itemSpacing / 2\r\n        let y = 0\r\n        let i = 0\r\n        while (i < itemHeights.length) {\r\n            y += itemHeights[i] + itemSpacing\r\n            if (scanLineY <= y) {\r\n                return i\r\n            }\r\n            i++\r\n        }\r\n        return itemHeights.length - 1\r\n    }\r\n\r\n\r\n    const getItem = (list, node,) => {\r\n        let handle\r\n        let childNode\r\n        while (node) {\r\n            if (node === list) {\r\n\r\n                if (!handle) {\r\n                    return\r\n                }\r\n                if (childNode) {\r\n                    let i = 0\r\n                    while (i < node.childNodes.length) {\r\n                        if (node.childNodes[i] === childNode) {\r\n                            return [childNode, i]\r\n                        }\r\n                        i++\r\n                    }\r\n                }\r\n                break\r\n            }\r\n            if (node.dataset) {\r\n                handle = node\r\n            }\r\n            childNode = node\r\n            node = node.parentElement\r\n        }\r\n    }\r\n\r\n    const TRANSFORM_NONE = { transform: 'none' }\r\n\r\n    function getItemStyle(isDragged, willEndDragging, shiftY, animationDuration, animationEasing) {\r\n        const style = {\r\n            position: 'relative',\r\n            transition: `all ${animationDuration}ms ${animationEasing}`\r\n        }\r\n        if (isDragged) {\r\n            style.zIndex = 1\r\n            if (!willEndDragging) {\r\n                style.transition = undefined\r\n            }\r\n        } else {\r\n            style.transform = `translateY(${shiftY}px)`\r\n        }\r\n        return style\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (willEndDragging) {\r\n            list.current.childNodes[draggedItemPosition.current.previous].style.transform = `translateY(${draggedItemPosition.current.shiftY\r\n                }px)`\r\n        }\r\n    }, [willEndDragging])\r\n\r\n\r\n    const ListItems = (\r\n        items.map((item, i) => {\r\n            return <li style={(dragging || willEndDragging) ? getItemStyle(\r\n                i === draggedItemPosition.current.previous,\r\n                willEndDragging,\r\n                itemShiftsY.current[i],\r\n                animationDuration,\r\n                animationEasing\r\n            ) : TRANSFORM_NONE} key={item._id}>\r\n                <ItemComponent\r\n                    item={item}\r\n                    {...rest} />\r\n            </li>\r\n        })\r\n    )\r\n\r\n    return (\r\n        <ul\r\n            ref={list}\r\n            onTouchStart={onTouchStart}\r\n            onMouseDown={onMouseDown}\r\n            className={classes.itemsList}\r\n        >\r\n            {ListItems}\r\n        </ul>\r\n    )\r\n}\r\n\r\nexport default DragAndDropList","import React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { useHistory } from 'react-router'\r\nimport { changeTasksOrder, getTasks, isFetched, isFetching, reset, taskPage, tasks as tasksSelector } from '../../../features/task/tasksSlice'\r\nimport TopControll from '../../commonComponents/TopControll'\r\nimport ProjectSkeleton from '../projects/ProjectSkeleton'\r\nimport NewTask from './NewTask'\r\nimport Task from './Task'\r\nimport InfiniteScroll from 'react-infinite-scroll-component'\r\nimport DragAndDropList from '../../commonComponents/DragAndDropList'\r\n\r\nconst Tasks = ({ projectId, editable }) => {\r\n    const history = useHistory()\r\n    const [newTaskMenuOpen, setNewTaskMenuOpen] = useState(false)\r\n    const dispatch = useDispatch()\r\n    const [lookingForTask, setLookingForTask] = useState(false)\r\n    const tasks = useSelector(tasksSelector)\r\n    const pending = useSelector(isFetching)\r\n    const page = useSelector(taskPage)\r\n    const isFirstLoadComplete = useSelector(isFetched)\r\n    const handleToggleMenuOpen = () => {\r\n        setNewTaskMenuOpen(prev => !prev)\r\n    }\r\n    //console.log(tasks.map(task => ({ taskName: task.taskName, order: task.order })))\r\n\r\n    useEffect(\r\n        () => {\r\n            if (tasks.length === 0 && !pending.tasksLoading && !isFirstLoadComplete) {\r\n                dispatch(getTasks(projectId))\r\n            }\r\n        }, [dispatch, tasks.length, pending.tasksLoading, projectId, isFirstLoadComplete, history.location]\r\n    )\r\n\r\n    useEffect(\r\n        () => {\r\n            if (!history.location.state) return\r\n            if (!tasks.length) return\r\n            history.location.state.taskId && setLookingForTask(true)\r\n            let t = tasks.find(task => {\r\n                return task._id === history.location.state.taskId\r\n            })\r\n            if (!t && !pending.tasksLoading && history.location.state.taskId && page.currentPage <= page.totalPagesCount) {\r\n                dispatch(getTasks(projectId, tasks.length))\r\n            }\r\n            if (t) setLookingForTask(false)\r\n        }, [history.location.state, tasks, dispatch, page.currentPage, pending.tasksLoading, projectId, page.totalPagesCount]\r\n    )\r\n\r\n    useEffect(\r\n        () => {\r\n            return () => {\r\n                dispatch(reset())\r\n            }\r\n        }, [dispatch]\r\n    )\r\n\r\n\r\n    const fetchMore = () => {\r\n        dispatch(getTasks(projectId, tasks.length))\r\n    }\r\n\r\n    const tasksPreload = () => {\r\n        let result = []\r\n        for (let i = 0; i < 5; i++) {\r\n            result.push(<ProjectSkeleton key={i} />)\r\n        }\r\n        return result\r\n    }\r\n\r\n    const onChange = (items, order) => {\r\n        dispatch(changeTasksOrder(projectId, items, order))\r\n    }\r\n\r\n\r\n    if (!isFirstLoadComplete) return tasksPreload()\r\n    if (lookingForTask) return tasksPreload()\r\n\r\n    return (\r\n        <>\r\n            <TopControll context='tasks' disabled={editable} createNewText='New Task' listText='Tasks'\r\n                open={newTaskMenuOpen} toggleOpen={handleToggleMenuOpen} />\r\n            <NewTask projectId={projectId} open={newTaskMenuOpen} />\r\n\r\n            {(isFirstLoadComplete && !tasks.length) ? <h2>No tasks created yet :(</h2> : < InfiniteScroll\r\n                dataLength={page.currentPage}\r\n                hasMore={page.currentPage <= page.totalPagesCount}\r\n                next={fetchMore}\r\n                loader={<ProjectSkeleton />}\r\n                scrollableTarget='content'\r\n            >\r\n                <DragAndDropList\r\n                    onChange={onChange}\r\n                    projectId={projectId}\r\n                    isFetching={pending.orderChange}\r\n                    listItems={tasks}\r\n                    itemComponent={Task}\r\n                    animationDuration={200}\r\n                    animationEasing='ease-out' />\r\n            </InfiniteScroll>}\r\n        </>\r\n\r\n    )\r\n}\r\n\r\nexport default Tasks","import { Button, Typography } from '@material-ui/core'\r\nimport React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { useParams } from 'react-router'\r\nimport { activeProject, clearError, error, getProject, getProjectById, setActiveProject } from '../../../features/project/projectSlice'\r\nimport Tasks from '../tasks/Tasks'\r\nimport Project from './Project'\r\nimport ProjectSkeleton from './ProjectSkeleton'\r\nimport LockIcon from '@material-ui/icons/Lock';\r\nimport { NavLink } from 'react-router-dom'\r\nimport { linkStyle } from '../../commonStyles'\r\n\r\nconst ProjectPage = () => {\r\n    const params = useParams()\r\n    const dispatch = useDispatch()\r\n    const project = useSelector(getProjectById(params.projectId))\r\n    const projectError = useSelector(error)\r\n    const selectedProject = useSelector(activeProject)\r\n    // console.log(selectedProject, params)\r\n    useEffect(\r\n        () => {\r\n            dispatch(setActiveProject(project))\r\n            if (!project) dispatch(getProject(params.projectId))\r\n            return () => {\r\n                dispatch(setActiveProject(null))\r\n            }\r\n        }, [params.projectId, project, dispatch]\r\n    )\r\n\r\n    useEffect(() => {\r\n        return () => {\r\n            dispatch(clearError())\r\n        }\r\n    }, [dispatch])\r\n\r\n    if (projectError) return (\r\n        <>\r\n            <Typography>{projectError.message}</Typography>\r\n            <LockIcon style={{ fontSize: 50 }} />\r\n            <NavLink to='/home' style={linkStyle}><Button variant='contained'>Home</Button></NavLink>\r\n        </>\r\n    )\r\n    if (!selectedProject) return <ProjectSkeleton />\r\n    return (\r\n        <>\r\n            <Typography align='center' variant='h4' component='h1'>Complete this tasks</Typography>\r\n            <Project project={selectedProject} />\r\n            <Tasks projectId={selectedProject._id} />\r\n        </>\r\n\r\n    )\r\n}\r\n\r\nexport default ProjectPage","import { Card } from '@material-ui/core'\r\nimport React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { useParams } from 'react-router'\r\nimport { activeUser, clearActiveUser, getUser, isFetching } from '../../../features/users/usersSlice'\r\n\r\nconst Profile = () => {\r\n    const { userId } = useParams()\r\n    const profie = useSelector(activeUser)\r\n    const pending = useSelector(isFetching)\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(\r\n        () => {\r\n            if (!profie && !pending.activeUserFetching) {\r\n                dispatch(getUser(userId))\r\n            }\r\n        }, [dispatch, pending.activeUserFetching, profie, userId]\r\n\r\n    )\r\n    //Component unmount\r\n    useEffect(() => {\r\n        return () => {\r\n            dispatch(clearActiveUser())\r\n        }\r\n    }, [dispatch])\r\n\r\n    if (!profie) return <></>\r\n\r\n    return (\r\n        <>\r\n            <h1>{profie.user.alias}</h1>\r\n            {profie.projects.map(project => {\r\n                console.log(project)\r\n                return <Card key={project._id} style={{ marginTop: 10 }}>{project.projectName}</Card >\r\n            })}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Profile","import { createSlice } from '@reduxjs/toolkit';\r\nimport authApi from './apiCalls';\r\n\r\n\r\nexport const forgotPasswordSlice = createSlice({\r\n    name: 'forgotPassword',\r\n    initialState: {\r\n        pending: false,\r\n        error: null,\r\n        emailSended: false,\r\n        passwordChanged: false\r\n    },\r\n    reducers: {\r\n        pending: state => {\r\n            state.pending = true\r\n        },\r\n        success: state => {\r\n            state.pending = false\r\n        },\r\n        failure: (state, action) => {\r\n            state.pending = false\r\n            state.error = action.payload\r\n        },\r\n        clearError: state => {\r\n            state.error = null\r\n        },\r\n        setEmailSendedTrue: state => {\r\n            state.emailSended = true\r\n        },\r\n        setEmailSendedFalse: state => {\r\n            state.emailSended = false\r\n        },\r\n        setPasswordChanged: (state, action) => {\r\n            state.passwordChanged = action.payload\r\n        }\r\n    }\r\n})\r\n\r\nexport const { success, failure, clearError, pending, setEmailSendedFalse, setEmailSendedTrue, setPasswordChanged } = forgotPasswordSlice.actions\r\n\r\n//selectors\r\nexport const progress = state => state.forgotPassword.pending\r\nexport const error = state => state.forgotPassword.error\r\nexport const emailSended = state => state.forgotPassword.emailSended\r\nexport const passwordChanged = state => state.forgotPassword.passwordChanged\r\n\r\n//thunks\r\nexport const forgotPasswordHandler = (email) => (dispatch) => {\r\n    dispatch(pending())\r\n    authApi.forgotPassword(email).then(res => {\r\n        dispatch(success())\r\n        dispatch(setEmailSendedTrue())\r\n    }).catch(err => {\r\n        console.log(err.response.data)\r\n        dispatch(failure(err.response.data))\r\n        dispatch(setEmailSendedFalse())\r\n    })\r\n}\r\n\r\nexport const resetPassword = (password, resetCode) => (dispatch) => {\r\n    dispatch(pending())\r\n    authApi.resetPassword(password, resetCode).then(res => {\r\n        dispatch(success())\r\n        dispatch(setPasswordChanged(true))\r\n    }).catch(err => {\r\n        console.log(err.response.data)\r\n        dispatch(failure(err.response.data))\r\n    })\r\n}\r\n\r\n\r\nexport default forgotPasswordSlice.reducer;\r\n","import React from 'react';\r\nimport { Form, Field } from 'react-final-form'\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport AssignmentLateIcon from '@material-ui/icons/AssignmentLate';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { useStyles } from '../styles';\r\nimport { NavLink, Redirect } from 'react-router-dom';\r\nimport { authLink } from '../../commonStyles';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { composeValidators, isValidEmail, requiredEmail } from '../../form/validators';\r\nimport { Input } from '../../form/fields';\r\nimport SubmitButton from '../SubmitButton';\r\nimport { isAuthorized } from '../../../features/auth/authSlice';\r\nimport { forgotPasswordHandler, clearError, error, progress, emailSended } from '../../../features/auth/forgotPasswordSlice';\r\n\r\n\r\n\r\nconst ForgotPasswordForm = (props) => {\r\n    const classes = useStyles()\r\n    const dispatch = useDispatch()\r\n    const pending = useSelector(progress)\r\n    const serverError = useSelector(error)\r\n\r\n    const clearErr = () => {\r\n        dispatch(clearError())\r\n    }\r\n    return (\r\n        <form onSubmit={props.handleSubmit} className={classes.form}>\r\n            <div>\r\n                <Field\r\n                    validate={composeValidators(requiredEmail, isValidEmail)}\r\n                    label='Email'\r\n                    autoComplete='email'\r\n                    name='email'\r\n                    component={Input}\r\n                    autoFocus={true}\r\n                    fullWidth={true}\r\n                    err={serverError}\r\n                    clearError={clearErr}\r\n                >\r\n                </Field>\r\n            </div>\r\n            <SubmitButton buttonText='Send' progress={pending}></SubmitButton>\r\n        </form>\r\n\r\n\r\n    )\r\n}\r\n\r\n\r\nconst ForgotPassword = () => {\r\n    const classes = useStyles();\r\n    const dispatch = useDispatch()\r\n    const isAuth = useSelector(isAuthorized)\r\n    const emailReady = useSelector(emailSended)\r\n\r\n    if (isAuth) {\r\n        return <Redirect to='/' />\r\n    }\r\n\r\n    const onSubmit = (values) => {\r\n        dispatch(forgotPasswordHandler(values.email))\r\n    }\r\n\r\n\r\n    return (\r\n        <Grid container component=\"main\" className={classes.root}>\r\n            <CssBaseline />\r\n            <Grid item xs={false} sm={4} md={7} className={classes.image} />\r\n            <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\r\n                <div className={classes.paper}>\r\n                    <Avatar size='small' className={classes.avatar}>\r\n                        <AssignmentLateIcon />\r\n                    </Avatar>\r\n                    <Typography component=\"h1\" variant=\"h5\">\r\n                        Forgot password\r\n                    </Typography>\r\n                    {emailReady\r\n                        ? <Typography style={{ paddingTop: 20, paddingBottom: 20 }} align='center' variant='h6' component='h6' ><em>Please check your email to continue</em></Typography>\r\n                        : <Form onSubmit={onSubmit} component={ForgotPasswordForm} />}\r\n                    <Grid container>\r\n                        <Grid item xs>\r\n                            <NavLink style={authLink} to=\"/login\" variant=\"body2\">\r\n                                Login\r\n                             </NavLink>\r\n                        </Grid>\r\n                        <Grid item>\r\n                            Don't have an account? <NavLink style={authLink} to=\"/signup\">Sign Up</NavLink>\r\n                        </Grid>\r\n                    </Grid>\r\n                </div>\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n}\r\n\r\nexport default ForgotPassword","import React from 'react';\r\nimport { Form, Field } from 'react-final-form'\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport AssignmentLateIcon from '@material-ui/icons/AssignmentLate';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { useStyles } from '../styles';\r\nimport { NavLink, Redirect, useLocation } from 'react-router-dom';\r\nimport { authLink } from '../../commonStyles';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { composeValidators, paswordContainNumbersAndLetters, passwordLength, requiredPassword, passwordConfirmation } from '../../form/validators';\r\nimport { Input } from '../../form/fields';\r\nimport SubmitButton from '../SubmitButton';\r\nimport { isAuthorized } from '../../../features/auth/authSlice';\r\nimport { passwordChanged, progress, resetPassword } from '../../../features/auth/forgotPasswordSlice';\r\n\r\n\r\n\r\nconst ResetPasswordForm = (props) => {\r\n    const classes = useStyles()\r\n    const pending = useSelector(progress)\r\n\r\n\r\n    return (\r\n        <form onSubmit={props.handleSubmit} className={classes.form}>\r\n            <div>\r\n                <Field\r\n                    validate={composeValidators(requiredPassword, paswordContainNumbersAndLetters, passwordLength)}\r\n                    label='New password'\r\n                    name='password'\r\n                    type='password'\r\n                    autoComplete='new-password'\r\n                    component={Input}\r\n                    autoFocus={true}\r\n                    fullWidth={true}\r\n                >\r\n                </Field>\r\n            </div>\r\n            <div>\r\n                <Field\r\n                    validate={requiredPassword}\r\n                    autoComplete='new-password'\r\n                    label='Confirm password'\r\n                    type='password'\r\n                    name='passwordConfirmation'\r\n                    component={Input}\r\n                    fullWidth={true}\r\n                >\r\n                </Field>\r\n            </div>\r\n            <SubmitButton buttonText='Send' progress={pending}></SubmitButton>\r\n        </form >\r\n\r\n\r\n    )\r\n}\r\n\r\n\r\nconst ResetPassword = () => {\r\n    const classes = useStyles();\r\n    const dispatch = useDispatch()\r\n    const isAuth = useSelector(isAuthorized)\r\n    const location = useLocation()\r\n    const resetCode = location.pathname.split('/')[2]\r\n    const isPasswordChanged = useSelector(passwordChanged)\r\n\r\n    if (!resetCode) return <Redirect to='/login' />\r\n    if (isPasswordChanged) return <Redirect to='/login' />\r\n    if (isAuth) {\r\n        return <Redirect to='/' />\r\n    }\r\n\r\n    const onSubmit = (values) => {\r\n        dispatch(resetPassword(values.password, resetCode))\r\n    }\r\n\r\n\r\n    return (\r\n        <Grid container component=\"main\" className={classes.root}>\r\n            <CssBaseline />\r\n            <Grid item xs={false} sm={4} md={7} className={classes.image} />\r\n            <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\r\n                <div className={classes.paper}>\r\n                    <Avatar size='small' className={classes.avatar}>\r\n                        <AssignmentLateIcon />\r\n                    </Avatar>\r\n                    <Typography component=\"h1\" variant=\"h5\">\r\n                        Reset password\r\n                    </Typography>\r\n                    <Form validate={passwordConfirmation} onSubmit={onSubmit} component={ResetPasswordForm} />\r\n                    <Grid container>\r\n                        <Grid item xs>\r\n                            <NavLink style={authLink} to=\"/login\" variant=\"body2\">\r\n                                Login\r\n                             </NavLink>\r\n                        </Grid>\r\n                    </Grid>\r\n                </div>\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n}\r\n\r\nexport default ResetPassword","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { Route, Switch } from 'react-router'\r\nimport { isFetching } from '../../features/auth/authSlice'\r\nimport Login from '../Auth/login/Login'\r\nimport SignUp from '../Auth/signUp/SignUp'\r\nimport Projects from './projects/Projects'\r\nimport Users from './users/Users'\r\nimport Root from './Root'\r\nimport MyProfile from './users/MyProfile'\r\nimport ProjectPage from './projects/ProjectPage'\r\nimport Profile from './users/Profile'\r\nimport ForgotPassword from '../Auth/forgotPassword/ForgotPassword'\r\nimport ResetPassword from '../Auth/forgotPassword/ResetPassword'\r\n\r\nconst ContentSwitch = () => {\r\n    const progress = useSelector(isFetching)\r\n    if (progress) {\r\n        return <></>\r\n    }\r\n    return (\r\n        <Switch>\r\n            <Route path='/login' component={Login} />\r\n            <Route path='/signup' component={SignUp} />\r\n            <Route path='/resetPassword' component={ResetPassword} />\r\n            <Route path='/forgotpassword' component={ForgotPassword} />\r\n            <Route exact path='/projects' render={() => <Projects key={new Date()} />} />\r\n            <Route path='/projects/:projectId' component={ProjectPage} />\r\n            <Route path='/home' component={MyProfile} />\r\n            <Route exact path='/users' component={Users} />\r\n            <Route path='/users/:userId' component={Profile} />\r\n            <Route exact path='/' component={Root} />\r\n        </Switch>\r\n    )\r\n}\r\n\r\nexport default ContentSwitch","import { Button, CircularProgress, Typography } from '@material-ui/core'\r\nimport React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { isAuthorized, logout, isFetching } from '../../features/auth/authSlice';\r\n\r\n\r\nconst AuthButton = () => {\r\n    const isAuth = useSelector(isAuthorized);\r\n    const progress = useSelector(isFetching)\r\n    const dispatch = useDispatch()\r\n    const logoutJsx = <Typography color='textPrimary'>Logout</Typography>\r\n    const loginJsx = <Typography color='textPrimary'>Login</Typography>\r\n    const handleLogout = () => {\r\n        if (!isAuth) {\r\n            return\r\n        }\r\n        dispatch(logout())\r\n    }\r\n\r\n    return <>\r\n        {progress ? <CircularProgress color='inherit' size={24} /> :\r\n            <Button color='inherit' onClick={handleLogout}>{isAuth ? logoutJsx : loginJsx}</Button>}\r\n    </>\r\n}\r\n\r\nexport default AuthButton","import React from 'react'\r\n\r\nconst Context = React.createContext(null)\r\n\r\nexport default Context","import React, { useRef } from 'react';\r\nimport clsx from 'clsx';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport Box from '@material-ui/core/Box';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Container from '@material-ui/core/Container';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport Brightness3Icon from '@material-ui/icons/Brightness3';\r\nimport Brightness7Icon from '@material-ui/icons/Brightness7';\r\nimport { MainListItems, secondaryListItems } from './sideBar/listItems';\r\nimport { useStyles } from './styles';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { darkMode, sideBarOpen, toggleDarkMode, toggleSideBar } from '../features/theme/themeSlice';\r\nimport { NavLink } from 'react-router-dom';\r\nimport Copyright from './footer/Copyright';\r\nimport ContentSwitch from './content/ContentSwitch';\r\nimport AuthButton from './Auth/AuthButton';\r\nimport Context from './Context';\r\n\r\nexport default function BaseStricture() {\r\n    const classes = useStyles()\r\n    const mainContentRef = useRef()\r\n    const darkTheme = useSelector(darkMode)\r\n    const sideBarCollapse = useSelector(sideBarOpen)\r\n    const dispatch = useDispatch()\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <CssBaseline />\r\n            <AppBar position=\"absolute\" className={clsx(classes.appBar, sideBarCollapse && classes.appBarShift)}>\r\n                <Toolbar className={classes.toolbar}>\r\n                    <IconButton\r\n                        edge=\"start\"\r\n                        color=\"inherit\"\r\n                        aria-label=\"open drawer\"\r\n                        onClick={() => dispatch(toggleSideBar())}\r\n                        className={clsx(classes.menuButton, sideBarCollapse && classes.menuButtonHidden)}\r\n                    >\r\n                        <MenuIcon />\r\n                    </IconButton>\r\n                    <Typography component=\"h1\" variant=\"h6\" color=\"inherit\" noWrap className={classes.title}>\r\n                        TO_DO\r\n                    </Typography>\r\n                    <IconButton onClick={() => dispatch(toggleDarkMode())}>\r\n                        {darkTheme ? <Brightness3Icon /> : <Brightness7Icon />}\r\n                    </IconButton>\r\n                    <div style={{ minWidth: 90 }}>\r\n                        <NavLink className={classes.loginButton} to='/login'>\r\n                            <AuthButton />\r\n                        </NavLink>\r\n                    </div>\r\n\r\n                </Toolbar>\r\n            </AppBar>\r\n            <Drawer\r\n                variant=\"permanent\"\r\n                classes={{\r\n                    paper: clsx(classes.drawerPaper, !sideBarCollapse && classes.drawerPaperClose),\r\n                }}\r\n                open={sideBarCollapse}\r\n            >\r\n                <div className={classes.toolbarIcon}>\r\n                    <IconButton onClick={() => dispatch(toggleSideBar())}>\r\n                        <ChevronLeftIcon />\r\n                    </IconButton>\r\n                </div>\r\n\r\n                <Divider />\r\n                <List><MainListItems /></List>\r\n                <Divider />\r\n                <List>{secondaryListItems}</List>\r\n            </Drawer>\r\n            <main ref={mainContentRef} className={classes.content} id='content'>\r\n                <div className={classes.contentWraper} >\r\n                    <div className={classes.appBarSpacer} />\r\n                    <Container maxWidth=\"lg\" className={classes.container} >\r\n                        <Context.Provider value={mainContentRef}><ContentSwitch /></Context.Provider>\r\n                    </Container>\r\n                    <div className={classes.push}></div>\r\n                </div>\r\n                <Box className={classes.footer}>\r\n                    <Copyright />\r\n                </Box>\r\n            </main>\r\n        </div>\r\n    )\r\n}","import { ThemeProvider, createMuiTheme } from '@material-ui/core';\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { HashRouter as Router } from \"react-router-dom\";\nimport { dark, light } from './AppTheme';\nimport BaseStructure from './components/BaseStricture';\nimport { authMe, isAuthorized } from './features/auth/authSlice';\nimport { darkMode } from './features/theme/themeSlice';\n\nfunction App() {\n  const theme = useSelector(darkMode)\n  const darkTheme = createMuiTheme(dark)\n  const lightTheme = createMuiTheme(light)\n  const dispatch = useDispatch()\n  const auth = useSelector(isAuthorized)\n\n  useEffect(() => {\n    if (!auth) {\n      dispatch(authMe())\n    }\n  })\n\n  console.log(process.env.PUBLIC_URL)\n\n  return (\n    <ThemeProvider theme={theme ? darkTheme : lightTheme}>\n      <Router basename={process.env.PUBLIC_URL}>\n        <BaseStructure />\n      </Router>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","import { configureStore } from '@reduxjs/toolkit';\nimport themeReducer from '../features/theme/themeSlice'\nimport loginReducer from '../features/auth/loginSlice'\nimport signUpReducer from '../features/auth/signUpSlice'\nimport authReducer from '../features/auth/authSlice'\nimport projectReducer from '../features/project/projectSlice'\nimport taskReducer from '../features/task/tasksSlice'\nimport userReducer from '../features/users/usersSlice'\nimport searchReducer from '../features/search/searchSlice'\nimport forgotPasswordReducer from '../features/auth/forgotPasswordSlice'\n\nexport const store = configureStore({\n  reducer: {\n    theme: themeReducer,\n    login: loginReducer,\n    signUp: signUpReducer,\n    forgotPassword: forgotPasswordReducer,\n    auth: authReducer,\n    user: userReducer,\n    project: projectReducer,\n    task: taskReducer,\n    search: searchReducer,\n  },\n});\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { store } from './app/store';\nimport { Provider } from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  //<React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>,\n // </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}